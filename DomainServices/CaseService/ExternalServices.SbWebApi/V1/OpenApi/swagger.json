{
	"swagger": "2.0",
	"info": {
		"version": "v1",
		"title": "SBWebApi"
	},
	"host": "sb2_test_server.mpss.cz",
	"basePath": "/WebApi/FAT",
	"schemes": [
		"https"
	],
	"paths": {
		"/api/getBookOfTermsAndLoanPurpose": {
			"get": {
				"tags": [
					"BookOfTerms"
				],
				"operationId": "BookOfTerms_GetBookOfTermsAndLoanPurpose",
				"consumes": [],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "contract_number",
						"in": "query",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Book of terms and the loan purposes found and returned successfully",
						"schema": {
							"$ref": "#/definitions/BookOfTerms_response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/collaterals/instrument": {
			"post": {
				"tags": [
					"Collateral"
				],
				"operationId": "Collateral_BG_Instrument",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Coll_Request_Instrument"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Collateral instruments",
						"schema": {
							"$ref": "#/definitions/Coll_BG_Instrument_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/collaterals/contract": {
			"post": {
				"tags": [
					"Collateral"
				],
				"operationId": "Collateral_BG_Contract",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Coll_Request_Contract"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Collateral instruments",
						"schema": {
							"$ref": "#/definitions/Coll_BG_Contract_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/collaterals/owners": {
			"post": {
				"tags": [
					"Collateral"
				],
				"operationId": "Collateral_BG_Owners",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Coll_Request_Owners"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Collateral instruments",
						"schema": {
							"$ref": "#/definitions/Coll_BG_Owners_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/collaterals/relationship": {
			"post": {
				"tags": [
					"Collateral"
				],
				"operationId": "Collateral_BG_Relationship",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Coll_Request_Relationship"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Collateral instruments",
						"schema": {
							"$ref": "#/definitions/Coll_BG_Relationship_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/collaterals/valuation": {
			"post": {
				"tags": [
					"Collateral"
				],
				"operationId": "Collateral_BG_Valuation",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Coll_Request_Valuation"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Collateral instruments",
						"schema": {
							"$ref": "#/definitions/Coll_BG_Valuation_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/eventreport/documentbanksigned": {
			"post": {
				"tags": [
					"EventReport"
				],
				"operationId": "EventReport_DocumentBankSigned",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_DocumentBankSigned"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Event_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/eventreport/casestatechanged": {
			"post": {
				"tags": [
					"EventReport"
				],
				"operationId": "EventReport_CaseStateChanged",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_CaseStateChanged"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Event_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/eventreport/verificationstart": {
			"post": {
				"tags": [
					"EventReport"
				],
				"operationId": "EventReport_VerificationStart",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_VerificationStart"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Event_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/eventreport/verificationcommondocumentsstart": {
			"post": {
				"tags": [
					"EventReport"
				],
				"operationId": "EventReport_VerificationCommonDocumentsStart",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_VerificationCommonDocumentsStart"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Event_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/eventreport/verificationconfidentialdocumentsstart": {
			"post": {
				"tags": [
					"EventReport"
				],
				"operationId": "EventReport_VerificationConfidentialDocumentsStart",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_VerificationConfidentialDocumentsStart"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Event_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/eventreport/verificationconfidentialdocumentsdone": {
			"post": {
				"tags": [
					"EventReport"
				],
				"operationId": "EventReport_VerificationConfidentialDocumentsDone",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_VerificationConfidentialDocumentsDone"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Event_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/eventreport/verificationfinished": {
			"post": {
				"tags": [
					"EventReport"
				],
				"operationId": "EventReport_VerificationFinished",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_VerificationFinished"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Event_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/eventreport/verificationnotification": {
			"post": {
				"tags": [
					"EventReport"
				],
				"operationId": "EventReport_VerificationNotification",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_VerificationNotification"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Event_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/findtasks/bytaskid": {
			"post": {
				"tags": [
					"FindTasks"
				],
				"operationId": "FindTasks_ByTaskId",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_ByTaskId"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Find_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/findtasks/bycaseid": {
			"post": {
				"tags": [
					"FindTasks"
				],
				"operationId": "FindTasks_ByCaseId",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_ByCaseId"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Find_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/findtasks/bycontractno": {
			"post": {
				"tags": [
					"FindTasks"
				],
				"operationId": "FindTasks_ByContractNo",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_ByContractNo"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Find_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/findtasks/bycpmicp": {
			"post": {
				"tags": [
					"FindTasks"
				],
				"operationId": "FindTasks_ByCpmIcp",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_ByCpmIcp"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Find_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/findtasks/bypools": {
			"post": {
				"tags": [
					"FindTasks"
				],
				"operationId": "FindTasks_ByPools",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_ByPools"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Find_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/managetask/createtask": {
			"post": {
				"tags": [
					"ManageTask"
				],
				"operationId": "ManageTask_CreateTask",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_CreateTask"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_Manage_CreateTask_Response"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/managetask/accepttask": {
			"post": {
				"tags": [
					"ManageTask"
				],
				"operationId": "ManageTask_AcceptTask",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_AcceptTask"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_CommonResponse"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/managetask/changetask": {
			"post": {
				"tags": [
					"ManageTask"
				],
				"operationId": "ManageTask_ChangeTask",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_ChangeTask"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_CommonResponse"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/managetask/assigntask": {
			"post": {
				"tags": [
					"ManageTask"
				],
				"operationId": "ManageTask_AssignTask",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_AssignTask"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_CommonResponse"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/managetask/unassigntask": {
			"post": {
				"tags": [
					"ManageTask"
				],
				"operationId": "ManageTask_UnAssignTask",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_UnAssignTask"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_CommonResponse"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/managetask/adopttask": {
			"post": {
				"tags": [
					"ManageTask"
				],
				"operationId": "ManageTask_AdoptTask",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_AdoptTask"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_CommonResponse"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/managetask/completetask": {
			"post": {
				"tags": [
					"ManageTask"
				],
				"operationId": "ManageTask_CompleteTask",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_CompleteTask"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_CommonResponse"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/managetask/canceltask": {
			"post": {
				"tags": [
					"ManageTask"
				],
				"operationId": "ManageTask_CancelTask",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_CancelTask"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_CommonResponse"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/wfs/managetask/updatetask": {
			"post": {
				"tags": [
					"ManageTask"
				],
				"operationId": "ManageTask_UpdateTask",
				"consumes": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/x-www-form-urlencoded",
					"application/vnd.api+json"
				],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "request",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WFS_Request_UpdateTask"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event received successfully",
						"schema": {
							"$ref": "#/definitions/WFS_CommonResponse"
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/supportservice/getversioninfo": {
			"get": {
				"tags": [
					"SupportService"
				],
				"operationId": "SupportService_GetVersionInfo",
				"consumes": [],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "mode",
						"in": "query",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/GetVersionInfoResponse"
						}
					},
					"400": {
						"description": "",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		},
		"/api/transactions": {
			"get": {
				"tags": [
					"Transactions"
				],
				"operationId": "Transactions_GetTransactions",
				"consumes": [],
				"produces": [
					"application/json",
					"text/json",
					"application/xml",
					"text/xml",
					"application/vnd.api+json"
				],
				"parameters": [
					{
						"name": "accountId",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "accountNumber",
						"in": "query",
						"required": true,
						"type": "string"
					},
					{
						"name": "includeNoActive",
						"in": "query",
						"required": true,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "Transactions of account found and returned successfully",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/SBSS_AccountTH"
							}
						}
					},
					"400": {
						"description": "An invalid or missing input parameter, non existing account will result in a bad request",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": false
			}
		}
	},
	"definitions": {
		"BookOfTerms_response": {
			"type": "object",
			"properties": {
				"result": {
					"$ref": "#/definitions/CommonResult"
				},
				"bookOfTerms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BookOfTermsItem"
					}
				},
				"purposesOfLoan": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PurposeOfLoanItem"
					}
				},
				"purposeDetail": {
					"$ref": "#/definitions/PurposeDetail"
				},
				"loanInfo": {
					"$ref": "#/definitions/LoanInfo"
				}
			}
		},
		"CommonResult": {
			"type": "object",
			"properties": {
				"return_val": {
					"format": "int32",
					"type": "integer"
				},
				"return_text": {
					"type": "string"
				}
			}
		},
		"BookOfTermsItem": {
			"type": "object",
			"properties": {
				"nameOfTerm": {
					"type": "string"
				},
				"text": {
					"type": "string"
				},
				"isZov": {
					"type": "boolean"
				},
				"isLastConditionZov": {
					"type": "boolean"
				},
				"dateOfCompletion": {
					"format": "date-time",
					"type": "string"
				},
				"completionOperator": {
					"type": "string"
				},
				"actionCode": {
					"format": "int32",
					"type": "integer"
				},
				"typeOfSekcion": {
					"format": "int32",
					"type": "integer"
				},
				"phaseNumber": {
					"format": "int32",
					"type": "integer"
				},
				"orderInSection": {
					"type": "string"
				},
				"blockedTo": {
					"format": "date-time",
					"type": "string"
				},
				"isVisibleToClient": {
					"type": "boolean"
				},
				"isInReminding": {
					"type": "boolean"
				},
				"reminding_Deadline": {
					"format": "date-time",
					"type": "string"
				},
				"reminding_Condition": {
					"format": "int32",
					"type": "integer"
				},
				"reminding_DeadlineShiftInMonths": {
					"format": "int32",
					"type": "integer"
				}
			}
		},
		"PurposeOfLoanItem": {
			"type": "object",
			"properties": {
				"type": {
					"format": "int32",
					"type": "integer"
				},
				"isAdvanceDrawdownLoan": {
					"type": "boolean"
				},
				"amountOfPurpose": {
					"format": "double",
					"type": "number"
				},
				"undrawnLoanAmount": {
					"format": "double",
					"type": "number"
				},
				"allowedAmountToDraw": {
					"format": "double",
					"type": "number"
				}
			}
		},
		"PurposeDetail": {
			"type": "object",
			"properties": {
				"stateOfConstraction": {
					"format": "double",
					"type": "number"
				},
				"orderOfLastZov": {
					"format": "int32",
					"type": "integer"
				},
				"numberOfValuationOfLastZov": {
					"type": "string"
				},
				"feeForNextZov": {
					"format": "double",
					"type": "number"
				}
			}
		},
		"LoanInfo": {
			"type": "object",
			"properties": {
				"loanAmounth": {
					"format": "double",
					"type": "number"
				},
				"exhaustedLoanAmount": {
					"format": "double",
					"type": "number"
				},
				"sumOfPendingDrawdowns": {
					"format": "double",
					"type": "number"
				}
			}
		},
		"Coll_Request_Instrument": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/Coll_Header"
				},
				"message": {
					"$ref": "#/definitions/Coll_BG_Instrument"
				}
			}
		},
		"Coll_Header": {
			"type": "object",
			"properties": {
				"system": {
					"type": "string"
				},
				"login": {
					"type": "string"
				}
			}
		},
		"Coll_BG_Instrument": {
			"type": "object",
			"properties": {
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"companyCode": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"accountNumber": {
					"type": "string"
				}
			}
		},
		"Coll_BG_Instrument_Response": {
			"type": "object",
			"properties": {
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"companyCode": {
					"type": "string"
				},
				"collateralCategory": {
					"type": "string"
				},
				"collateralTypeCode": {
					"type": "string"
				},
				"collateralTypeCzech": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"insuranceValid": {
					"format": "int32",
					"type": "integer"
				},
				"insuranceBlocked": {
					"type": "string"
				},
				"insuranceContractDate": {
					"format": "date-time",
					"type": "string"
				},
				"borrowingPercentage": {
					"format": "double",
					"type": "number"
				},
				"resultingPercentage": {
					"format": "double",
					"type": "number"
				},
				"currency": {
					"type": "string"
				},
				"unitCount": {
					"format": "int32",
					"type": "integer"
				},
				"unitPrice": {
					"format": "double",
					"type": "number"
				},
				"nominalPrice": {
					"format": "double",
					"type": "number"
				},
				"descriptionLine1": {
					"type": "string"
				},
				"descriptionLine2": {
					"type": "string"
				},
				"descriptionLine3": {
					"type": "string"
				},
				"descriptionLine4": {
					"type": "string"
				},
				"dateOfAppraisal": {
					"format": "date-time",
					"type": "string"
				},
				"appraisalMethod": {
					"type": "string"
				},
				"accountNumber": {
					"type": "string"
				},
				"liabilityType": {
					"type": "string"
				},
				"ultimateEffectivityDate": {
					"format": "date-time",
					"type": "string"
				},
				"volatilityHaircut": {
					"format": "double",
					"type": "number"
				},
				"typeOfRealEstate": {
					"type": "string"
				},
				"priority": {
					"format": "int32",
					"type": "integer"
				},
				"sumLienJpu": {
					"format": "double",
					"type": "number"
				},
				"onlineValuationPossible": {
					"format": "int32",
					"type": "integer"
				},
				"lienOrder": {
					"format": "int32",
					"type": "integer"
				},
				"sumMPSSLoans": {
					"format": "double",
					"type": "number"
				},
				"sumLoansMandant": {
					"type": "string"
				},
				"postalCode": {
					"type": "string"
				},
				"result": {
					"$ref": "#/definitions/CommonResult"
				}
			}
		},
		"Coll_Request_Contract": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/Coll_Header"
				},
				"message": {
					"$ref": "#/definitions/Coll_BG_Contract"
				}
			}
		},
		"Coll_BG_Contract": {
			"type": "object",
			"properties": {
				"contractNumber": {
					"type": "string"
				},
				"companyCode": {
					"type": "string"
				},
				"contractStatus": {
					"type": "string"
				},
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"accountNumber": {
					"type": "string"
				}
			}
		},
		"Coll_BG_Contract_Response": {
			"type": "object",
			"properties": {
				"contractNumber": {
					"type": "string"
				},
				"companyCode": {
					"type": "string"
				},
				"contractDate": {
					"format": "date-time",
					"type": "string"
				},
				"contractStatus": {
					"type": "string"
				},
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"accountNumber": {
					"type": "string"
				},
				"virtueFromDate": {
					"format": "date-time",
					"type": "string"
				},
				"collateralCategory": {
					"type": "string"
				},
				"proceedingNumber": {
					"type": "string"
				},
				"delProceedingNumber": {
					"type": "string"
				},
				"contractManager": {
					"type": "string"
				},
				"result": {
					"$ref": "#/definitions/CommonResult"
				}
			}
		},
		"Coll_Request_Owners": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/Coll_Header"
				},
				"message": {
					"$ref": "#/definitions/Coll_BG_Owners"
				}
			}
		},
		"Coll_BG_Owners": {
			"type": "object",
			"properties": {
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"idOwner": {
					"format": "int64",
					"type": "integer"
				},
				"warrantorRoleType": {
					"type": "string"
				},
				"companyCode": {
					"type": "string"
				}
			}
		},
		"Coll_BG_Owners_Response": {
			"type": "object",
			"properties": {
				"owners": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Coll_BG_Owners_ResponseOne"
					}
				},
				"result": {
					"$ref": "#/definitions/CommonResult"
				}
			}
		},
		"Coll_BG_Owners_ResponseOne": {
			"type": "object",
			"properties": {
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"idOwner": {
					"format": "int64",
					"type": "integer"
				},
				"warrantorRoleType": {
					"type": "string"
				},
				"equityPercentage": {
					"format": "double",
					"type": "number"
				},
				"companyCode": {
					"type": "string"
				}
			}
		},
		"Coll_Request_Relationship": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/Coll_Header"
				},
				"message": {
					"$ref": "#/definitions/Coll_BG_Relationship"
				}
			}
		},
		"Coll_BG_Relationship": {
			"type": "object",
			"properties": {
				"accountNumber": {
					"type": "string"
				},
				"loanContractNumber": {
					"type": "string"
				},
				"usageStatuses": {
					"type": "string"
				},
				"contractStatus": {
					"type": "string"
				},
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"companyCode": {
					"type": "string"
				},
				"appraisalMethod": {
					"type": "string"
				}
			}
		},
		"Coll_BG_Relationship_Response": {
			"type": "object",
			"properties": {
				"relationships": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Coll_BG_Relationship_ResponseOne"
					}
				},
				"result": {
					"$ref": "#/definitions/CommonResult"
				}
			}
		},
		"Coll_BG_Relationship_ResponseOne": {
			"type": "object",
			"properties": {
				"accountNumber": {
					"type": "string"
				},
				"loanContractNumber": {
					"type": "string"
				},
				"sumUsedValue": {
					"format": "double",
					"type": "number"
				},
				"sumUsedValueOther": {
					"format": "double",
					"type": "number"
				},
				"usageStatuses": {
					"type": "string"
				},
				"contractNumber": {
					"type": "string"
				},
				"contractStatus": {
					"type": "string"
				},
				"nominalValue": {
					"format": "double",
					"type": "number"
				},
				"availableValue": {
					"format": "double",
					"type": "number"
				},
				"airbEligibility": {
					"type": "string"
				},
				"currencyHaircut": {
					"format": "double",
					"type": "number"
				},
				"retailEligibility": {
					"type": "string"
				},
				"caEligibility": {
					"type": "string"
				},
				"ifrsEligibility": {
					"type": "string"
				},
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"companyCode": {
					"type": "string"
				},
				"appraisalMethod": {
					"type": "string"
				}
			}
		},
		"Coll_Request_Valuation": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/Coll_Header"
				},
				"message": {
					"$ref": "#/definitions/Coll_BG_Valuation"
				}
			}
		},
		"Coll_BG_Valuation": {
			"type": "object",
			"properties": {
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"appraisalMethod": {
					"type": "string"
				},
				"companyCode": {
					"type": "string"
				}
			}
		},
		"Coll_BG_Valuation_Response": {
			"type": "object",
			"properties": {
				"idValuation": {
					"format": "int64",
					"type": "integer"
				},
				"statementNumber": {
					"type": "string"
				},
				"idCollateral": {
					"format": "int64",
					"type": "integer"
				},
				"unitPriceForValuation": {
					"format": "double",
					"type": "number"
				},
				"unitCount": {
					"format": "int64",
					"type": "integer"
				},
				"appraisalMethod": {
					"type": "string"
				},
				"dateOfAppraisal": {
					"format": "date-time",
					"type": "string"
				},
				"insertWhen": {
					"format": "date-time",
					"type": "string"
				},
				"companyCode": {
					"type": "string"
				},
				"usedCollateralValue": {
					"format": "double",
					"type": "number"
				},
				"priceCurrent": {
					"format": "double",
					"type": "number"
				},
				"priceFuture": {
					"format": "double",
					"type": "number"
				},
				"priceType": {
					"type": "string"
				},
				"result": {
					"$ref": "#/definitions/CommonResult"
				}
			}
		},
		"WFS_Request_DocumentBankSigned": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Event_DocumentBankSigned"
				}
			}
		},
		"WFS_Header": {
			"type": "object",
			"properties": {
				"system": {
					"type": "string"
				},
				"login": {
					"type": "string"
				}
			}
		},
		"WFS_Event_DocumentBankSigned": {
			"type": "object",
			"properties": {
				"external_id": {
					"type": "string"
				},
				"document_type": {
					"type": "string"
				},
				"contract_no": {
					"type": "string"
				},
				"bank_sign_date": {
					"format": "date-time",
					"type": "string"
				},
				"bank_sign_login": {
					"type": "string"
				}
			}
		},
		"WFS_Event_Response": {
			"type": "object",
			"properties": {
				"request_id": {
					"format": "int32",
					"type": "integer"
				},
				"result": {
					"$ref": "#/definitions/CommonResult"
				}
			}
		},
		"WFS_Request_CaseStateChanged": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Event_CaseStateChanged"
				}
			}
		},
		"WFS_Event_CaseStateChanged": {
			"type": "object",
			"properties": {
				"case_id": {
					"format": "int32",
					"type": "integer"
				},
				"uver_id": {
					"format": "int32",
					"type": "integer"
				},
				"contract_no": {
					"type": "string"
				},
				"loan_no": {
					"type": "string"
				},
				"jmeno_prijmeni": {
					"type": "string"
				},
				"case_state_id": {
					"format": "int32",
					"type": "integer"
				},
				"case_state": {
					"type": "string"
				},
				"product_type": {
					"format": "int32",
					"type": "integer"
				},
				"owner_cpm": {
					"type": "string"
				},
				"owner_icp": {
					"type": "string"
				},
				"mandant": {
					"format": "int32",
					"type": "integer"
				},
				"client_benefits": {
					"format": "int32",
					"type": "integer"
				},
				"risk_business_case_id": {
					"type": "string"
				}
			}
		},
		"WFS_Request_VerificationStart": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Event_VerificationStart"
				}
			}
		},
		"WFS_Event_VerificationStart": {
			"type": "object",
			"properties": {
				"uver_id": {
					"format": "int32",
					"type": "integer"
				}
			}
		},
		"WFS_Request_VerificationCommonDocumentsStart": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Event_VerificationCommonDocumentsStart"
				}
			}
		},
		"WFS_Event_VerificationCommonDocumentsStart": {
			"type": "object",
			"properties": {
				"uver_id": {
					"format": "int32",
					"type": "integer"
				},
				"klient_id": {
					"format": "int32",
					"type": "integer"
				},
				"cas_id": {
					"type": "string"
				},
				"klient_schema": {
					"type": "string"
				},
				"documents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/WFS_VerificationDocumentItem"
					}
				}
			}
		},
		"WFS_VerificationDocumentItem": {
			"type": "object",
			"properties": {
				"doc_type": {
					"type": "string"
				},
				"doc_desc": {
					"type": "string"
				}
			}
		},
		"WFS_Request_VerificationConfidentialDocumentsStart": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Event_VerificationConfidentialDocumentsStart"
				}
			}
		},
		"WFS_Event_VerificationConfidentialDocumentsStart": {
			"type": "object",
			"properties": {
				"uver_id": {
					"format": "int32",
					"type": "integer"
				},
				"klient_id": {
					"format": "int32",
					"type": "integer"
				},
				"cas_id": {
					"type": "string"
				},
				"klient_schema": {
					"type": "string"
				},
				"documents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/WFS_VerificationDocumentItem"
					}
				}
			}
		},
		"WFS_Request_VerificationConfidentialDocumentsDone": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Event_VerificationConfidentialDocumentsDone"
				}
			}
		},
		"WFS_Event_VerificationConfidentialDocumentsDone": {
			"type": "object",
			"properties": {
				"uver_id": {
					"format": "int32",
					"type": "integer"
				},
				"cas_id": {
					"type": "string"
				}
			}
		},
		"WFS_Request_VerificationFinished": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Event_VerificationFinished"
				}
			}
		},
		"WFS_Event_VerificationFinished": {
			"type": "object",
			"properties": {
				"uver_id": {
					"format": "int32",
					"type": "integer"
				}
			}
		},
		"WFS_Request_VerificationNotification": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Event_VerificationNotification"
				}
			}
		},
		"WFS_Event_VerificationNotification": {
			"type": "object",
			"properties": {
				"risk_bc_id": {
					"type": "string"
				},
				"ntf_subj": {
					"type": "string"
				},
				"ntf_text": {
					"type": "string"
				},
				"ntf_url": {
					"type": "string"
				}
			}
		},
		"WFS_Request_ByTaskId": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Find_ByTaskId"
				}
			}
		},
		"WFS_Find_ByTaskId": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"task_state": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			}
		},
		"WFS_Find_Response": {
			"type": "object",
			"properties": {
				"items_found": {
					"format": "int32",
					"type": "integer"
				},
				"tasks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/WFS_FindItem"
					}
				},
				"result": {
					"$ref": "#/definitions/CommonResult"
				}
			}
		},
		"WFS_FindItem": {
			"type": "object",
			"properties": {
				"task": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/WFS_MetadataItem"
					}
				}
			}
		},
		"WFS_MetadataItem": {
			"type": "object",
			"properties": {
				"mtdt_def": {
					"type": "string"
				},
				"mtdt_val": {
					"type": "string"
				}
			}
		},
		"WFS_Request_ByCaseId": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Find_ByCaseId"
				}
			}
		},
		"WFS_Find_ByCaseId": {
			"type": "object",
			"properties": {
				"case_id": {
					"format": "int32",
					"type": "integer"
				},
				"task_state": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"search_pattern": {
					"type": "string"
				}
			}
		},
		"WFS_Request_ByContractNo": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Find_ByContractNo"
				}
			}
		},
		"WFS_Find_ByContractNo": {
			"type": "object",
			"properties": {
				"contract_no": {
					"type": "string"
				},
				"task_state": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"search_pattern": {
					"type": "string"
				}
			}
		},
		"WFS_Request_ByCpmIcp": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Find_ByCpmIcp"
				}
			}
		},
		"WFS_Find_ByCpmIcp": {
			"type": "object",
			"properties": {
				"owner_cpm": {
					"type": "string"
				},
				"owner_icp": {
					"type": "string"
				},
				"task_state": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			}
		},
		"WFS_Request_ByPools": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Find_ByPools"
				}
			}
		},
		"WFS_Find_ByPools": {
			"type": "object",
			"properties": {
				"pools": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"task_state": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			}
		},
		"WFS_Request_CreateTask": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Manage_CreateTask"
				}
			}
		},
		"WFS_Manage_CreateTask": {
			"type": "object",
			"properties": {
				"task_type": {
					"format": "int32",
					"type": "integer"
				},
				"task_type_noby": {
					"format": "int32",
					"type": "integer"
				},
				"parent_task_set": {
					"format": "int32",
					"type": "integer"
				},
				"performer": {
					"type": "string"
				},
				"metadata": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/WFS_MetadataItem"
					}
				}
			}
		},
		"WFS_Manage_CreateTask_Response": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"process_id": {
					"format": "int32",
					"type": "integer"
				},
				"result": {
					"$ref": "#/definitions/CommonResult"
				}
			}
		},
		"WFS_Request_AcceptTask": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Manage_AcceptTask"
				}
			}
		},
		"WFS_Manage_AcceptTask": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"performer": {
					"type": "string"
				}
			}
		},
		"WFS_CommonResponse": {
			"type": "object",
			"properties": {
				"result": {
					"$ref": "#/definitions/CommonResult"
				}
			}
		},
		"WFS_Request_ChangeTask": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Manage_ChangeTask"
				}
			}
		},
		"WFS_Manage_ChangeTask": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"task_type": {
					"format": "int32",
					"type": "integer"
				}
			}
		},
		"WFS_Request_AssignTask": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Manage_AssignTask"
				}
			}
		},
		"WFS_Manage_AssignTask": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"performer": {
					"type": "string"
				}
			}
		},
		"WFS_Request_UnAssignTask": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Manage_UnAssignTask"
				}
			}
		},
		"WFS_Manage_UnAssignTask": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"note": {
					"type": "string"
				}
			}
		},
		"WFS_Request_AdoptTask": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Manage_AdoptTask"
				}
			}
		},
		"WFS_Manage_AdoptTask": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"note": {
					"type": "string"
				}
			}
		},
		"WFS_Request_CompleteTask": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Manage_CompleteTask"
				}
			}
		},
		"WFS_Manage_CompleteTask": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"metadata": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/WFS_MetadataItem"
					}
				}
			}
		},
		"WFS_Request_CancelTask": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Manage_CancelTask"
				}
			}
		},
		"WFS_Manage_CancelTask": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"note": {
					"type": "string"
				}
			}
		},
		"WFS_Request_UpdateTask": {
			"type": "object",
			"properties": {
				"header": {
					"$ref": "#/definitions/WFS_Header"
				},
				"message": {
					"$ref": "#/definitions/WFS_Manage_UpdateTask"
				}
			}
		},
		"WFS_Manage_UpdateTask": {
			"type": "object",
			"properties": {
				"task_id": {
					"format": "int32",
					"type": "integer"
				},
				"metadata": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/WFS_MetadataItem"
					}
				}
			}
		},
		"GetVersionInfoResponse": {
			"type": "object",
			"properties": {
				"Version": {
					"type": "string"
				},
				"BuildDir": {
					"type": "string"
				},
				"WebServicesBuilt": {
					"type": "string"
				},
				"CoreBuilt": {
					"type": "string"
				},
				"ShareBuilt": {
					"type": "string"
				},
				"MachineName": {
					"type": "string"
				},
				"DB": {
					"type": "string"
				},
				"DBsysdate": {
					"type": "string"
				},
				"DOD": {
					"type": "string"
				},
				"User": {
					"type": "string"
				},
				"DebugInfo": {
					"type": "string"
				},
				"Mandant": {
					"format": "int32",
					"type": "integer"
				}
			}
		},
		"SBSS_AccountTH": {
			"type": "object",
			"properties": {
				"accountBase": {
					"$ref": "#/definitions/SBSS_AccountBase"
				},
				"transactions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SBSS_Transaction"
					}
				}
			}
		},
		"SBSS_AccountBase": {
			"type": "object",
			"properties": {
				"idAccount": {
					"format": "int32",
					"type": "integer"
				},
				"accountNumber": {
					"format": "int64",
					"type": "integer"
				},
				"accountPrefixExt": {
					"format": "int32",
					"type": "integer"
				},
				"accountNumberExt": {
					"format": "int64",
					"type": "integer"
				},
				"iban": {
					"type": "string"
				},
				"accountCurrency": {
					"type": "string"
				},
				"accountType": {
					"type": "string"
				},
				"accountStatus": {
					"type": "boolean"
				},
				"exportDate": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"SBSS_Transaction": {
			"type": "object",
			"properties": {
				"transactionID": {
					"format": "int32",
					"type": "integer"
				},
				"accountingDate": {
					"format": "date-time",
					"type": "string"
				},
				"valDate": {
					"format": "date-time",
					"type": "string"
				},
				"accountingAttribute": {
					"format": "int32",
					"type": "integer"
				},
				"transactionDesc": {
					"type": "string"
				},
				"transactionAmount": {
					"format": "double",
					"type": "number"
				},
				"payerAccount": {
					"type": "string"
				},
				"payerAccountName": {
					"type": "string"
				},
				"constantSymbol": {
					"type": "string"
				},
				"variableSymbol": {
					"type": "string"
				},
				"specificSymbol": {
					"type": "string"
				},
				"textMessage": {
					"type": "string"
				}
			}
		}
	}
}