// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace cz.kb.api.mortgageservicingevents.v2.mortgageinstance
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// Time that interest rate is fixed and can not change. CDM entity name(s): FixedRatePeriod.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class FixedRatePeriod : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""FixedRatePeriod"",""doc"":""Time that interest rate is fixed and can not change. CDM entity name(s): FixedRatePeriod."",""namespace"":""cz.kb.api.mortgageservicingevents.v2.mortgageinstance"",""fields"":[{""name"":""nextRefixDate"",""doc"":""Date, when the next fixed period of the loan (mortgage) has to be defined.Datum pristi refixace urokove sazby uveru (hypoteky). CDM attribute class name: FixedRatePeriodNextRefixDate. Standard avro date represented by the number of days from the unix epoch, see avro specification: https://avro.apache.org/docs/1.8.0/spec.html. Consider using converters to date class in code generator (see KB Integration Platform wiki for schema registry chapter)."",""type"":{""type"":""int"",""logicalType"":""date""}},{""name"":""period"",""doc"":""Total length of period in units. If no units are given, default is month. CDM attribute class name: FixedRatePeriodPeriod. Attribute has simple type ST_PositiveInt with description: Integer with a constraint. The value must be a positive number, i.e. zero is excluded."",""type"":""int""}]}");
		/// <summary>
		/// Date, when the next fixed period of the loan (mortgage) has to be defined.Datum pristi refixace urokove sazby uveru (hypoteky). CDM attribute class name: FixedRatePeriodNextRefixDate. Standard avro date represented by the number of days from the unix epoch, see avro specification: https://avro.apache.org/docs/1.8.0/spec.html. Consider using converters to date class in code generator (see KB Integration Platform wiki for schema registry chapter).
		/// </summary>
		private System.DateTime _nextRefixDate;
		/// <summary>
		/// Total length of period in units. If no units are given, default is month. CDM attribute class name: FixedRatePeriodPeriod. Attribute has simple type ST_PositiveInt with description: Integer with a constraint. The value must be a positive number, i.e. zero is excluded.
		/// </summary>
		private int _period;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return FixedRatePeriod._SCHEMA;
			}
		}
		/// <summary>
		/// Date, when the next fixed period of the loan (mortgage) has to be defined.Datum pristi refixace urokove sazby uveru (hypoteky). CDM attribute class name: FixedRatePeriodNextRefixDate. Standard avro date represented by the number of days from the unix epoch, see avro specification: https://avro.apache.org/docs/1.8.0/spec.html. Consider using converters to date class in code generator (see KB Integration Platform wiki for schema registry chapter).
		/// </summary>
		public System.DateTime nextRefixDate
		{
			get
			{
				return this._nextRefixDate;
			}
			set
			{
				this._nextRefixDate = value;
			}
		}
		/// <summary>
		/// Total length of period in units. If no units are given, default is month. CDM attribute class name: FixedRatePeriodPeriod. Attribute has simple type ST_PositiveInt with description: Integer with a constraint. The value must be a positive number, i.e. zero is excluded.
		/// </summary>
		public int period
		{
			get
			{
				return this._period;
			}
			set
			{
				this._period = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.nextRefixDate;
			case 1: return this.period;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.nextRefixDate = (System.DateTime)fieldValue; break;
			case 1: this.period = (System.Int32)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
