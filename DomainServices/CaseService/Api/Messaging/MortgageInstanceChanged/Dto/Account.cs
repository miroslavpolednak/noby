// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace cz.kb.api.mortgageservicingevents.v2.mortgageinstance
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// A representation of a product instance as implemented in bank's core systems, systems delivering product's functionality to customer.. ## This entity represents information about account as is used in payment landscape. For example has properties current balance, account number, iban, currency, available balance,.. . If this entity represents multicurrency (MCY) master account (multicurrency=true):: the account is called master (parent) account; it acts as envelope for supported currencies subaccounts set; balances and limits attributes represent aggregated values from the currencies subaccounts (converted to base currency); currency represents base (nominated) currency of master account.; payment domain systems work only with master account information or identification (single master account number plus currency); transactions, holds and interests occure only on specific currency subaccounts.;In KB finance called 'aplikacni ucet'.This is not product sales entity. Do not confuse with CurrentAccountProduct. Also do not represents general ledger accounts. CDM entity name(s): TechnicalItemInstance,Account.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class Account : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"Account\",\"doc\":\"A representation of a product instance a" +
				"s implemented in bank\'s core systems, systems delivering product\'s functionality" +
				" to customer.. ## This entity represents information about account as is used in" +
				" payment landscape. For example has properties current balance, account number, " +
				"iban, currency, available balance,.. . If this entity represents multicurrency (" +
				"MCY) master account (multicurrency=true):: the account is called master (parent)" +
				" account; it acts as envelope for supported currencies subaccounts set; balances" +
				" and limits attributes represent aggregated values from the currencies subaccoun" +
				"ts (converted to base currency); currency represents base (nominated) currency o" +
				"f master account.; payment domain systems work only with master account informat" +
				"ion or identification (single master account number plus currency); transactions" +
				", holds and interests occure only on specific currency subaccounts.;In KB financ" +
				"e called \'aplikacni ucet\'.This is not product sales entity. Do not confuse with " +
				"CurrentAccountProduct. Also do not represents general ledger accounts. CDM entit" +
				"y name(s): TechnicalItemInstance,Account.\",\"namespace\":\"cz.kb.api.mortgageservic" +
				"ingevents.v2.mortgageinstance\",\"fields\":[{\"name\":\"accountNumber\",\"type\":{\"type\":" +
				"\"record\",\"name\":\"AccountNumber\",\"doc\":\"AccountNumber: .AccountNumberPrefix; .Acc" +
				"ountNumberCore; .AccountNumberBankCode; .AccountNumberIban;. ## Account identifi" +
				"cation number defined by CNB for domestic paymentshttps://www.cnb.cz/export/site" +
				"s/cnb/cs/legislativa/.galleries/vyhlasky/vyhlaska_169_2011.pdf. ## IBAN (Interna" +
				"tional Bank Account Number) representation of the account number by ISO 13616 - " +
				"for detail description see attribute notes. CDM entity name(s): AccountNumberCNB" +
				",AccountNumberIBAN.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgagei" +
				"nstance\",\"fields\":[{\"name\":\"bankCode\",\"doc\":\"Bank code: 4 digits; contains value" +
				"s from \'Directory of payment system codes\' by CNB (https://www.cnb.cz/en/payment" +
				"s/accounts-bank-codes/); e.g.: for \'1234-567890/0100\' the bank code is \'0100\';. " +
				"CDM attribute class name: AccountNumberCNBBankCode. Attribute has simple type ST" +
				"_BankCode with description: Kod banky.\",\"type\":{\"type\":\"string\",\"avro.java.strin" +
				"g\":\"String\",\"pattern\":\"^.{0,4}$\"}},{\"name\":\"core\",\"doc\":\"Core/base of account nu" +
				"mber (i.e. the number without the bank code and without prefix): 2 to 10 digits;" +
				" mandatory; e.g.: for \'1234-567890/0100\' the core is \'567890\';. CDM attribute cl" +
				"ass name: AccountNumberCNBCore. Attribute has simple type ST_AccountNumberCore w" +
				"ith description: Cislo uctu bez prefixu.An account number excluding a prefix.\",\"" +
				"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"0*[1-9][0-9]*[1-9]" +
				"[0-9]*\"}},{\"name\":\"iban\",\"doc\":\"IBAN representation of the account number: up to" +
				" 32 characters - XX## #### #### #### #### #### #### ####; first 2 characters - c" +
				"ountry code; next 2 characters are check digits; rest is country dependent - for" +
				" CZ&amp;SK - 4 digits bank code, 6 digits prefix, 10 digits core/base account nu" +
				"mber; without blanks for electronic communication; grouped by 4 characters for u" +
				"ser interfaces;. CDM attribute class name: AccountNumberIBANIban. Attribute has " +
				"simple type ST_IBAN with description: The International Bank Account Number (IBA" +
				"N).\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"[A-Z][A-Z][0" +
				"-9][0-9][0-9A-Z]*\"}},{\"name\":\"prefix\",\"doc\":\"Account number prefix: up to 6 digi" +
				"ts; optional - could be empty or contain zeroes \'000000\'; e.g.: for \'1234-567890" +
				"/0100\' the prefix is \'1234\';. CDM attribute class name: AccountNumberCNBPrefix. " +
				"Attribute has simple type ST_AccountNumberPrefix with description: Cislo uctu pr" +
				"efix.An account number prefix. \",\"default\":null,\"type\":[\"null\",{\"type\":\"string\"," +
				"\"avro.java.string\":\"String\",\"pattern\":\"[0-9]*\"}]}]}},{\"name\":\"AccountState\",\"def" +
				"ault\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TechnicalItemInstanceState\",\"" +
				"doc\":\"Multicodebook property of technical product instance state. As the name su" +
				"ggests, it defines state of product instance in its core system.It is multicodeb" +
				"ook as state of technical product instance is generic concept and will differ ac" +
				"ross technical product instance core systems. CDM entity name(s): TechnicalItemI" +
				"nstanceState.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgageinstanc" +
				"e\",\"fields\":[{\"name\":\"class\",\"doc\":\"Attribute that defines codebook that is used" +
				" in attribute state. CDM attribute class name: TechnicalItemInstanceStateClass. " +
				"Codebook type: CB_TechnicalProductInstanceStateClass.\",\"type\":{\"type\":\"string\",\"" +
				"avro.java.string\":\"String\"}},{\"name\":\"state\",\"doc\":\"Multicodebook value of state" +
				" itself. Attribute has specific codebook type: CB_Undefined. CDM attribute class" +
				" name: TechnicalItemInstanceStateState. Attribute has simple type CB_MultiCodebo" +
				"okValue with description: Represents information that value can be from more tha" +
				"n one codebook. Codebook type: CB_Undefined.\",\"type\":{\"type\":\"string\",\"avro.java" +
				".string\":\"String\",\"pattern\":\"^.{0,100}$\"}}]}]}]}");
		private cz.kb.api.mortgageservicingevents.v2.mortgageinstance.AccountNumber _accountNumber;
		private cz.kb.api.mortgageservicingevents.v2.mortgageinstance.TechnicalItemInstanceState _AccountState;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return Account._SCHEMA;
			}
		}
		public cz.kb.api.mortgageservicingevents.v2.mortgageinstance.AccountNumber accountNumber
		{
			get
			{
				return this._accountNumber;
			}
			set
			{
				this._accountNumber = value;
			}
		}
		public cz.kb.api.mortgageservicingevents.v2.mortgageinstance.TechnicalItemInstanceState AccountState
		{
			get
			{
				return this._AccountState;
			}
			set
			{
				this._AccountState = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.accountNumber;
			case 1: return this.AccountState;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.accountNumber = (cz.kb.api.mortgageservicingevents.v2.mortgageinstance.AccountNumber)fieldValue; break;
			case 1: this.AccountState = (cz.kb.api.mortgageservicingevents.v2.mortgageinstance.TechnicalItemInstanceState)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
