// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace cz.kb.api.mortgageservicingevents.v3.mortgageinstance
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// This entity represents information about account as is used in payment landscape. For example has properties current balance, account number, iban, currency, available balance,.. . If this entity represents multicurrency (MCY) master account (multicurrency=true):: the account is called master (parent) account; it acts as envelope for supported currencies subaccounts set; balances and limits attributes represent aggregated values from the currencies subaccounts (converted to base currency); currency represents base (nominated) currency of master account.; payment domain systems work only with master account information or identification (single master account number plus currency); transactions, holds and interests occure only on specific currency subaccounts.;To be deleted:In KB finance called 'aplikacni ucet'.This is not product sales entity. Do not confuse with CurrentAccountProduct. Also do not represents general ledger accounts.. ## A representation of a product instance as implemented in bank's core systems, systems delivering product's functionality to customer. CDM entity name(s): Account,TechnicalItemInstance.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class Account : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"Account\",\"doc\":\"This entity represents information about" +
				" account as is used in payment landscape. For example has properties current bal" +
				"ance, account number, iban, currency, available balance,.. . If this entity repr" +
				"esents multicurrency (MCY) master account (multicurrency=true):: the account is " +
				"called master (parent) account; it acts as envelope for supported currencies sub" +
				"accounts set; balances and limits attributes represent aggregated values from th" +
				"e currencies subaccounts (converted to base currency); currency represents base " +
				"(nominated) currency of master account.; payment domain systems work only with m" +
				"aster account information or identification (single master account number plus c" +
				"urrency); transactions, holds and interests occure only on specific currency sub" +
				"accounts.;To be deleted:In KB finance called \'aplikacni ucet\'.This is not produc" +
				"t sales entity. Do not confuse with CurrentAccountProduct. Also do not represent" +
				"s general ledger accounts.. ## A representation of a product instance as impleme" +
				"nted in bank\'s core systems, systems delivering product\'s functionality to custo" +
				"mer. CDM entity name(s): Account,TechnicalItemInstance.\",\"namespace\":\"cz.kb.api." +
				"mortgageservicingevents.v3.mortgageinstance\",\"fields\":[{\"name\":\"accountNumber\",\"" +
				"type\":{\"type\":\"record\",\"name\":\"AccountNumber\",\"doc\":\"AccountNumber: .AccountNumb" +
				"erPrefix; .AccountNumberCore; .AccountNumberBankCode; .AccountNumberIban;. ## IB" +
				"AN (International Bank Account Number) representation of the account number by I" +
				"SO 13616 - for detail description see attribute notes. ## Account identification" +
				" number defined by CNB for domestic paymentshttps://www.cnb.cz/export/sites/cnb/" +
				"cs/legislativa/.galleries/vyhlasky/vyhlaska_169_2011.pdf. CDM entity name(s): Ac" +
				"countNumberIBAN,AccountNumberCNB.\",\"namespace\":\"cz.kb.api.mortgageservicingevent" +
				"s.v3.mortgageinstance\",\"fields\":[{\"name\":\"bankCode\",\"doc\":\"Bank code: 4 digits; " +
				"contains values from \'Directory of payment system codes\' by CNB (https://www.cnb" +
				".cz/en/payments/accounts-bank-codes/); e.g.: for \'1234-567890/0100\' the bank cod" +
				"e is \'0100\';. CDM attribute class name: AccountNumberCNBBankCode. Attribute has " +
				"simple type ST_BankCode with description: Kod banky.\",\"type\":{\"type\":\"string\",\"a" +
				"vro.java.string\":\"String\",\"pattern\":\"^.{0,4}$\"}},{\"name\":\"core\",\"doc\":\"Core/base" +
				" of account number (i.e. the number without the bank code and without prefix): 2" +
				" to 10 digits; mandatory; e.g.: for \'1234-567890/0100\' the core is \'567890\';. CD" +
				"M attribute class name: AccountNumberCNBCore. Attribute has simple type ST_Accou" +
				"ntNumberCore with description: Cislo uctu bez prefixu.An account number excludin" +
				"g a prefix.\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"0*[1" +
				"-9][0-9]*[1-9][0-9]*\"}},{\"name\":\"iban\",\"doc\":\"IBAN representation of the account" +
				" number: up to 32 characters - XX## #### #### #### #### #### #### ####; first 2 " +
				"characters - country code; next 2 characters are check digits; rest is country d" +
				"ependent - for CZ&amp;SK - 4 digits bank code, 6 digits prefix, 10 digits core/b" +
				"ase account number; without blanks for electronic communication; grouped by 4 ch" +
				"aracters for user interfaces;. CDM attribute class name: AccountNumberIBANIban. " +
				"Attribute has simple type ST_IBAN with description: The International Bank Accou" +
				"nt Number (IBAN).\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\"" +
				":\"[A-Z][A-Z][0-9][0-9][0-9A-Z]*\"}},{\"name\":\"prefix\",\"doc\":\"Account number prefix" +
				": up to 6 digits; optional - could be empty or contain zeroes \'000000\'; e.g.: fo" +
				"r \'1234-567890/0100\' the prefix is \'1234\';. CDM attribute class name: AccountNum" +
				"berCNBPrefix. Attribute has simple type ST_AccountNumberPrefix with description:" +
				" Cislo uctu prefix.An account number prefix. \",\"default\":null,\"type\":[\"null\",{\"t" +
				"ype\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"[0-9]*\"}]}]}},{\"name\":\"Acco" +
				"untState\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TechnicalItemIn" +
				"stanceState\",\"doc\":\"Multicodebook property of technical product instance state. " +
				"As the name suggests, it defines state of product instance in its core system.It" +
				" is multicodebook as state of technical product instance is generic concept and " +
				"will differ across technical product instance core systems. CDM entity name(s): " +
				"TechnicalItemInstanceState.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v3.m" +
				"ortgageinstance\",\"fields\":[{\"name\":\"class\",\"doc\":\"Attribute that defines codeboo" +
				"k that is used in attribute state. CDM attribute class name: TechnicalItemInstan" +
				"ceStateClass. Codebook type: CB_TechnicalProductInstanceStateClass.\",\"type\":{\"ty" +
				"pe\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"state\",\"doc\":\"Multicodebook " +
				"value of state itself. Attribute has specific codebook type: CB_Undefined. CDM a" +
				"ttribute class name: TechnicalItemInstanceStateState. Attribute has simple type " +
				"CB_MultiCodebookValue with description: Represents information that value can be" +
				" from more than one codebook. Codebook type: CB_Undefined.\",\"type\":{\"type\":\"stri" +
				"ng\",\"avro.java.string\":\"String\",\"pattern\":\"^.{0,100}$\"}}]}]}]}");
		private cz.kb.api.mortgageservicingevents.v3.mortgageinstance.AccountNumber _accountNumber;
		private cz.kb.api.mortgageservicingevents.v3.mortgageinstance.TechnicalItemInstanceState _AccountState;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return Account._SCHEMA;
			}
		}
		public cz.kb.api.mortgageservicingevents.v3.mortgageinstance.AccountNumber accountNumber
		{
			get
			{
				return this._accountNumber;
			}
			set
			{
				this._accountNumber = value;
			}
		}
		public cz.kb.api.mortgageservicingevents.v3.mortgageinstance.TechnicalItemInstanceState AccountState
		{
			get
			{
				return this._AccountState;
			}
			set
			{
				this._AccountState = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.accountNumber;
			case 1: return this.AccountState;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.accountNumber = (cz.kb.api.mortgageservicingevents.v3.mortgageinstance.AccountNumber)fieldValue; break;
			case 1: this.AccountState = (cz.kb.api.mortgageservicingevents.v3.mortgageinstance.TechnicalItemInstanceState)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
