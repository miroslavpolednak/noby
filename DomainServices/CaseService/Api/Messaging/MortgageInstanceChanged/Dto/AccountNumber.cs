// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace cz.kb.api.mortgageservicingevents.v3.mortgageinstance
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// AccountNumber: .AccountNumberPrefix; .AccountNumberCore; .AccountNumberBankCode; .AccountNumberIban;. ## IBAN (International Bank Account Number) representation of the account number by ISO 13616 - for detail description see attribute notes. ## Account identification number defined by CNB for domestic paymentshttps://www.cnb.cz/export/sites/cnb/cs/legislativa/.galleries/vyhlasky/vyhlaska_169_2011.pdf. CDM entity name(s): AccountNumberIBAN,AccountNumberCNB.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class AccountNumber : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"AccountNumber\",\"doc\":\"AccountNumber: .AccountNumberPrefi" +
				"x; .AccountNumberCore; .AccountNumberBankCode; .AccountNumberIban;. ## IBAN (Int" +
				"ernational Bank Account Number) representation of the account number by ISO 1361" +
				"6 - for detail description see attribute notes. ## Account identification number" +
				" defined by CNB for domestic paymentshttps://www.cnb.cz/export/sites/cnb/cs/legi" +
				"slativa/.galleries/vyhlasky/vyhlaska_169_2011.pdf. CDM entity name(s): AccountNu" +
				"mberIBAN,AccountNumberCNB.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v3.mo" +
				"rtgageinstance\",\"fields\":[{\"name\":\"bankCode\",\"doc\":\"Bank code: 4 digits; contain" +
				"s values from \'Directory of payment system codes\' by CNB (https://www.cnb.cz/en/" +
				"payments/accounts-bank-codes/); e.g.: for \'1234-567890/0100\' the bank code is \'0" +
				"100\';. CDM attribute class name: AccountNumberCNBBankCode. Attribute has simple " +
				"type ST_BankCode with description: Kod banky.\",\"type\":{\"type\":\"string\",\"avro.jav" +
				"a.string\":\"String\",\"pattern\":\"^.{0,4}$\"}},{\"name\":\"core\",\"doc\":\"Core/base of acc" +
				"ount number (i.e. the number without the bank code and without prefix): 2 to 10 " +
				"digits; mandatory; e.g.: for \'1234-567890/0100\' the core is \'567890\';. CDM attri" +
				"bute class name: AccountNumberCNBCore. Attribute has simple type ST_AccountNumbe" +
				"rCore with description: Cislo uctu bez prefixu.An account number excluding a pre" +
				"fix.\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"0*[1-9][0-9" +
				"]*[1-9][0-9]*\"}},{\"name\":\"iban\",\"doc\":\"IBAN representation of the account number" +
				": up to 32 characters - XX## #### #### #### #### #### #### ####; first 2 charact" +
				"ers - country code; next 2 characters are check digits; rest is country dependen" +
				"t - for CZ&amp;SK - 4 digits bank code, 6 digits prefix, 10 digits core/base acc" +
				"ount number; without blanks for electronic communication; grouped by 4 character" +
				"s for user interfaces;. CDM attribute class name: AccountNumberIBANIban. Attribu" +
				"te has simple type ST_IBAN with description: The International Bank Account Numb" +
				"er (IBAN).\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"[A-Z]" +
				"[A-Z][0-9][0-9][0-9A-Z]*\"}},{\"name\":\"prefix\",\"doc\":\"Account number prefix: up to" +
				" 6 digits; optional - could be empty or contain zeroes \'000000\'; e.g.: for \'1234" +
				"-567890/0100\' the prefix is \'1234\';. CDM attribute class name: AccountNumberCNBP" +
				"refix. Attribute has simple type ST_AccountNumberPrefix with description: Cislo " +
				"uctu prefix.An account number prefix. \",\"default\":null,\"type\":[\"null\",{\"type\":\"s" +
				"tring\",\"avro.java.string\":\"String\",\"pattern\":\"[0-9]*\"}]}]}");
		/// <summary>
		/// Bank code: 4 digits; contains values from 'Directory of payment system codes' by CNB (https://www.cnb.cz/en/payments/accounts-bank-codes/); e.g.: for '1234-567890/0100' the bank code is '0100';. CDM attribute class name: AccountNumberCNBBankCode. Attribute has simple type ST_BankCode with description: Kod banky.
		/// </summary>
		private string _bankCode;
		/// <summary>
		/// Core/base of account number (i.e. the number without the bank code and without prefix): 2 to 10 digits; mandatory; e.g.: for '1234-567890/0100' the core is '567890';. CDM attribute class name: AccountNumberCNBCore. Attribute has simple type ST_AccountNumberCore with description: Cislo uctu bez prefixu.An account number excluding a prefix.
		/// </summary>
		private string _core;
		/// <summary>
		/// IBAN representation of the account number: up to 32 characters - XX## #### #### #### #### #### #### ####; first 2 characters - country code; next 2 characters are check digits; rest is country dependent - for CZ&amp;SK - 4 digits bank code, 6 digits prefix, 10 digits core/base account number; without blanks for electronic communication; grouped by 4 characters for user interfaces;. CDM attribute class name: AccountNumberIBANIban. Attribute has simple type ST_IBAN with description: The International Bank Account Number (IBAN).
		/// </summary>
		private string _iban;
		/// <summary>
		/// Account number prefix: up to 6 digits; optional - could be empty or contain zeroes '000000'; e.g.: for '1234-567890/0100' the prefix is '1234';. CDM attribute class name: AccountNumberCNBPrefix. Attribute has simple type ST_AccountNumberPrefix with description: Cislo uctu prefix.An account number prefix. 
		/// </summary>
		private string _prefix;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return AccountNumber._SCHEMA;
			}
		}
		/// <summary>
		/// Bank code: 4 digits; contains values from 'Directory of payment system codes' by CNB (https://www.cnb.cz/en/payments/accounts-bank-codes/); e.g.: for '1234-567890/0100' the bank code is '0100';. CDM attribute class name: AccountNumberCNBBankCode. Attribute has simple type ST_BankCode with description: Kod banky.
		/// </summary>
		public string bankCode
		{
			get
			{
				return this._bankCode;
			}
			set
			{
				this._bankCode = value;
			}
		}
		/// <summary>
		/// Core/base of account number (i.e. the number without the bank code and without prefix): 2 to 10 digits; mandatory; e.g.: for '1234-567890/0100' the core is '567890';. CDM attribute class name: AccountNumberCNBCore. Attribute has simple type ST_AccountNumberCore with description: Cislo uctu bez prefixu.An account number excluding a prefix.
		/// </summary>
		public string core
		{
			get
			{
				return this._core;
			}
			set
			{
				this._core = value;
			}
		}
		/// <summary>
		/// IBAN representation of the account number: up to 32 characters - XX## #### #### #### #### #### #### ####; first 2 characters - country code; next 2 characters are check digits; rest is country dependent - for CZ&amp;SK - 4 digits bank code, 6 digits prefix, 10 digits core/base account number; without blanks for electronic communication; grouped by 4 characters for user interfaces;. CDM attribute class name: AccountNumberIBANIban. Attribute has simple type ST_IBAN with description: The International Bank Account Number (IBAN).
		/// </summary>
		public string iban
		{
			get
			{
				return this._iban;
			}
			set
			{
				this._iban = value;
			}
		}
		/// <summary>
		/// Account number prefix: up to 6 digits; optional - could be empty or contain zeroes '000000'; e.g.: for '1234-567890/0100' the prefix is '1234';. CDM attribute class name: AccountNumberCNBPrefix. Attribute has simple type ST_AccountNumberPrefix with description: Cislo uctu prefix.An account number prefix. 
		/// </summary>
		public string prefix
		{
			get
			{
				return this._prefix;
			}
			set
			{
				this._prefix = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.bankCode;
			case 1: return this.core;
			case 2: return this.iban;
			case 3: return this.prefix;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.bankCode = (System.String)fieldValue; break;
			case 1: this.core = (System.String)fieldValue; break;
			case 2: this.iban = (System.String)fieldValue; break;
			case 3: this.prefix = (System.String)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
