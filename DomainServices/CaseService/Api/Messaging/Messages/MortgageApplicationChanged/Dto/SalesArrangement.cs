// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace cz.kb.api.mortgageservicingevents.v2.mortgageapplication
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// Entity representing any formal 'agreement' within any sales related area. CDM entity name(s): SalesArrangement.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class SalesArrangement : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"SalesArrangement\",\"doc\":\"Entity representing any formal " +
				"\'agreement\' within any sales related area. CDM entity name(s): SalesArrangement." +
				"\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgageapplication\",\"fields" +
				"\":[{\"name\":\"agreement\",\"type\":{\"type\":\"record\",\"name\":\"Agreement\",\"doc\":\"\'Obchod" +
				"\'Agreement is performing sale to customer. Agreement contains product, service i" +
				"nstances, product offer and context required. Agreement is only present during s" +
				"ale action (selling, modification or closing  of product or service instances. T" +
				"here is no agreement in presales..#CZ#Obchod zprostredkovava prodej zakaznikovi." +
				" Obchod obsahuje produkt, instanci sluzby, nabidku produktu a pozadovany kontext" +
				". O obchodu je mozne mluvit pouze v pripade akce predeje (prodej, zmena nebo uza" +
				"vreni produktu, potazmo instance sluzby). O obchodu se neda mluvit v pripade pre" +
				"dprodeje. CDM entity name(s): Agreement.\",\"namespace\":\"cz.kb.api.mortgageservici" +
				"ngevents.v2.mortgageapplication\",\"fields\":[{\"name\":\"agreementApproval\",\"default\"" +
				":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Approval\",\"doc\":\"General entity re" +
				"presenting approval process E.g. agreement or exception approval. CDM entity nam" +
				"e(s): Approval.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgageappli" +
				"cation\",\"fields\":[{\"name\":\"on\",\"doc\":\"Time when overall approval was made. CDM a" +
				"ttribute class name: ApprovalOn. Standard avro dateTime represented by the numbe" +
				"r of milliseconds from the unix epoch, see avro specification: https://avro.apac" +
				"he.org/docs/1.8.0/spec.html. Consider using converters to dateTime class in code" +
				" generator (see KB Integration Platform wiki for schema registry chapter).\",\"def" +
				"ault\":null,\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}]},{\"n" +
				"ame\":\"requestedOn\",\"doc\":\"Time when overall approval was requested. CDM attribut" +
				"e class name: ApprovalRequestedOn. Standard avro dateTime represented by the num" +
				"ber of milliseconds from the unix epoch, see avro specification: https://avro.ap" +
				"ache.org/docs/1.8.0/spec.html. Consider using converters to dateTime class in co" +
				"de generator (see KB Integration Platform wiki for schema registry chapter).\",\"t" +
				"ype\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}]}]}},{\"name\":\"Arrangeme" +
				"ntAcceptanceTermination\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"" +
				"ArrangementAcceptance\",\"doc\":\"\'Root of\' acceptance of arrangement. I.e. covers a" +
				"ll properties and relationships regarding acceptance of arrangement.Example of a" +
				"cceptance of arrangement is signing of contract. CDM entity name(s): Arrangement" +
				"Acceptance.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgageapplicati" +
				"on\",\"fields\":[{\"name\":\"on\",\"doc\":\"Date when overall assent was reached. CDM attr" +
				"ibute class name: ArrangementAcceptanceOn. Standard avro date represented by the" +
				" number of days from the unix epoch, see avro specification: https://avro.apache" +
				".org/docs/1.8.0/spec.html. Consider using converters to date class in code gener" +
				"ator (see KB Integration Platform wiki for schema registry chapter).\",\"type\":{\"t" +
				"ype\":\"int\",\"logicalType\":\"date\"}}]}]},{\"name\":\"FirstSignArrangementAcceptance\",\"" +
				"default\":null,\"type\":[\"null\",\"ArrangementAcceptance\"]},{\"name\":\"MortgageInstance" +
				"Requested\",\"type\":{\"type\":\"record\",\"name\":\"MortgageInstance\",\"doc\":\"Mortgage pro" +
				"duct instance. CDM entity name(s): MortgageInstance.\",\"namespace\":\"cz.kb.api.mor" +
				"tgageservicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":\"instanceState\",\"" +
				"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"InstanceState\",\"doc\":\"Stat" +
				"e of any marketable item instance (agreement, product instance, service instance" +
				",...).#CZ#Stav instance jakekoliv prodejne polozky (obchod, instance produktu, i" +
				"nstance sluzby...). CDM entity name(s): InstanceState.\",\"namespace\":\"cz.kb.api.m" +
				"ortgageservicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":\"instanceStateC" +
				"ode\",\"type\":{\"type\":\"record\",\"name\":\"InstanceStateCode\",\"doc\":\"Multicodebook pro" +
				"perty of marketable item instance state (agreement, product instance, service in" +
				"stance,...) identifier.It is multicodebook because state is generic property and" +
				" individual product/agreements/... have individually defined state machines.#CZ#" +
				"Vicehodnotova ciselnikova promenna identifikatoru stavu predejnych polozek (obch" +
				"od, instance produktu, instance sluzby...). Jedna se o vicehodnotou ciselnikovou" +
				" promenou, protoze stav je obecna promenna. Ta ma individualne definovane stavy " +
				"v zavislosti na tom, zda jde o obchod, produkt... . CDM entity name(s): Instance" +
				"StateCode.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgageapplicatio" +
				"n\",\"fields\":[{\"name\":\"state\",\"doc\":\"Codebook value of state itself.#CZ#Vlastni c" +
				"iselnikova hodnota stavu. Attribute has specific codebook type: CB_MortgageLifeC" +
				"yclePhase. CDM attribute class name: InstanceStateCodeState. Attribute has simpl" +
				"e type CB_MultiCodebookValue with description: Represents information that value" +
				" can be from more than one codebook. Codebook type: CB_MortgageLifeCyclePhase.\"," +
				"\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"^.{0,100}$\"}}]}}]" +
				"}]},{\"name\":\"LifeCycleInstanceState\",\"default\":null,\"type\":[\"null\",\"InstanceStat" +
				"e\"]},{\"name\":\"loanAmount\",\"type\":{\"type\":\"record\",\"name\":\"LoanAmount\",\"doc\":\"Vys" +
				"ka uveruInformation about loan amount. This is static information. Change only w" +
				"ith sale or maintenance action. CDM entity name(s): LoanAmount.\",\"namespace\":\"cz" +
				".kb.api.mortgageservicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":\"limit" +
				"\",\"doc\":\"Vyska uveru, ktora bola schvalena. (Pozor, nie je nutne suma, ktoru si " +
				"klient skutocne poziacia)Allowed loan limit. It is maximum amount that customer " +
				"can borrow from bank.E.g. credit card limit, overdraft limit, or contracted cons" +
				"umer loan amount. CDM attribute class name: LoanAmountLimit. Attribute has simpl" +
				"e type ST_AmountMoney with description: Castka.Decimal number representing an am" +
				"ount of money.\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":17,\"s" +
				"cale\":2}}]}},{\"name\":\"loanInstanceInfo\",\"type\":{\"type\":\"record\",\"name\":\"LoanInst" +
				"anceInfo\",\"doc\":\"Information entity representing any loan product (instance of p" +
				"roduct). CDM entity name(s): LoanInstanceInfo.\",\"namespace\":\"cz.kb.api.mortgages" +
				"ervicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":\"loanInstallments\",\"typ" +
				"e\":{\"type\":\"record\",\"name\":\"LoanInstallments\",\"doc\":\"One installment amount. It " +
				"is information entity. It can be used for any installment. CDM entity name(s): L" +
				"oanInstallments.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgageappl" +
				"ication\",\"fields\":[{\"name\":\"dayInMonth\",\"doc\":\"Day within month when installment" +
				" is due to be paid. CDM attribute class name: LoanInstallmentsDayInMonth. Codebo" +
				"ok type: CB_DayOfMonth.\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{" +
				"\"name\":\"firstAnnuityLoanIndividualInstallment\",\"default\":null,\"type\":[\"null\",{\"t" +
				"ype\":\"record\",\"name\":\"FirstAnnuityLoanIndividualInstallment\",\"doc\":\"Individual/c" +
				"oncrete repayment of loan - one loan installment. CDM entity name(s): LoanIndivi" +
				"dualInstallment.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgageappl" +
				"ication\",\"fields\":[{\"name\":\"on\",\"doc\":\"Date of installment to be repaid/was repa" +
				"id. CDM attribute class name: LoanIndividualInstallmentOn. Standard avro date re" +
				"presented by the number of days from the unix epoch, see avro specification: htt" +
				"ps://avro.apache.org/docs/1.8.0/spec.html. Consider using converters to date cla" +
				"ss in code generator (see KB Integration Platform wiki for schema registry chapt" +
				"er).\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}}]}]},{\"name\":\"loanIndividualIns" +
				"tallment\",\"type\":{\"type\":\"record\",\"name\":\"LoanIndividualInstallment\",\"doc\":\"Indi" +
				"vidual/concrete repayment of loan - one loan installment. CDM entity name(s): Lo" +
				"anIndividualInstallment.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mort" +
				"gageapplication\",\"fields\":[{\"name\":\"amount\",\"doc\":\"Total amount that has to paid" +
				" as one loan installment. CDM attribute class name: LoanIndividualInstallmentAmo" +
				"unt. Attribute has simple type ST_AmountMoney with description: Castka.Decimal n" +
				"umber representing an amount of money.\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"de" +
				"cimal\",\"precision\":17,\"scale\":2}}]}}]}}]}},{\"name\":\"loanInterestRate\",\"type\":{\"t" +
				"ype\":\"record\",\"name\":\"LoanInterestRate\",\"doc\":\"Specific interest rate of propose" +
				"d or sold loan business product. This is only THE (primary) interest rate. This " +
				"is NOT any other interest rate on product. CDM entity name(s): LoanInterestRate." +
				"\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgageapplication\",\"fields" +
				"\":[{\"name\":\"fixedRatePeriod\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"nam" +
				"e\":\"FixedRatePeriod\",\"doc\":\"Time that interest rate is fixed and can not change." +
				" CDM entity name(s): FixedRatePeriod.\",\"namespace\":\"cz.kb.api.mortgageservicinge" +
				"vents.v2.mortgageapplication\",\"fields\":[{\"name\":\"period\",\"doc\":\"Total length of " +
				"period in units. If no units are given, default is month. CDM attribute class na" +
				"me: FixedRatePeriodPeriod. Attribute has simple type ST_PositiveInt with descrip" +
				"tion: Integer with a constraint. The value must be a positive number, i.e. zero " +
				"is excluded.\",\"type\":\"int\"}]}]},{\"name\":\"value\",\"doc\":\"Resulting interest rate, " +
				"i.e. what customer sees.Urokova mira uveru.(High level) vbs + srn + margin. CDM " +
				"attribute class name: LoanInterestRateValue. Attribute has simple type ST_Intere" +
				"stRate with description: Urok.Represents an interest rate or its part, (Interest" +
				" rate, SRN, Margin).E. g. 1.0 (=100%), 0.25 (=25%)Limited at 100000%\",\"type\":{\"t" +
				"ype\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":11,\"scale\":8}}]}},{\"name\":\"mktI" +
				"temInstanceInfo\",\"type\":{\"type\":\"record\",\"name\":\"MktItemInstanceInfo\",\"doc\":\"Inf" +
				"ormation entity. Entity that is used to provide information about any instance o" +
				"f marketable item (product, service, frame agreement, bundle,...). CDM entity na" +
				"me(s): MktItemInstanceInfo.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.m" +
				"ortgageapplication\",\"fields\":[{\"name\":\"catalogueMktItemInOfferSpecsInfo\",\"type\":" +
				"{\"type\":\"record\",\"name\":\"CatalogueMktItemInOfferSpecsInfo\",\"doc\":\"Information ab" +
				"out catalogue specification of business product in offer.catalogue = no situatio" +
				"n/context available, i.e. generic definition of product.  CDM entity name(s): Ca" +
				"talogueMktItemInOfferSpecsInfo.\",\"namespace\":\"cz.kb.api.mortgageservicingevents." +
				"v2.mortgageapplication\",\"fields\":[{\"name\":\"catalogueItemObjectCode\",\"type\":{\"typ" +
				"e\":\"record\",\"name\":\"CatalogueItemObjectCode\",\"doc\":\"Multiattribute property of a" +
				"ny catalog item identification (product, service, offer...). The identifier (obj" +
				"ect code) does not change when the version changes Multi-attribute is used becau" +
				"se there is not only one identification of the bank\'s product items (products, s" +
				"ervices), but there can be several.#CZ#Multiatributova vlastnost jakekoli identi" +
				"fikace katalogove polozky (produktu, sluzby, nabidky...). Identifikator (object " +
				"code) se nemeni pri zmene verze Vice atributu je pouzito z duvodu ze neexistuje " +
				"pouze jedina identifikace produktovych polozek banky (produktu, sluzeb), ale muz" +
				"e jich byt vice. CDM entity name(s): CatalogueItemObjectCode.\",\"namespace\":\"cz.k" +
				"b.api.mortgageservicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":\"objectC" +
				"ode\",\"doc\":\"The identifier of the catalog item (product, service, offering, etc." +
				") that does not change when the version of the item changes.For example, the Sta" +
				"ndard Tariff Offer has different settings in different versions (e.g. different " +
				"types and quantities of products included), these versions have different IDs bu" +
				"t the same OC as long as it is still the same offer from the bank\'s point of vie" +
				"w.#CZ#Identifikator katalogve polozky (produkt, sluzba, nabidka apod.), ktery se" +
				" nemeni pri zmene verze polozky.Napr. Nabidka tarifu Standard ma v ruznych verzi" +
				"ch ruzna nastaveni (napr. ruzne typy a mnozstvi produktu v ni zahrnute), tyto ve" +
				"rze maji odlisne ID, ale stejny OC, dokud se jedna z pohledu banky o stale stejn" +
				"ou nabidku. CDM attribute class name: CatalogueItemObjectCodeObjectCode. Attribu" +
				"te has simple type ST_CodeDefault with description: Standard data type to be use" +
				"d on *Code* attributes.\'Code\' is very similar to \'ID\' (i.e. unique identifier) b" +
				"ut it is supposed to be human-readable.E.g. SystemApplicationCode, ProductGroupC" +
				"ode.\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"^.{0,100}$\"" +
				"}}]}}]}},{\"name\":\"partyInMktItemInstanceInfoes\",\"type\":{\"type\":\"array\",\"items\":{" +
				"\"type\":\"record\",\"name\":\"PartyInMktItemInstanceInfo\",\"doc\":\"Information entity. D" +
				"escribes party occurrence in context of a marketing item instance (product, serv" +
				"ice, frame agreement, bundle,...). CDM entity name(s): PartyInMktItemInstanceInf" +
				"o.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortgageapplication\",\"fiel" +
				"ds\":[{\"name\":\"customer\",\"type\":{\"type\":\"record\",\"name\":\"Customer\",\"doc\":\" CDM en" +
				"tity name(s): Customer.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mortg" +
				"ageapplication\",\"fields\":[{\"name\":\"customerId\",\"doc\":\" CDM attribute class name:" +
				" CustomerCustomerId.\",\"type\":\"long\"}]}},{\"name\":\"partyInMktItemInstanceRole\",\"ty" +
				"pe\":{\"type\":\"record\",\"name\":\"PartyInMktItemInstanceRole\",\"doc\":\"The role that a " +
				"party has in a particular product instance.It can be specific to each product, c" +
				"ommon across a group of products, or even across all products.E.g. applicant, co" +
				"-applicant, guarantor for consumer loans#CZ#Role, kterou ma strana v konkretni i" +
				"nstanci produktu.Muze byt specificka pro kazdy produkt, spolecna v ramci skupiny" +
				" produktu nebo dokonce pro vsechny produkty.Napr. zadatel, spoluzadatel, rucitel" +
				" pro spotrebni uvery. CDM entity name(s): PartyInMktItemInstanceRole.\",\"namespac" +
				"e\":\"cz.kb.api.mortgageservicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":" +
				"\"partyInMktItemInstanceRoleCode\",\"type\":{\"type\":\"record\",\"name\":\"PartyInMktItemI" +
				"nstanceRoleCode\",\"doc\":\"Multicodebook property representing code of role (unique" +
				" identifier) that parties in general can have on products.It is multicodebook be" +
				"cause roles always exists, but differs per product groups and are not managed ce" +
				"ntrally. CDM entity name(s): PartyInMktItemInstanceRoleCode.\",\"namespace\":\"cz.kb" +
				".api.mortgageservicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":\"code\",\"d" +
				"oc\":\"Human readable unique identifier of role on product instance. MultiCodebook" +
				" value itself.Unique across all products. Attribute has specific codebook type: " +
				"CB_CustomerInMortgageInstanceRole. CDM attribute class name: PartyInMktItemInsta" +
				"nceRoleCodeCode. Attribute has simple type CB_MultiCodebookValue with descriptio" +
				"n: Represents information that value can be from more than one codebook. Codeboo" +
				"k type: CB_CustomerInMortgageInstanceRole.\",\"type\":{\"type\":\"string\",\"avro.java.s" +
				"tring\":\"String\",\"pattern\":\"^.{0,100}$\"}}]}}]}}]}}}]}},{\"name\":\"mortgageLoanKind\"" +
				",\"doc\":\" CDM attribute class name: MortgageLoanKind. Codebook type: CB_MortgageL" +
				"oanKind.\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PCP\",\"d" +
				"efault\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PCPInstanceId\",\"doc\":\"Multi" +
				"attribute property of marketable item instance.Multiattribute: Identifiers of ma" +
				"rketable item instances are not yet unified, there is no one central catalogue.T" +
				"his also covers identifiers valid for only some part of marketable item instance" +
				" lifecycle, e.g. proposed product.E.g. PCP identifiers, TSS identifiers.#CZ#Vice" +
				"atributova promenna instanci prodejnych polozek. Viceatributovost: Identifikator" +
				"y instanci prodejych polozek zatim nejsou sjednoceny. Neexistujce centralni kata" +
				"log. Pokryva tez identifikatory, ktere jsou platne pouze pro nektere casti zivot" +
				"niho cyklu instanci prodejnych polozek (napriklad navrhovany produkt). Priklad: " +
				"PCP identifikator, TSS identifikator. CDM entity name(s): InstanceId.\",\"namespac" +
				"e\":\"cz.kb.api.mortgageservicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":" +
				"\"id\",\"doc\":\"Identifier of product instance item itself.#CZ#Vlastni identifikator" +
				" instance prodejne polozky. CDM attribute class name: InstanceIdId. Attribute ha" +
				"s simple type ST_IdStringDefault with description: Standard data type to be used" +
				" ID, i.e. unique identifier. It is not supposed to be human-readable.E.g.: Agree" +
				"mentID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"^.{0,30}$" +
				"\"}}]}]},{\"name\":\"ProductDetailURIInNoby\",\"default\":null,\"type\":[\"null\",{\"type\":\"" +
				"record\",\"name\":\"URI\",\"doc\":\"Uniform Resource IdentifierNapr./typicky http odkaz." +
				" CDM entity name(s): URI.\",\"namespace\":\"cz.kb.api.mortgageservicingevents.v2.mor" +
				"tgageapplication\",\"fields\":[{\"name\":\"value\",\"doc\":\"Complete URI. CDM attribute c" +
				"lass name: URIValue. Attribute has simple type ST_URI with description: A string" +
				" representing a URI. Limited to 2047 characters.\",\"type\":{\"type\":\"string\",\"avro." +
				"java.string\":\"String\",\"pattern\":\"^.{0,2048}$\"}}]}]},{\"name\":\"Starbuild\",\"default" +
				"\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"StarbuildInstanceId\",\"doc\":\"Multi" +
				"attribute property of marketable item instance.Multiattribute: Identifiers of ma" +
				"rketable item instances are not yet unified, there is no one central catalogue.T" +
				"his also covers identifiers valid for only some part of marketable item instance" +
				" lifecycle, e.g. proposed product.E.g. PCP identifiers, TSS identifiers.#CZ#Vice" +
				"atributova promenna instanci prodejnych polozek. Viceatributovost: Identifikator" +
				"y instanci prodejych polozek zatim nejsou sjednoceny. Neexistujce centralni kata" +
				"log. Pokryva tez identifikatory, ktere jsou platne pouze pro nektere casti zivot" +
				"niho cyklu instanci prodejnych polozek (napriklad navrhovany produkt). Priklad: " +
				"PCP identifikator, TSS identifikator. CDM entity name(s): InstanceId.\",\"namespac" +
				"e\":\"cz.kb.api.mortgageservicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":" +
				"\"id\",\"doc\":\"Identifier of product instance item itself.#CZ#Vlastni identifikator" +
				" instance prodejne polozky. CDM attribute class name: InstanceIdId. Attribute ha" +
				"s simple type ST_IdStringDefault with description: Standard data type to be used" +
				" ID, i.e. unique identifier. It is not supposed to be human-readable.E.g.: Agree" +
				"mentID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"pattern\":\"^.{0,30}$" +
				"\"}}]}]}]}},{\"name\":\"salesArrangementId\",\"type\":{\"type\":\"record\",\"name\":\"SalesArr" +
				"angementId\",\"doc\":\"Multiattribute representing sales arrangement unique identifi" +
				"er.Multiattribute because SalesArrangement is very large scope = across all prod" +
				"uct groups, ids will not be united.Second reason is existence of public id, sale" +
				"s arrangement identifier given to customer and therefore different from internal" +
				" one. CDM entity name(s): SalesArrangementId.\",\"namespace\":\"cz.kb.api.mortgagese" +
				"rvicingevents.v2.mortgageapplication\",\"fields\":[{\"name\":\"id\",\"doc\":\"Multi attrib" +
				"ute identifier value itself. CDM attribute class name: SalesArrangementIdId. Att" +
				"ribute has simple type ST_IdString100Default with description: Standard data typ" +
				"e to be used as ID, i.e. unique identifier. Longer vevrsion - 100 characters. It" +
				" is not supposed to be human-readable.E.g.: AgreementID\",\"type\":{\"type\":\"string\"" +
				",\"avro.java.string\":\"String\",\"pattern\":\"^.{0,100}$\"}}]}},{\"name\":\"StarbuildArran" +
				"gementChangeId\",\"default\":null,\"type\":[\"null\",\"SalesArrangementId\"]}]}");
		private cz.kb.api.mortgageservicingevents.v2.mortgageapplication.Agreement _agreement;
		private cz.kb.api.mortgageservicingevents.v2.mortgageapplication.ArrangementAcceptance _ArrangementAcceptanceTermination;
		private cz.kb.api.mortgageservicingevents.v2.mortgageapplication.ArrangementAcceptance _FirstSignArrangementAcceptance;
		private cz.kb.api.mortgageservicingevents.v2.mortgageapplication.MortgageInstance _MortgageInstanceRequested;
		private cz.kb.api.mortgageservicingevents.v2.mortgageapplication.SalesArrangementId _salesArrangementId;
		private cz.kb.api.mortgageservicingevents.v2.mortgageapplication.SalesArrangementId _StarbuildArrangementChangeId;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return SalesArrangement._SCHEMA;
			}
		}
		public cz.kb.api.mortgageservicingevents.v2.mortgageapplication.Agreement agreement
		{
			get
			{
				return this._agreement;
			}
			set
			{
				this._agreement = value;
			}
		}
		public cz.kb.api.mortgageservicingevents.v2.mortgageapplication.ArrangementAcceptance ArrangementAcceptanceTermination
		{
			get
			{
				return this._ArrangementAcceptanceTermination;
			}
			set
			{
				this._ArrangementAcceptanceTermination = value;
			}
		}
		public cz.kb.api.mortgageservicingevents.v2.mortgageapplication.ArrangementAcceptance FirstSignArrangementAcceptance
		{
			get
			{
				return this._FirstSignArrangementAcceptance;
			}
			set
			{
				this._FirstSignArrangementAcceptance = value;
			}
		}
		public cz.kb.api.mortgageservicingevents.v2.mortgageapplication.MortgageInstance MortgageInstanceRequested
		{
			get
			{
				return this._MortgageInstanceRequested;
			}
			set
			{
				this._MortgageInstanceRequested = value;
			}
		}
		public cz.kb.api.mortgageservicingevents.v2.mortgageapplication.SalesArrangementId salesArrangementId
		{
			get
			{
				return this._salesArrangementId;
			}
			set
			{
				this._salesArrangementId = value;
			}
		}
		public cz.kb.api.mortgageservicingevents.v2.mortgageapplication.SalesArrangementId StarbuildArrangementChangeId
		{
			get
			{
				return this._StarbuildArrangementChangeId;
			}
			set
			{
				this._StarbuildArrangementChangeId = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.agreement;
			case 1: return this.ArrangementAcceptanceTermination;
			case 2: return this.FirstSignArrangementAcceptance;
			case 3: return this.MortgageInstanceRequested;
			case 4: return this.salesArrangementId;
			case 5: return this.StarbuildArrangementChangeId;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.agreement = (cz.kb.api.mortgageservicingevents.v2.mortgageapplication.Agreement)fieldValue; break;
			case 1: this.ArrangementAcceptanceTermination = (cz.kb.api.mortgageservicingevents.v2.mortgageapplication.ArrangementAcceptance)fieldValue; break;
			case 2: this.FirstSignArrangementAcceptance = (cz.kb.api.mortgageservicingevents.v2.mortgageapplication.ArrangementAcceptance)fieldValue; break;
			case 3: this.MortgageInstanceRequested = (cz.kb.api.mortgageservicingevents.v2.mortgageapplication.MortgageInstance)fieldValue; break;
			case 4: this.salesArrangementId = (cz.kb.api.mortgageservicingevents.v2.mortgageapplication.SalesArrangementId)fieldValue; break;
			case 5: this.StarbuildArrangementChangeId = (cz.kb.api.mortgageservicingevents.v2.mortgageapplication.SalesArrangementId)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
