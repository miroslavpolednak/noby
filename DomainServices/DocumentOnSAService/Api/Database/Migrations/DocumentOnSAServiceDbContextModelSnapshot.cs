// <auto-generated />
using System;
using DomainServices.DocumentOnSAService.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DomainServices.DocumentOnSAService.Api.Database.Migrations
{
    [DbContext(typeof(DocumentOnSAServiceDbContext))]
    partial class DocumentOnSAServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DomainServices.DocumentOnSAService.Api.Database.Entities.DocumentOnSa", b =>
                {
                    b.Property<int>("DocumentOnSAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentOnSAId"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DmsxId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DocumentTemplateVariantId")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentTemplateVersionId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EArchivId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FormId")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("HouseholdId")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSigned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("SalesArrangementId")
                        .HasColumnType("int");

                    b.Property<int?>("SignatureConfirmedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SignatureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SignatureMethodCode")
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("SignatureTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Source")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("DocumentOnSAId");

                    b.HasIndex("SalesArrangementId");

                    b.ToTable("DocumentOnSa");
                });

            modelBuilder.Entity("DomainServices.DocumentOnSAService.Api.Database.Entities.EArchivIdsLinked", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DocumentOnSAId")
                        .HasColumnType("int");

                    b.Property<string>("EArchivId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentOnSAId");

                    b.ToTable("EArchivIdsLinked");
                });

            modelBuilder.Entity("DomainServices.DocumentOnSAService.Api.Database.Entities.GeneratedFormId", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("HouseholdId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFormIdFinal")
                        .HasColumnType("bit");

                    b.Property<string>("TargetSystem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValue("N");

                    b.Property<short>("Version")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdId");

                    b.ToTable("GeneratedFormId");
                });

            modelBuilder.Entity("DomainServices.DocumentOnSAService.Api.Database.Entities.EArchivIdsLinked", b =>
                {
                    b.HasOne("DomainServices.DocumentOnSAService.Api.Database.Entities.DocumentOnSa", "DocumentOnSa")
                        .WithMany("EArchivIdsLinkeds")
                        .HasForeignKey("DocumentOnSAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentOnSa");
                });

            modelBuilder.Entity("DomainServices.DocumentOnSAService.Api.Database.Entities.DocumentOnSa", b =>
                {
                    b.Navigation("EArchivIdsLinkeds");
                });
#pragma warning restore 612, 618
        }
    }
}
