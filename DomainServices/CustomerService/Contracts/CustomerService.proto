syntax = "proto3";

package DomainServices;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "GrpcDate.proto";

option csharp_namespace = "DomainServices.CustomerService.Contracts";

message TestRequest {
   google.protobuf.StringValue BirthNumber = 1;
   google.protobuf.StringValue Ico = 2;
   google.protobuf.StringValue DegreeBefore = 3;
   google.protobuf.StringValue DegreeAfter = 4;
   google.protobuf.StringValue FirstName = 5;
   google.protobuf.StringValue LastName = 6;
   cis.types.GrpcDate DateOfBirth = 7;
   google.protobuf.StringValue PlaceOfBirth = 8;
   google.protobuf.StringValue NameJuridicalPerson = 9;
   Genders Gender = 10;
   IdentificationDocument IdentificationDocument = 11;
   repeated Address Addresses = 12;
   repeated Contact Contacts = 13;
}

message Address {
   AddressTypes Type = 1;
   bool IsPrimary = 2;
   string Street = 3;
   string BuildingIdentificationNumber = 4;
   string LandRegistryNumber = 5;
   string Postcode = 6;
   string City = 7;
   string CountryCode = 8;
}
enum AddressTypes {
   Unknown = 0;
   Pernament = 1;
   Mailing = 2;
}
message Contact {
   bool IsPrimary = 1;
   enum ContactTypes {
	Unknown = 0;
	MobilePrivate = 1;
	MobileWork = 2;
	LandlineHome = 3;
	Email = 4;
   }
   ContactTypes Type = 2;
   string Value = 3;
}
message CreateContactRequest {
   int32 Identity = 1;
   Contact Contact = 2;
}
message CreateContactResponse {
   int32 ContactId = 1;
}
message CreateRequest {
   string BirthNumber = 1;
   string Ico = 2;
   string DegreeBefore = 3;
   string DegreeAfter = 4;
   string FirstName = 5;
   string LastName = 6;
   cis.types.GrpcDate DateOfBirth = 7;
   string PlaceOfBirth = 8;
   string NameJuridicalPerson = 9;
   Genders Gender = 10;
   IdentificationDocument IdentificationDocument = 11;
   repeated Address Addresses = 12;
   repeated Contact Contacts = 13;
}
message CreateResponse {
   int32 Identity = 1;
}
message CustomerInput {
   string BirthNumber = 1;
   string Ico = 2;
   string DegreeBefore = 3;
   string DegreeAfter = 4;
   string FirstName = 5;
   string LastName = 6;
   cis.types.GrpcDate DateOfBirth = 7;
   string PlaceOfBirth = 8;
   string NameJuridicalPerson = 9;
   Genders Gender = 10;
   IdentificationDocument IdentificationDocument = 11;
}
message DeleteContactRequest {
   int32 Identity = 1;
   int32 ContactId = 2;
}
enum Genders {
   Undefined = 0;
   Male = 1;
   Female = 2;
}
message GetBasicDataByFullIdentificationRequest {
   string FirstName = 1;
   string LastName = 2;
   cis.types.GrpcDate DateOfBirth = 3;
   string NameJuridicalPerson = 4;
   IdentificationDocumentBase IdentificationDocument = 5;
}
message GetBasicDataByIdentifierRequest {
   string Identifier = 1;
}
message GetBasicDataResponse {
   int32 Identity = 1;
   string BirthNumber = 2;
   string Ico = 3;
   string DegreeBefore = 4;
   string DegreeAfter = 5;
   string FirstName = 6;
   string LastName = 7;
   cis.types.GrpcDate DateOfBirth = 8;
   string PlaceOfBirth = 9;
   string NameJuridicalPerson = 10;
   Genders Gender = 11;
   bool Updatable = 12;
   IdentificationDocument IdentificationDocument = 13;
}
message GetDetailRequest {
   int32 Identity = 1;
}
message GetDetailResponse {
   string BirthNumber = 1;
   string Ico = 2;
   string DegreeBefore = 3;
   string DegreeAfter = 4;
   string FirstName = 5;
   string LastName = 6;
   cis.types.GrpcDate DateOfBirth = 7;
   string PlaceOfBirth = 8;
   string NameJuridicalPerson = 9;
   Genders Gender = 10;
   bool Updatable = 11;
   IdentificationDocument IdentificationDocument = 12;
   repeated Address Addresses = 13;
   repeated Contact Contacts = 14;
}
message GetListRequest {
   repeated int32 Identities = 1 [packed = false];
}
message GetListResponse {
   repeated GetBasicDataResponse Customers = 1;
}
message IdentificationDocument {
   IdentificationDocumentTypes Type = 1;
   string Number = 2;
   cis.types.GrpcDate ValidTo = 3;
   string IssuedBy = 4;
   string IssuingCountryCode = 5;
   cis.types.GrpcDate IssuedOn = 6;
}
message IdentificationDocumentBase {
   IdentificationDocumentTypes Type = 1;
   string Number = 2;
}
enum IdentificationDocumentTypes {
   None = 0;
   A = 1;
   B = 2;
}
message UpdateAdressRequest {
   int32 Identity = 1;
   Address Address = 2;
}
message UpdateBasicDataRequest {
   int32 Identity = 1;
   CustomerInput Customer = 2;
}
service CustomerService {
   rpc Test (TestRequest) returns (.google.protobuf.Empty);
   rpc Create (CreateRequest) returns (CreateResponse);
   rpc CreateContact (CreateContactRequest) returns (CreateContactResponse);
   rpc DeleteContact (DeleteContactRequest) returns (.google.protobuf.Empty);
   rpc GetBasicDataByFullIdentification (GetBasicDataByFullIdentificationRequest) returns (GetBasicDataResponse);
   rpc GetBasicDataByIdentifier (GetBasicDataByIdentifierRequest) returns (GetBasicDataResponse);
   rpc GetDetail (GetDetailRequest) returns (GetDetailResponse);
   rpc GetList (GetListRequest) returns (GetListResponse);
   rpc UpdateAdress (UpdateAdressRequest) returns (.google.protobuf.Empty);
   rpc UpdateBasicData (UpdateBasicDataRequest) returns (.google.protobuf.Empty);
}
