{
  "openapi": "3.0.1",
  "info": {
    "description": "Address service, contains operations for getting and setting primary and contact address",
    "title": "AddressService.v2",
    "version": "2.0.3"
  },
  "servers": [
    {
      "url": "https://cm-be-v1.dev.custmng.kbcloud/api",
      "description": "DEV environment"
    },
    {
      "url": "https://cm-be-v1.fat.custmng.kbcloud/api",
      "description": "SIT environment"
    },
    {
      "url": "https://cm-be-v1.stage.custmng.kbcloud/api",
      "description": "STAGE environment"
    },
    {
      "url": "https://cm-be-v1.edu.custmng.kbcloud/api",
      "description": "EDU environment"
    },
    {
      "url": "https://cm-be-v1.prod.custmng.kbcloud/api",
      "description": "Production environment"
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/public/v2/customers/{customerId}/primary-address": {
      "get": {
        "operationId": "getPrimaryAddress",
        "tags": [
          "AddressService.v2"
        ],
        "summary": "getPrimaryAddress",
        "description": "Operation returns customer primary address",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Identifier of the customer whose primary address will be returned (KBID - identifier of customer in Customer Management system)",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "example": 514449104
          },
          {
            "name": "requiredAddressFormats",
            "in": "query",
            "description": "Required address format. Multiple formats can be returned at the same time. If no format is required, the address is returned in line format.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AddressFormats"
            }
          },
          {
            "$ref": "#/components/parameters/X-B3-TraceId"
          },
          {
            "$ref": "#/components/parameters/X-KB-Caller-System-Identity"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryAddressResponse"
                }
              }
            },
            "description": "Operation returns customer primary address"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Validation error - mostly invalid data in request is provided provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Authentication information is missing or is invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "You are not authorized to run this operation"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error occured"
          }
        }
      },
      "put": {
        "operationId": "setPrimaryAddress",
        "tags": [
          "AddressService.v2"
        ],
        "summary": "Operation sets customer's primary address",
        "description": "setPrimaryAddress",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Identifier of the customer whose contact address is to set. (KBID - identifier of customer in Customer Management system)",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "example": 514449104
          },
          {
            "$ref": "#/components/parameters/X-B3-TraceId"
          },
          {
            "$ref": "#/components/parameters/X-KB-Party-Identity-In-Service"
          },
          {
            "$ref": "#/components/parameters/X-KB-Orig-System-Identity"
          },
          {
            "$ref": "#/components/parameters/X-KB-Caller-System-Identity"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PrimaryAddress"
        },
        "responses": {
          "204": {
            "description": "Operation sets customer's primary address"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Validation error - mostly invalid data in request is provided provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Authentication information is missing or is invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "You are not authorized to run this operation"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error occured"
          }
        }
      }
    },
    "/public/v2/customers/{customerId}/contact-address": {
      "get": {
        "operationId": "getContactAddress",
        "tags": [
          "AddressService.v2"
        ],
        "summary": "getContactAddress",
        "description": "Operation returns customer contact address",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Identifier of the customer whose contact address will be returned (KBID - identifier of customer in Customer Management system)",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "example": 514449104
          },
          {
            "name": "requiredAddressFormats",
            "in": "query",
            "description": "Required address format. Multiple formats can be returned at the same time. If no format is required, the address is returned in line format.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AddressFormats"
            }
          },
          {
            "$ref": "#/components/parameters/X-B3-TraceId"
          },
          {
            "$ref": "#/components/parameters/X-KB-Caller-System-Identity"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAddressResponse"
                }
              }
            },
            "description": "Operation returns customer contact address"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Validation error - mostly invalid data in request is provided provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Authentication information is missing or is invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "You are not authorized to run this operation"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error occured"
          }
        }
      },
      "put": {
        "operationId": "setContactAddress",
        "tags": [
          "AddressService.v2"
        ],
        "summary": "setContactAddress",
        "description": "Operation sets customer's contact address",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Identifier of the customer whose contact address is to set. (KBID - identifier of customer in Customer Management system)",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "example": 514449104
          },
          {
            "$ref": "#/components/parameters/X-B3-TraceId"
          },
          {
            "$ref": "#/components/parameters/X-KB-Party-Identity-In-Service"
          },
          {
            "$ref": "#/components/parameters/X-KB-Orig-System-Identity"
          },
          {
            "$ref": "#/components/parameters/X-KB-Caller-System-Identity"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ContactAddress"
        },
        "responses": {
          "204": {
            "description": "Operation sets customer's contact address"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Validation error - mostly invalid data in request is provided provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Authentication information is missing or is invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "You are not authorized to run this operation"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error occured"
          }
        }
      },
      "delete": {
        "operationId": "deleteContactAddress",
        "tags": [
          "AddressService.v2"
        ],
        "summary": "deleteContactAddress",
        "description": "Operation deletes customer's contact address",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Identifier of the customer whose contact address is to set. (KBID - identifier of customer in Customer Management system)",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "example": 514449104
          },
          {
            "$ref": "#/components/parameters/X-B3-TraceId"
          },
          {
            "$ref": "#/components/parameters/X-KB-Party-Identity-In-Service"
          },
          {
            "$ref": "#/components/parameters/X-KB-Orig-System-Identity"
          },
          {
            "$ref": "#/components/parameters/X-KB-Caller-System-Identity"
          }
        ],
        "responses": {
          "201": {
            "description": "Operation sets customer's contact address"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Validation error - mostly invalid data in request is provided provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Authentication information is missing or is invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "You are not authorized to run this operation"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error occured"
          }
        }
      }
    },
    "/public/v2/address/validate-primary-address-format": {
      "post": {
        "operationId": "validatePrimaryAddressFormat",
        "tags": [
          "AddressService.v2"
        ],
        "summary": "validatePrimaryAddressFormat",
        "description": "Operation validates format of primary address.",
        "parameters": [
          {
            "name": "partyLegalStatus",
            "in": "query",
            "description": "Subject's legal status for which primary address should be used. P - for Natural Person, E - for Entrepreneur, B - for Legal Person",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "P",
                "E",
                "B"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/X-B3-TraceId"
          },
          {
            "$ref": "#/components/parameters/X-KB-Caller-System-Identity"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PrimaryAddress"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateAddressFormatResponse"
                }
              }
            },
            "description": "Address format validation response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Validation error - mostly invalid data in request is provided provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Authentication information is missing or is invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "You are not authorized to run this operation"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error occured"
          }
        }
      }
    },
    "/public/v2/address/validate-contact-address-format": {
      "post": {
        "operationId": "validateContactAddressFormat",
        "tags": [
          "AddressService.v2"
        ],
        "summary": "validateContactAddressFormat",
        "description": "Operation validates format of contact address.",
        "parameters": [
          {
            "name": "partyLegalStatus",
            "in": "query",
            "description": "Subject's legal status for which contact address should be used. P - for Natural Person, E - for Entrepreneur, B - for Legal Person",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "P",
                "E",
                "B"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/X-B3-TraceId"
          },
          {
            "$ref": "#/components/parameters/X-KB-Caller-System-Identity"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ContactAddress"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateAddressFormatResponse"
                }
              }
            },
            "description": "Address format validation response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Validation error - mostly invalid data in request is provided provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Authentication information is missing or is invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "You are not authorized to run this operation"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error occured"
          }
        }
      }
    },
    "/public/v2/address/validate-temporary-stay-address-format": {
      "post": {
        "operationId": "validateTemporaryStayAddressFormat",
        "tags": [
          "AddressService.v2"
        ],
        "summary": "validateTemporaryStayAddressFormat",
        "description": "Operation validates format of temporary stay address.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-B3-TraceId"
          },
          {
            "$ref": "#/components/parameters/X-KB-Caller-System-Identity"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TemporaryStayAddress"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateAddressFormatResponse"
                }
              }
            },
            "description": "Address format validation response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Validation error - mostly invalid data in request is provided provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Authentication information is missing or is invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "You are not authorized to run this operation"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error occurred"
          }
        }
      }
    },
    "/public/v2/address/format-address": {
      "post": {
        "operationId": "formatAddress",
        "tags": [
          "AddressService.v2"
        ],
        "summary": "formatAddress",
        "description": "Operation converts input address to required format.",
        "parameters": [
          {
            "name": "requiredAddressFormats",
            "in": "query",
            "description": "Required address format. Multiple formats can be returned at the same time.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AddressFormats"
            }
          },
          {
            "$ref": "#/components/parameters/X-B3-TraceId"
          },
          {
            "$ref": "#/components/parameters/X-KB-Caller-System-Identity"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AddressToFormat"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormattedAddress"
                }
              }
            },
            "description": "Address format validation response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Validation error - mostly invalid data in request is provided provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Authentication information is missing or is invalid"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "You are not authorized to run this operation"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error occurred"
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "ContactAddress": {
        "description": "Contact Address to set, update or validate",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ContactAddress"
            }
          }
        }
      },
      "PrimaryAddress": {
        "description": "Primary Address to set, update or validate",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PrimaryAddress"
            }
          }
        }
      },
      "TemporaryStayAddress": {
        "description": "Temporary Stay Address to validate",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TemporaryStayAddress"
            }
          }
        }
      },
      "AddressToFormat": {
        "description": "Address to format.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AddressToFormat"
            }
          }
        }
      }
    },
    "schemas": {
      "AddressLinePoint": {
        "description": "Address in LINE format",
        "type": "object",
        "required": [
          "street",
          "city",
          "countryCode"
        ],
        "properties": {
          "street": {
            "type": "string",
            "description": "First line of address (street, street number etc.)",
            "maxLength": 100
          },
          "deliveryDetails": {
            "type": "string",
            "description": "Address delivery details",
            "maxLength": 100
          },
          "city": {
            "type": "string",
            "description": "Third line of address (typically city)",
            "maxLength": 100
          },
          "postCode": {
            "type": "string",
            "description": "Post code, Postal code, ZIP code",
            "maxLength": 12
          },
          "countryCode": {
            "type": "string",
            "description": "Country code - two characters ISO code - CB_Country",
            "maxLength": 2
          },
          "addressPointId": {
            "type": "string",
            "description": "Identification of address point",
            "maxLength": 100
          },
          "confirmed": {
            "type": "boolean",
            "description": "Flag indicating that user confirmed address."
          }
        },
        "example": {
          "street": "Holubova 22",
          "city": "Chlumec",
          "postCode": 40339,
          "countryCode": "CZ",
          "addressPointId": 12313212,
          "confirmed": true
        }
      },
      "AddressWithType": {
        "description": "Customer address whith addressId and addressTypeCode",
        "type": "object",
        "required": [
          "addressId",
          "addressTypeCode"
        ],
        "properties": {
          "addressId": {
            "type": "integer",
            "format": "int64",
            "description": "Address unique identifier in Customer Management system",
            "example": 98098432
          },
          "addressTypeCode": {
            "type": "integer",
            "format": "int64",
            "description": "Address type code defines address usage, i.e. 1 - Home address for Natural Person, 3 - Correspondence address, etc. Values are defined in CSC codebook ADDR_TYPE",
            "example": 3
          },
          "addressLinePoint": {
            "$ref": "#/components/schemas/AddressLinePoint"
          },
          "componentAddressPoint": {
            "$ref": "#/components/schemas/ComponentAddressPoint"
          },
          "singleLineAddressPoint": {
            "$ref": "#/components/schemas/SingleLineAddressPoint"
          }
        }
      },
      "PrimaryAddress": {
        "description": "Primary address.",
        "properties": {
          "componentAddressPoint": {
            "$ref": "#/components/schemas/ComponentAddressPoint"
          }
        },
        "required": [
          "componentAddressPoint"
        ]
      },
      "TemporaryStayAddress": {
        "description": "Temporary residence address. The address is obligatory for foreigners who do not have the Czech Republic filled in at their permanent address.",
        "properties": {
          "componentAddressPoint": {
            "$ref": "#/components/schemas/ComponentAddressPoint"
          }
        },
        "required": [
          "componentAddressPoint"
        ]
      },
      "PrimaryAddressResponse": {
        "description": "Primary address. If addressFormat 'LINE' is selected, the address is returned. If addressFormat 'COMPONENT' is selected, the componentAddress is returned. If addressFormat 'SINGLE_LINE' is selected, the singleAddressLine is returned",
        "properties": {
          "addressLinePoint": {
            "$ref": "#/components/schemas/AddressLinePoint"
          },
          "componentAddressPoint": {
            "$ref": "#/components/schemas/ComponentAddressPoint"
          },
          "singleLineAddressPoint": {
            "$ref": "#/components/schemas/SingleLineAddressPoint"
          }
        }
      },
      "ContactAddressResponse": {
        "description": "Contact address. Bank correspondence delivery address. If it is not filled out, correspondence is delivered to a permanent residence address. A contact address can also be entered as a P.O. BOX. If addressFormat 'LINE' is selected, the address is returned. If addressFormat 'COMPONENT' is selected, the componentAddress is returned. If addressFormat 'SINGLE_LINE' is selected, the singleAddressLine is returned",
        "type": "object",
        "properties": {
          "addressLinePoint": {
            "$ref": "#/components/schemas/AddressLinePoint"
          },
          "componentAddressPoint": {
            "$ref": "#/components/schemas/ComponentAddressPoint"
          },
          "singleLineAddressPoint": {
            "$ref": "#/components/schemas/SingleLineAddressPoint"
          },
          "confirmed": {
            "type": "boolean",
            "description": "Flag indicating that address is confirmed by client",
            "example": true
          }
        }
      },
      "ContactAddress": {
        "description": "Contact address. Bank correspondence delivery address. If it is not filled out, correspondence is delivered to a permanent residence address. A contact address can also be entered as a P.O. BOX.",
        "type": "object",
        "properties": {
          "componentAddressPoint": {
            "$ref": "#/components/schemas/ComponentAddressPoint"
          },
          "confirmed": {
            "type": "boolean",
            "description": "Flag indicating that address is confirmed by client",
            "example": true
          }
        }
      },
      "AddressToFormat": {
        "description": "Address to format, only one of address or componentAddress can be filled in.",
        "type": "object",
        "properties": {
          "addressLinePoint": {
            "$ref": "#/components/schemas/AddressLinePoint"
          },
          "componentAddressPoint": {
            "$ref": "#/components/schemas/ComponentAddressPoint"
          }
        }
      },
      "FormattedAddress": {
        "description": "Address in requested formats. Supported Component, Address line and Single line formats.",
        "type": "object",
        "properties": {
          "addressLinePoint": {
            "$ref": "#/components/schemas/AddressLinePoint"
          },
          "componentAddressPoint": {
            "$ref": "#/components/schemas/ComponentAddressPoint"
          },
          "singleLineAddressPoint": {
            "$ref": "#/components/schemas/SingleLineAddressPoint"
          }
        }
      },
      "SingleLineAddressPoint": {
        "description": "Address in SINGLE_LINE format. Single line textual address representation. Whole address is one textual line.",
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Represents whole address.",
            "maxLength": 500,
            "example": "Pražská 125, PRAHA, PSČ 111 11, Česká republika"
          }
        }
      },
      "AddressFormats": {
        "description": "Types of the address format.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AddressFormat"
        },
        "example": [
          "LINE",
          "COMPONENT"
        ],
        "default": [
          "LINE"
        ]
      },
      "AddressFormat": {
        "description": "Type of the address format.\n* 'LINE'      - Address format in the form of address lines. An easy-to-read form for users. It is used, for example, for an address on a letter or a contractual document, or to display address to user in application. This notation returns in the Address schema definition\n* 'COMPONENT' - Address format in the form of address components. Harder for users to read form. Component writing is used primarily to enter an address or to exchange an address for machine processing. This notation returns in the ComponentAddress schema definition.\n* 'SINGLE_LINE' - Address format in single line. Mainly used for visual presentation of address.\n",
        "type": "string",
        "enum": [
          "LINE",
          "COMPONENT",
          "SINGLE_LINE"
        ],
        "example": "LINE"
      },
      "ComponentAddressPoint": {
        "description": "Component address. Examples: <ul> <li> Czech address with street, house number and street number: { \"street\": \"Wilsonova\", \"houseNumber\": \"101\", \"streetNumber\": \"1\", \"cityDistrict\": \"Vinohrady\", \"pragueDistrict\": \"Praha 1\", \"deliveryDetails\": \"Marketing department\", \"city\": \"Praha\", \"postCode\": \"11000\", \"countryCode\": \"CZ\", \"addressPointId\": \"21727554\" }\n<li> Czech address without street and with house number: { \"houseNumber\": \"6\", \"cityDistrict\": \"Dehtáry\", \"city\": \"Jenštejn \", \"postCode\": \"25091\", \"countryCode\": \"CZ\", \"addressPointId\": \"12644340\" }\n<li> Foreign address with street, house number: { \"street\": \"S Torrence Ave\", \"houseNumber\": \"12600\", \"deliveryDetails\": \"Marketing department\", \"city\": \"Chicago\", \"postCode\": \"60633\", \"countryCode\": \"US\", \"countrySubdivision\": \"IL\" }\n<li> Foreign address without street, with house number: { \"houseNumber\": \"16\", \"city\": \"Drzymałowice\", \"postCode\": \"59-407\", \"countryCode\": \"PL\", }\n<li> Post box address: { \"postBox\": \"1234 \", \"city\": \"Jenštejn \", \"postCode\": \"25091\", \"countryCode\": \"CZ\", } </ul> ",
        "type": "object",
        "required": [
          "city",
          "countryCode"
        ],
        "properties": {
          "street": {
            "type": "string",
            "description": "Street name without a house number. The field is not filled out for cities without an street network or for post box address.",
            "minLength": 1,
            "maxLength": 100,
            "example": "Holubova"
          },
          "houseNumber": {
            "type": "string",
            "description": "The house number. It is not filled out for post box address. Foreign addresses should have it filled out. Czech addresses may have the building number in this attribute or the evidenceNumber.",
            "minLength": 1,
            "maxLength": 16,
            "example": 22
          },
          "evidenceNumber": {
            "type": "string",
            "description": "Evidence number. It is not filled out for post box address. Used only for Czech addresses. The evidence number has objects that are not assigned a house number. These are, for example, chalets.",
            "minLength": 1,
            "maxLength": 4,
            "example": 20
          },
          "streetNumber": {
            "type": "string",
            "description": "Street number. It is not filled out for post box address. Used only for Czech or Slovak addresses. A number that helps locate a house on a given street.",
            "minLength": 1,
            "maxLength": 4,
            "example": "9A"
          },
          "cityDistrict": {
            "type": "string",
            "description": "City district. It is not filled out for post box address. Should be filled for all Czech addresses, at least for that with address point id.",
            "minLength": 1,
            "maxLength": 100,
            "example": "Vinoř"
          },
          "pragueDistrict": {
            "type": "string",
            "description": "Territory of the city district in the capital Prague (Praha 1 - 10 not Praha 1 - 22). It is not filled out for post box address.",
            "minLength": 1,
            "maxLength": 40,
            "example": "Praha 9"
          },
          "deliveryDetails": {
            "type": "string",
            "description": "A note of delivery specifying to whom delivery is intended.",
            "minLength": 1,
            "maxLength": 100,
            "example": "Marketing department"
          },
          "city": {
            "type": "string",
            "description": "The city name. Only the name of the city without its parts is given, i.e. for Prague we only mention Prague and not Prague 6 or Prague Dejvice.",
            "minLength": 1,
            "maxLength": 100,
            "example": "Praha"
          },
          "postBox": {
            "type": "string",
            "description": "P.O. Box number. For Czech addresses the value is number. It is filled out for post box address.",
            "minLength": 1,
            "maxLength": 16,
            "example": 756
          },
          "postCode": {
            "type": "string",
            "description": "Post code, Postal code, ZIP code.  For czech address it should be five-digit number between 10000 - 79999",
            "minLength": 1,
            "maxLength": 16,
            "example": 19017
          },
          "countrySubdivision": {
            "type": "string",
            "description": "It is used only for foreign addresses and mainly for states which are divided into large self-governing entities. E.g. USA, then state like Texas, Florida is filled out.",
            "minLength": 1,
            "maxLength": 35,
            "example": "Texas"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code - two characters ISO code - CB_Country",
            "minLength": 2,
            "maxLength": 2,
            "example": "CZ"
          },
          "addressPointId": {
            "type": "string",
            "description": "Address point id from Register of Territorial Identification of Addresses and Properties in the Czech Republic or its equivalent in the Slovak Republic.",
            "minLength": 1,
            "maxLength": 100,
            "example": 12313212
          }
        }
      },
      "ValidateAddressFormatResponse": {
        "description": "Validation result with list of issues",
        "properties": {
          "validationResult": {
            "type": "string",
            "description": "Validation result",
            "enum": [
              "VALID",
              "ERROR"
            ],
            "example": "VALID"
          },
          "validationIssueCodes": {
            "type": "array",
            "description": "List of validation issue codes",
            "items": {
              "type": "string"
            },
            "example": [
              "CM_ADDRESS_COMPONENT_FORMAT_CITY_DISTRICT_EMPTY",
              "CM_ADDRESS_COMPONENT_FORMAT_POST_CODE_INVALID"
            ]
          }
        },
        "required": [
          "validationResult"
        ],
        "type": "object"
      },
      "Error": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "description": "Http status code"
          },
          "category": {
            "type": "integer",
            "description": "Error category"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "uuid": {
            "type": "string",
            "description": "Error uuid"
          },
          "detail": {
            "description": "Error detail"
          }
        },
        "required": [
          "httpStatusCode",
          "category",
          "code",
          "message",
          "uuid"
        ]
      }
    },
    "parameters": {
      "X-KB-Caller-System-Identity": {
        "name": "X-KB-Caller-System-Identity",
        "description": "[Caller system](https://wiki.kb.cz/confluence/pages/viewpage.action?pageId=217274116#Komunika%C4%8Dn%C3%ADhlavi%C4%8Dkyverze2REST-CallerSystemIdentity)",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "{\"app\":\"CM\",\"appComp\":\"cm-dch-prs-consumer\"}"
        }
      },
      "X-KB-Orig-System-Identity": {
        "name": "X-KB-Orig-System-Identity",
        "description": "[System that as a first triggered the request](https://wiki.kb.cz/confluence/pages/viewpage.action?pageId=217274116#Komunika%C4%8Dn%C3%ADhlavi%C4%8Dkyverze2REST-OrigSystemIdentity)",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "{\"app\":\"CM\",\"appComp\":\"CM_FE.INT\"}"
        }
      },
      "X-KB-Party-Identity-In-Service": {
        "name": "X-KB-Party-Identity-In-Service",
        "description": "[Human user identity that triggered the request](https://wiki.kb.cz/confluence/pages/viewpage.action?pageId=217274116#Komunika%C4%8Dn%C3%ADhlavi%C4%8Dkyverze2REST-PartyIdentityInService)",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "{\"partyIdIS\":[{\"partyId\":{\"id\":\"A09FK3\",\"idScheme\":{\"code\":\"KBUID\"}},\"usg\":\"BA\"},{\"partyId\":{\"id\":\"JMARKOVA\",\"idScheme\":{\"code\":\"KBAD\"}},\"usg\":\"BA\"}]}"
        }
      },
      "X-B3-TraceId": {
        "name": "X-B3-TraceId",
        "description": "[Trace Id](https://wiki.kb.cz/confluence/pages/viewpage.action?pageId=217274116#Komunika%C4%8Dn%C3%ADhlavi%C4%8Dkyverze2REST-TraceId)",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "614b21fe65a3e6cbf8507e2a3d304691"
        }
      }
    }
  }
}