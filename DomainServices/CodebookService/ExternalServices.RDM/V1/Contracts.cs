//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json.Serialization;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"

namespace DomainServices.CodebookService.ExternalServices.RDM.V1.Contracts
{
    using System = global::System;

    

    /// <summary>
    /// Defines what is the name of value and value's data type. CDM entity name(s): CodebookColumn.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookResponse_CodebookColumn
    {
        /// <summary>
        /// Human readable codebook column identifier within one codebook. CDM attribute class name: CodebookColumnCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Name of value.  CDM attribute class name: CodebookColumnValueName.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("valueName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ValueName { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// One value in codebook entry. There is no default language, so actual values for each language is stored in LanguageMutation Entity. CDM entity name(s): CodebookEntryValue.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookResponse_CodebookEntryValue
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebookColumn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookResponse_CodebookColumn CodebookColumn { get; set; } = new GetCodebookResponse_CodebookColumn();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntryValueLanguageMutations")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<GetCodebookResponse_CodebookEntryValueLanguageMutation> CodebookEntryValueLanguageMutations { get; set; } = default!;
    }

    /// <summary>
    /// One codebook entry in one language. CDM entity name(s): CodebookEntryValueLanguageMutation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookResponse_CodebookEntryValueLanguageMutation
    {
        /// <summary>
        /// Description of language mutation. CDM attribute class name: CodebookEntryValueLanguageMutationDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mutationDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string MutationDescription { get; set; } = default!;

        /// <summary>
        /// Language in which this value is. CDM attribute class name: CodebookEntryValueLanguageMutationLanguage. Codebook type: CB_Piggy.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mutationLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string MutationLanguage { get; set; } = default!;

        /// <summary>
        /// Value in language defined in other atribute. CDM attribute class name: CodebookEntryValueLanguageMutationValue.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mutationValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string MutationValue { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Polozka ciselniku.One item in codebook. Has one code and unlimited number of values and each can have any number of language translations.  CDM entity name(s): CodebookEntry.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookResponse_CodebookEntry
    {
        /// <summary>
        /// Unique codebook entry identifier. CDM attribute class name: CodebookEntryCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Relative position of codebook entry in comparison to other codebook entries. Lower number means higher 'priority'. E.g. lowest number means entry is first in ordered list.  CDM attribute class name: CodebookEntrySortOrder.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sortOrder")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int SortOrder { get; set; } = default!;

        /// <summary>
        /// Defines state of the codebook entry - if it is active, deprecated, inactive etc. CDM attribute class name: CodebookEntryStateV2. Codebook type: CB_CodebookEntryState.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string State { get; set; } = default!;

        /// <summary>
        /// Codebook entry has similar validity mechanism as codebook. This defines time from which this entry is valid. CDM attribute class name: CodebookEntryValidFrom.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.DateTime ValidFrom { get; set; } = default!;

        /// <summary>
        /// Codebook entry has similar validity mechanism as codebook. This defines time until which this entry is valid. CDM attribute class name: CodebookEntryValidTo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidTo { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntryValues")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.Collections.Generic.ICollection<GetCodebookResponse_CodebookEntryValue> CodebookEntryValues { get; set; } = new System.Collections.ObjectModel.Collection<GetCodebookResponse_CodebookEntryValue>();

        

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookResponse_Codebook
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Textual description of codebook. CDM attribute class name: CodebookDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Description { get; set; } = default!;

        /// <summary>
        /// Flag that represents that version sent is latest version. CDM attribute class name: CodebookLatestVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("latestVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool LatestVersion { get; set; } = default!;

        /// <summary>
        /// . CDM attribute class name: CodebookLifeCycleProcess. Codebook type: CB_CodebookLifeCycleProcess.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lifeCycleProcess")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string LifeCycleProcess { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownerGroups")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string> OwnerGroups { get; set; } = default!;

        /// <summary>
        /// Defines state of the codebook - if it is active, being replaced, deprecated etc. CDM attribute class name: CodebookStateV2. Codebook type: CB_CodebookState.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string State { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. Until which time is codebook valid. CDM attribute class name: CodebookValidFrom.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.DateTime ValidFrom { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. From which time is codebook valid. CDM attribute class name: CodebookValidTo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidTo { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntries")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<GetCodebookResponse_CodebookEntry> CodebookEntries { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Generic paging information. Contains information about how called system handled paging. CDM entity name(s): PagingResult.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookResponse_PagingResult
    {
        /// <summary>
        /// Total number of entries that are matching requirements, not number of returned.E.g. there could be 30 out of 1087 entries displayed on page. 1087 will be in this attribute. CDM attribute class name: PagingResultNumberOfEntriesTotal.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("numberOfEntriesTotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long NumberOfEntriesTotal { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Generic paging information. How many entries should be sent from which 'position'. CDM entity name(s): Paging.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookResponse_PagingRes
    {
        /// <summary>
        /// No. of entries after which other entries should be sent.For paging in direction from the beginning, e.g. for 187 results and constant maximum page size 50, sequence will be 0,50,100,150. CDM attribute class name: PagingAfterNumber.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("afterNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int AfterNumber { get; set; } = default!;

        /// <summary>
        /// Page size.Number of entries to return. CDM attribute class name: PagingNumberOfEntries.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("numberOfEntries")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int NumberOfEntries { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("pagingResult")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public GetCodebookResponse_PagingResult PagingResult { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookResponse_GetCodebookResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebook")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookResponse_Codebook Codebook { get; set; } = new GetCodebookResponse_Codebook();

        [System.Text.Json.Serialization.JsonPropertyName("pagingRes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public GetCodebookResponse_PagingRes PagingRes { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Defines what is the name of value and value's data type. CDM entity name(s): CodebookColumn.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookEntryResponse_CodebookColumn
    {
        /// <summary>
        /// Human readable codebook column identifier within one codebook. CDM attribute class name: CodebookColumnCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Name of value.  CDM attribute class name: CodebookColumnValueName.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("valueName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ValueName { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// One value in codebook entry. There is no default language, so actual values for each language is stored in LanguageMutation Entity. CDM entity name(s): CodebookEntryValue.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookEntryResponse_CodebookEntryValue
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebookColumn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookEntryResponse_CodebookColumn CodebookColumn { get; set; } = new GetCodebookEntryResponse_CodebookColumn();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// One codebook entry in one language. CDM entity name(s): CodebookEntryValueLanguageMutation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookEntryResponse_CodebookEntryValueLanguageMutation
    {
        /// <summary>
        /// Description of language mutation. CDM attribute class name: CodebookEntryValueLanguageMutationDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mutationDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string MutationDescription { get; set; } = default!;

        /// <summary>
        /// Language in which this value is. CDM attribute class name: CodebookEntryValueLanguageMutationLanguage. Codebook type: CB_Piggy.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mutationLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string MutationLanguage { get; set; } = default!;

        /// <summary>
        /// Value in language defined in other atribute. CDM attribute class name: CodebookEntryValueLanguageMutationValue.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mutationValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string MutationValue { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Polozka ciselniku.One item in codebook. Has one code and unlimited number of values and each can have any number of language translations.  CDM entity name(s): CodebookEntry.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookEntryResponse_CodebookEntry
    {
        /// <summary>
        /// Unique codebook entry identifier. CDM attribute class name: CodebookEntryCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Relative position of codebook entry in comparison to other codebook entries. Lower number means higher 'priority'. E.g. lowest number means entry is first in ordered list.  CDM attribute class name: CodebookEntrySortOrder.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sortOrder")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int SortOrder { get; set; } = default!;

        /// <summary>
        /// Defines state of the codebook entry - if it is active, deprecated, inactive etc. CDM attribute class name: CodebookEntryStateV2. Codebook type: CB_CodebookEntryState.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string State { get; set; } = default!;

        /// <summary>
        /// Codebook entry has similar validity mechanism as codebook. This defines time from which this entry is valid. CDM attribute class name: CodebookEntryValidFrom.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.DateTime ValidFrom { get; set; } = default!;

        /// <summary>
        /// Codebook entry has similar validity mechanism as codebook. This defines time until which this entry is valid. CDM attribute class name: CodebookEntryValidTo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidTo { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntryValues")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.Collections.Generic.ICollection<GetCodebookEntryResponse_CodebookEntryValue> CodebookEntryValues { get; set; } = new System.Collections.ObjectModel.Collection<GetCodebookEntryResponse_CodebookEntryValue>();

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntryValueLanguageMutations")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<GetCodebookEntryResponse_CodebookEntryValueLanguageMutation> CodebookEntryValueLanguageMutations { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookEntryResponse_Codebook
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntries")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<GetCodebookEntryResponse_CodebookEntry> CodebookEntries { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookEntryResponse_GetCodebookEntryResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebook")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookEntryResponse_Codebook Codebook { get; set; } = new GetCodebookEntryResponse_Codebook();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookList_Codebook
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Textual description of codebook. CDM attribute class name: CodebookDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Description { get; set; } = default!;

        /// <summary>
        /// Flag that represents that version sent is latest version. CDM attribute class name: CodebookLatestVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("latestVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool LatestVersion { get; set; } = default!;

        /// <summary>
        /// Defines state of the codebook - if it is active, being replaced, deprecated etc. CDM attribute class name: CodebookStateV2. Codebook type: CB_CodebookState.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string State { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. Until which time is codebook valid. CDM attribute class name: CodebookValidFrom.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.DateTime ValidFrom { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. From which time is codebook valid. CDM attribute class name: CodebookValidTo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidTo { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookList_GetCodebookListResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebooks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<GetCodebookList_Codebook> Codebooks { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Polozka ciselniku.One item in codebook. Has one code and unlimited number of values and each can have any number of language translations.  CDM entity name(s): CodebookEntry.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingResponse_CodebookEntryMappingProperty
    {
        /// <summary>
        /// Defines state of the codebook entry - if it is active, deprecated, inactive etc. CDM attribute class name: CodebookEntryStateV2. Codebook type: CB_CodebookEntryState.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string State { get; set; } = default!;

        /// <summary>
        /// Codebook entry has similar validity mechanism as codebook. This defines time from which this entry is valid. CDM attribute class name: CodebookEntryValidFrom.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.DateTime ValidFrom { get; set; } = default!;

        /// <summary>
        /// Codebook entry has similar validity mechanism as codebook. This defines time until which this entry is valid. CDM attribute class name: CodebookEntryValidTo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidTo { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Polozka ciselniku.One item in codebook. Has one code and unlimited number of values and each can have any number of language translations.  CDM entity name(s): CodebookEntry.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingResponse_CodebookEntryReference
    {
        /// <summary>
        /// Unique codebook entry identifier. CDM attribute class name: CodebookEntryCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Mapping of one code (CodebookEntry) from two codebooks. CDM entity name(s): CodebookEntryMapping.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingResponse_CodebookEntryMapping
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntryMappingProperty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingResponse_CodebookEntryMappingProperty CodebookEntryMappingProperty { get; set; } = new GetCodebookMappingResponse_CodebookEntryMappingProperty();

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntrySource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingResponse_CodebookEntryReference CodebookEntrySource { get; set; } = new GetCodebookMappingResponse_CodebookEntryReference();

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntryTarget")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingResponse_CodebookEntryReference CodebookEntryTarget { get; set; } = new GetCodebookMappingResponse_CodebookEntryReference();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingResponse_CodebookReference
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingResponse_Codebook
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Textual description of codebook. CDM attribute class name: CodebookDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Description { get; set; } = default!;

        /// <summary>
        /// Flag that represents that version sent is latest version. CDM attribute class name: CodebookLatestVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("latestVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool LatestVersion { get; set; } = default!;

        /// <summary>
        /// . CDM attribute class name: CodebookLifeCycleProcess. Codebook type: CB_CodebookLifeCycleProcess.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lifeCycleProcess")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string LifeCycleProcess { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ownerGroups")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string> OwnerGroups { get; set; } = default!;

        /// <summary>
        /// Defines state of the codebook - if it is active, being replaced, deprecated etc. CDM attribute class name: CodebookStateV2. Codebook type: CB_CodebookState.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string State { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. Until which time is codebook valid. CDM attribute class name: CodebookValidFrom.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.DateTime ValidFrom { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. From which time is codebook valid. CDM attribute class name: CodebookValidTo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidTo { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Mapping between two codebooks (always keys). Relationship is mapping CodebookEntries (rows of codebook) between two codebooks.It is specialization of codebook as resulting union of mapped codebooks is taken as another codebook. CDM entity name(s): CodebookMapping.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingResponse_CodebookMapping : GetCodebookMappingResponse_Codebook
    {
        /// <summary>
        /// Flag that signifies that mapping is only one way. From codebook ONE to TWO. CDM attribute class name: CodebookMappingOneWayONEtoTWO.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("oneWayONEtoTWO")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool OneWayONEtoTWO { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookEntryMappings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<GetCodebookMappingResponse_CodebookEntryMapping> CodebookEntryMappings { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookSource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingResponse_CodebookReference CodebookSource { get; set; } = new GetCodebookMappingResponse_CodebookReference();

        [System.Text.Json.Serialization.JsonPropertyName("codebookTarget")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingResponse_CodebookReference CodebookTarget { get; set; } = new GetCodebookMappingResponse_CodebookReference();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingResponse_GetCodebookMappingResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebookMapping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingResponse_CodebookMapping CodebookMapping { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingList_CodebookReference
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingList_Codebook
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Textual description of codebook. CDM attribute class name: CodebookDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Description { get; set; } = default!;

        /// <summary>
        /// Flag that represents that version sent is latest version. CDM attribute class name: CodebookLatestVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("latestVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool LatestVersion { get; set; } = default!;

        /// <summary>
        /// Defines state of the codebook - if it is active, being replaced, deprecated etc. CDM attribute class name: CodebookStateV2. Codebook type: CB_CodebookState.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string State { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. Until which time is codebook valid. CDM attribute class name: CodebookValidFrom.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.DateTime ValidFrom { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. From which time is codebook valid. CDM attribute class name: CodebookValidTo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidTo { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Mapping between two codebooks (always keys). Relationship is mapping CodebookEntries (rows of codebook) between two codebooks.It is specialization of codebook as resulting union of mapped codebooks is taken as another codebook. CDM entity name(s): CodebookMapping.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingList_CodebookMapping : GetCodebookMappingList_Codebook
    {
        /// <summary>
        /// Flag that signifies that mapping is only one way. From codebook ONE to TWO. CDM attribute class name: CodebookMappingOneWayONEtoTWO.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("oneWayONEtoTWO")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool OneWayONEtoTWO { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookSource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingList_CodebookReference CodebookSource { get; set; } = new GetCodebookMappingList_CodebookReference();

        [System.Text.Json.Serialization.JsonPropertyName("codebookTarget")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingList_CodebookReference CodebookTarget { get; set; } = new GetCodebookMappingList_CodebookReference();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingList_GetCodebookMappingListResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebookMappings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<GetCodebookMappingList_CodebookMapping> CodebookMappings { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingVersionHistory_CodebookReference
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingVersionHistory_Codebook
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Textual description of codebook. CDM attribute class name: CodebookDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Description { get; set; } = default!;

        /// <summary>
        /// Defines state of the codebook - if it is active, being replaced, deprecated etc. CDM attribute class name: CodebookStateV2. Codebook type: CB_CodebookState.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string State { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. Until which time is codebook valid. CDM attribute class name: CodebookValidFrom.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.DateTime ValidFrom { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. From which time is codebook valid. CDM attribute class name: CodebookValidTo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidTo { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Mapping between two codebooks (always keys). Relationship is mapping CodebookEntries (rows of codebook) between two codebooks.It is specialization of codebook as resulting union of mapped codebooks is taken as another codebook. CDM entity name(s): CodebookMapping.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingVersionHistory_CodebookMapping : GetCodebookMappingVersionHistory_Codebook
    {

        [System.Text.Json.Serialization.JsonPropertyName("childrens")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<GetCodebookMappingVersionHistory_CodebookMapping> Childrens { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookSource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingVersionHistory_CodebookReference CodebookSource { get; set; } = new GetCodebookMappingVersionHistory_CodebookReference();

        [System.Text.Json.Serialization.JsonPropertyName("codebookTarget")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookMappingVersionHistory_CodebookReference CodebookTarget { get; set; } = new GetCodebookMappingVersionHistory_CodebookReference();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookMappingVersionHistory_GetCodebookMappingVersionHistoryResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebookMappings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.Collections.Generic.ICollection<GetCodebookMappingVersionHistory_CodebookMapping> CodebookMappings { get; set; } = new System.Collections.ObjectModel.Collection<GetCodebookMappingVersionHistory_CodebookMapping>();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookStructure_CodebookReference
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Defines what is the name of value and value's data type. CDM entity name(s): CodebookColumn.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookStructure_CodebookColumn
    {
        /// <summary>
        /// Human readable codebook column identifier within one codebook. CDM attribute class name: CodebookColumnCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Default value to be filled in this property. CDM attribute class name: CommonCodebookPropertyValueAttributesDefaultValue.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("defaultValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string DefaultValue { get; set; } = default!;

        /// <summary>
        /// Description of column. CDM attribute class name: CodebookColumnDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Description { get; set; } = default!;

        /// <summary>
        /// Flag whether this column is key of the codebook. CDM attribute class name: CodebookColumnKey.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("key")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Key { get; set; } = default!;

        /// <summary>
        /// Defines maximum length of string within this property. Relevant only for strings. CDM attribute class name: CommonCodebookPropertyValueAttributesMaxLength.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maxLength")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long MaxLength { get; set; } = default!;

        /// <summary>
        /// Flag whether this property must be filled in. CDM attribute class name: CommonCodebookPropertyValueAttributesRequired.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("required")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Required { get; set; } = default!;

        /// <summary>
        /// Flag that defines that values in this column are unique. CDM attribute class name: CodebookColumnUnique.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("unique")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Unique { get; set; } = default!;

        /// <summary>
        /// Regexp representing validation rule for values in this property. CDM attribute class name: CommonCodebookPropertyValueAttributesValidationRule.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validationRule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string ValidationRule { get; set; } = default!;

        /// <summary>
        /// Data type of property. CDM attribute class name: CommonCodebookPropertyValueAttributesValueDataType. Codebook type: CB_Piggy.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("valueDataType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string ValueDataType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookReference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public GetCodebookStructure_CodebookReference CodebookReference { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Defines structure of property that is attached to codebook. CDM entity name(s): CodebookProperty.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookStructure_CodebookProperty
    {
        /// <summary>
        /// Regexp representing validation rule for values in this property. CDM attribute class name: CommonCodebookPropertyValueAttributesValidationRule.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validationRule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ValidationRule { get; set; } = default!;

        /// <summary>
        /// Data type of property. CDM attribute class name: CommonCodebookPropertyValueAttributesValueDataType. Codebook type: CB_Piggy.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("valueDataType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string ValueDataType { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Defines structure of codebook, individual column data types and properties. CDM entity name(s): CodebookStructure.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookStructure_CodebookStructure
    {
        /// <summary>
        /// Unique identifier of codebook structure. CDM attribute class name: CodebookStructureCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Free text representing description of codebook data structure. CDM attribute class name: CodebookStructureDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Description { get; set; } = default!;

        /// <summary>
        /// Flag that defines whether key is enabled for columns of this codebook, i.e. it is possible to set some columns as key columns. CDM attribute class name: CodebookStructureEnableKey.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("enableKey")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool EnableKey { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookColumns")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<GetCodebookStructure_CodebookColumn> CodebookColumns { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("codebookProperty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookStructure_CodebookProperty CodebookProperty { get; set; } = new GetCodebookStructure_CodebookProperty();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookStructure_Codebook
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebookStructure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookStructure_CodebookStructure CodebookStructure { get; set; } = new GetCodebookStructure_CodebookStructure();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookStructure_GetCodebookStructureResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebook")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public GetCodebookStructure_Codebook Codebook { get; set; } = new GetCodebookStructure_Codebook();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ciselnik.Data model of codebook used form codebook distribution across bank. All the way from codebook storage to codebook user. CDM entity name(s): Codebook.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookVersionHistory_Codebook
    {
        /// <summary>
        /// Unique identifier of codebookCB_. CDM attribute class name: CodebookCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Textual description of codebook. CDM attribute class name: CodebookDescription.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Description { get; set; } = default!;

        /// <summary>
        /// Defines state of the codebook - if it is active, being replaced, deprecated etc. CDM attribute class name: CodebookStateV2. Codebook type: CB_CodebookState.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string State { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. Until which time is codebook valid. CDM attribute class name: CodebookValidFrom.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.DateTime ValidFrom { get; set; } = default!;

        /// <summary>
        /// Defines validity of whole codebook. From which time is codebook valid. CDM attribute class name: CodebookValidTo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidTo { get; set; } = default!;

        /// <summary>
        /// Actual version of codebook. CDM attribute class name: CodebookVersion.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Version { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("childrens")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<GetCodebookVersionHistory_Codebook> Childrens { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetCodebookVersionHistory_GetCodebookVersionHistoryResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("codebooks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public System.Collections.Generic.ICollection<GetCodebookVersionHistory_Codebook> Codebooks { get; set; } = new System.Collections.ObjectModel.Collection<GetCodebookVersionHistory_Codebook>();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StringErrorModel
    {
        /// <summary>
        /// Code of the error that occured, common error codes are from codebook CB_ErrorCodes. Rules for codes: https://wiki.kb.cz/confluence/display/PATHFINDER/CB_ErrorCodes
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        /// <summary>
        /// Error detail (i.e. from back-end) which describes the event that occured in more details
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("detail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Detail { get; set; } = default!;

        /// <summary>
        /// Error category - java SPEED legacy, it should be ignored.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Category { get; set; } = default!;

        /// <summary>
        /// Error message in plain text format (description related to the given error code)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Message { get; set; } = default!;

        /// <summary>
        /// Unique error ID (GUID) is the generated unique identifier of the error message
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("uuid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Uuid { get; set; } = default!;

        /// <summary>
        /// Http status code - java SPEED legacy, redundant information, it should be ignored.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("httpStatusCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string HttpStatusCode { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ValidationErrorModel
    {
        /// <summary>
        /// Code of the error that occured, common error codes are from codebook CB_ErrorCodes. Rules for codes: https://wiki.kb.cz/confluence/display/PATHFINDER/CB_ErrorCodes
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Code { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("detail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public ValidationDetail Detail { get; set; } = default!;

        /// <summary>
        /// Error category - java SPEED legacy, it should be ignored.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Category { get; set; } = default!;

        /// <summary>
        /// Error message in plain text format (description related to the given error code)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Message { get; set; } = default!;

        /// <summary>
        /// Unique error ID (GUID) is the generated unique identifier of the error message
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("uuid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Uuid { get; set; } = default!;

        /// <summary>
        /// Http status code - java SPEED legacy, redundant information, it should be ignored.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("httpStatusCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string HttpStatusCode { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ValidationDetail
    {

        [System.Text.Json.Serialization.JsonPropertyName("violatedConstraints")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ViolatedConstraint> ViolatedConstraints { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ViolatedConstraint
    {
        /// <summary>
        /// The path to the element for which the validation error has occured
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("attribute")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Attribute { get; set; } = default!;

        /// <summary>
        /// Validation error message in plain text format (description related to the given validation exception)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string Message { get; set; } = default!;

        /// <summary>
        /// Name of class in which validation problem was detected.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("rootObjectName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public string RootObjectName { get; set; } = default!;

        /// <summary>
        /// The value of the element for which the validation error has occured
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invalidValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public object InvalidValue { get; set; } = new object();

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604