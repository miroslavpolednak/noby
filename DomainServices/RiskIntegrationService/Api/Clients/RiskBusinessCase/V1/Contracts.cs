//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace DomainServices.RiskIntegrationService.Api.Clients.RiskBusinessCase.V1.Contracts
{
    using System = global::System;

    

    /// <summary>
    /// A command abstraction
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class Command
    {
        /// <summary>
        /// Identifier of type of the command
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identifier")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CommandIdentifier Identifier { get; set; }

    }

    /// <summary>
    /// A command abstraction
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CommandCommandIdentifiers
    {
        /// <summary>
        /// Identifier of type of the command
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identifier")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CommandCommandIdentifiersIdentifier? Identifier { get; set; }

    }

    /// <summary>
    /// A command identification
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CommandIdentifier
    {
        /// <summary>
        /// ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

    }

    /// <summary>
    /// The CreateAssessment command instance
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CreateAssessmentCommandInstance
    {
        /// <summary>
        /// id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// command
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("command")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CommandCommandIdentifiers Command { get; set; }

        /// <summary>
        /// Result
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier Result { get; set; }

        /// <summary>
        /// Command Status
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public DefaultCommandStates Status { get; set; }

    }

    /// <summary>
    /// DefaultCommandStates command status enumeration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class DefaultCommandStates
    {
        /// <summary>
        /// A code of an object
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DefaultCommandStatesCode? Code { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("completionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DefaultCommandStatesCompletionType? CompletionType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Reason Reason { get; set; }

    }

    /// <summary>
    /// Reason
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class Reason
    {
        /// <summary>
        /// Code of the reason / symptom
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Code { get; set; }

        /// <summary>
        /// Level
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("level")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ReasonLevel Level { get; set; }

        /// <summary>
        /// Weight
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("weight")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? Weight { get; set; }

        /// <summary>
        /// Parameters
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("parameters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.IDictionary<string, string> Parameters { get; set; }

    }

    /// <summary>
    /// ResourceIdentifier
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class ResourceIdentifier
    {
        /// <summary>
        /// The resource instance code, eg. 'KBCZ'
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("instance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string Instance { get; set; }

        /// <summary>
        /// The resource domain code, eg. 'CFLM'
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domain")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string Domain { get; set; }

        /// <summary>
        /// The resource code (the in-domain resource code, eg. 'LimitModel')
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(64)]
        public string Resource { get; set; }

        /// <summary>
        /// ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(64)]
        public string Id { get; set; }

        /// <summary>
        /// The variant of the resource, eg. distinguishing the origin of the source
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variant")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string Variant { get; set; }

    }

    /// <summary>
    /// The CreateAssessment command
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CreateAssessmentCommand
    {
        /// <summary>
        /// Identifier of type of the command
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identifier")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CreateAssessmentCommandIdentifier Identifier { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationAssessmentCreate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationAssessmentCreate LoanApplicationAssessmentCreate { get; set; }

    }

    /// <summary>
    /// LoanApplicationAssessmentCreate
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationAssessmentCreate
    {

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier LoanApplicationId { get; set; } = new ResourceIdentifier();

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDataVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string LoanApplicationDataVersion { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("itChannel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationAssessmentCreateItChannel ItChannel { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("itChannelPrevious")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationAssessmentCreateItChannelPrevious? ItChannelPrevious { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("assessmentMode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationAssessmentCreateAssessmentMode AssessmentMode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("grantingProcedureCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationAssessmentCreateGrantingProcedureCode GrantingProcedureCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("selfApprovalRequired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool SelfApprovalRequired { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("systemApprovalRequired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool SystemApprovalRequired { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("riskCampaignCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskCampaignCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationException")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationException> LoanApplicationException { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("exceptionHighestApprovalLevel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ExceptionHighestApprovalLevel { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("expand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   

        // TODO(system.text.json): Add string enum item converter
        public System.Collections.Generic.ICollection<Expand> Expand { get; set; }

    }

    /// <summary>
    /// LoanApplicationException
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationException
    {
        /// <summary>
        /// Arm
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("arm")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Arm { get; set; }

        /// <summary>
        /// Reason Code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("reasonCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ReasonCode { get; set; }

    }

    /// <summary>
    /// Amount
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class Amount
    {
        /// <summary>
        /// Hodnota částky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Value { get; set; }

        /// <summary>
        /// Kód měny částky (ISO 4217)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CurrencyCode { get; set; }

    }

    /// <summary>
    /// AssessmentDetail
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class AssessmentDetail
    {
        /// <summary>
        /// Assessment detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationScore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationScore LoanApplicationScore { get; set; }

        /// <summary>
        /// Assessment detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationLimit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationLimit LoanApplicationLimit { get; set; }

        /// <summary>
        /// Assessment detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationRiskCharacteristics")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public RiskCharacteristics LoanApplicationRiskCharacteristics { get; set; }

    }

    /// <summary>
    /// AssessmentReasonDetail
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class AssessmentReasonDetail
    {
        /// <summary>
        /// Target
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("target")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Target { get; set; }

        /// <summary>
        /// Desc
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("desc")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Desc { get; set; }

        /// <summary>
        /// Result
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Result { get; set; }

        /// <summary>
        /// Target
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<Resource> Resource { get; set; }

    }

    /// <summary>
    /// Change
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class Change
    {
        /// <summary>
        /// Identita actora/uživatele
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identityId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string IdentityId { get; set; }

        /// <summary>
        /// Change date and time 
        /// <br/>Format: yyyy-MM-dd'T'HH:mm:ss.SSSXXX (ISO 8601)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTimeOffset? Timestamp { get; set; }

    }

    /// <summary>
    /// CollateralRiskCharacteristics
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CollateralRiskCharacteristics
    {
        /// <summary>
        /// Ltv
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ltv")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Ltv { get; set; }

        /// <summary>
        /// Ltfv
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ltfv")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Ltfv { get; set; }

        /// <summary>
        /// Ltp
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ltp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Ltp { get; set; }

        /// <summary>
        /// SumAppraisedValue
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sumAppraisedValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? SumAppraisedValue { get; set; }

        /// <summary>
        /// TotalCollUsedValue
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("totalCollUsedValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? TotalCollUsedValue { get; set; }

    }

    /// <summary>
    /// Counterparty Assessment Detail
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CounterpartyAssessmentDetail
    {
        /// <summary>
        /// Id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Id { get; set; }

        /// <summary>
        /// Counterparty id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("counterPartyId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? CounterPartyId { get; set; }

        /// <summary>
        /// Customer id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CustomerId { get; set; }

        /// <summary>
        /// Assessment Detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("assessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public AssessmentDetail AssessmentDetail { get; set; }

    }

    /// <summary>
    /// Household Assessment detail
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class HouseholdAssessmentDetail
    {
        /// <summary>
        /// Id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Id { get; set; }

        /// <summary>
        /// Household id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? HouseholdId { get; set; }

        /// <summary>
        /// Household index
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdIndex")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? HouseholdIndex { get; set; }

        /// <summary>
        /// Assessment Detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("assessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public AssessmentDetail AssessmentDetail { get; set; }

    }

    /// <summary>
    /// An identified object
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class Identified
    {
        /// <summary>
        /// ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// LoanApplication resource-identifier
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanApplicationId { get; set; }

        /// <summary>
        /// Risk BusinessCase ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinesscaseId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskBusinesscaseId { get; set; }

        /// <summary>
        /// riskBusinesscaseExpirationDate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinesscaseExpirationDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTimeOffset? RiskBusinesscaseExpirationDate { get; set; }

        /// <summary>
        /// Assessment result
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("assessmentResult")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? AssessmentResult { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("standardRiskCosts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? StandardRiskCosts { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("glTableCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? GlTableCode { get; set; }

        /// <summary>
        /// LoanApplicationAssessment resource-identifier
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationAssessmentReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationAssessmentReason> LoanApplicationAssessmentReason { get; set; }

        /// <summary>
        /// Assessment detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("assessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public AssessmentDetail AssessmentDetail { get; set; }

        /// <summary>
        /// HouseholdAssessmentDetail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdAssessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<HouseholdAssessmentDetail> HouseholdAssessmentDetail { get; set; }

        /// <summary>
        /// HouseholdAssessmentDetail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("counterpartyAssessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<CounterpartyAssessmentDetail> CounterpartyAssessmentDetail { get; set; }

        /// <summary>
        /// CollateralRiskCharacteristics
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("collateralRiskCharacteristics")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CollateralRiskCharacteristics CollateralRiskCharacteristics { get; set; }

        /// <summary>
        /// LoanApplicationApprovalPossibilities
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationApprovalPossibilities")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationApprovalPossibilities LoanApplicationApprovalPossibilities { get; set; }

        /// <summary>
        /// LoanApplicationAssessment version
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public SemanticVersion Version { get; set; }

        /// <summary>
        /// created
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Change Created { get; set; }

        /// <summary>
        /// updated
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("updated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Change Updated { get; set; }

    }

    /// <summary>
    /// Možnosti samo/autoschválení
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationApprovalPossibilities
    {
        /// <summary>
        /// Id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("selfApprovalPossible")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? SelfApprovalPossible { get; set; }

        /// <summary>
        /// Id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("autoApprovalPossible")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? AutoApprovalPossible { get; set; }

    }

    /// <summary>
    /// LoanApplicationAssessmentReason
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationAssessmentReason
    {
        /// <summary>
        /// Code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Code { get; set; }

        /// <summary>
        /// Level
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("level")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Level { get; set; }

        /// <summary>
        /// Weight
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("weight")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Weight { get; set; }

        /// <summary>
        /// Category
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Category { get; set; }

        /// <summary>
        /// Related Entity Id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("detail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public AssessmentReasonDetail Detail { get; set; }

    }

    /// <summary>
    /// LoanApplicationLimit
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationLimit
    {
        /// <summary>
        /// Loan Application Limit
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationLimit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount LoanApplicationLimit1 { get; set; }

        /// <summary>
        /// Loan Application Installment Limit
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationInstallmentLimit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount LoanApplicationInstallmentLimit { get; set; }

        /// <summary>
        /// Loan Application Collateral Limit
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCollateralLimit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount LoanApplicationCollateralLimit { get; set; }

        /// <summary>
        /// Remaining Annuity Living Amount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("remainingAnnuityLivingAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount RemainingAnnuityLivingAmount { get; set; }

        /// <summary>
        /// Remaining Annuity Living Amount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("calculationIrStressed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? CalculationIrStressed { get; set; }

        /// <summary>
        /// iir
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("iir")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Iir { get; set; }

        /// <summary>
        /// cir
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cir")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Cir { get; set; }

        /// <summary>
        /// dti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dti")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Dti { get; set; }

        /// <summary>
        /// dsti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dsti")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Dsti { get; set; }

    }

    /// <summary>
    /// LoanApplicationScore
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationScore
    {
        /// <summary>
        /// Value
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Value { get; set; }

        /// <summary>
        /// Scale
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("scale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Scale { get; set; }

    }

    /// <summary>
    /// Resource
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class Resource
    {
        /// <summary>
        /// Entity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Entity { get; set; }

        /// <summary>
        /// id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier Id { get; set; }

    }

    /// <summary>
    /// RiskCharacteristics
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class RiskCharacteristics
    {
        /// <summary>
        /// monthlyIncomeAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyIncomeAmount { get; set; }

        /// <summary>
        /// MonthlyCostsWithoutInstAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyCostsWithoutInstAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyCostsWithoutInstAmount { get; set; }

        /// <summary>
        /// MonthlyCostsWithoutInstAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallmentsInKBAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyInstallmentsInKBAmount { get; set; }

        /// <summary>
        /// MonhlyEntrepreneurInstallmentsInKBAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyEntrepreneurInstallmentsInKBAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyEntrepreneurInstallmentsInKBAmount { get; set; }

        /// <summary>
        /// MonhlyInstallmentsInMPSSAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallmentsInMPSSAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyInstallmentsInMPSSAmount { get; set; }

        /// <summary>
        /// MonhlyInstallmentsInOFIAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallmentsInOFIAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyInstallmentsInOFIAmount { get; set; }

        /// <summary>
        /// MonhlyInstallmentsInCBCBAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallmentsInCBCBAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyInstallmentsInCBCBAmount { get; set; }

    }

    /// <summary>
    /// SemanticVersion
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class SemanticVersion
    {
        /// <summary>
        /// Major part of a version
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("major")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Major { get; set; }

        /// <summary>
        /// Minor part of a version
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("minor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Minor { get; set; }

        /// <summary>
        /// Bugfix part of a version
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("bugfix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Bugfix { get; set; }

        /// <summary>
        /// A non-semantic part of a version
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nonSemanticPart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string NonSemanticPart { get; set; }

    }

    /// <summary>
    /// A command instance abstraction
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CommandInstance
    {
        /// <summary>
        /// Result
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public object Result { get; set; }

        /// <summary>
        /// Command Status
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CommandStateObject Status { get; set; }

    }

    /// <summary>
    /// A command state
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CommandState
    {
        /// <summary>
        /// A code of an object
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Enum Code { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("completionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CommandStateCompletionType? CompletionType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Reason Reason { get; set; }

    }

    /// <summary>
    /// A command state
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CommandStateObject
    {
        /// <summary>
        /// A code of an object
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public object Code { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("completionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CommandStateObjectCompletionType? CompletionType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Reason Reason { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class Enum
    {

    }

    /// <summary>
    /// RiskBusinessCaseCommandFilter
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class RiskBusinessCaseCommandFilter
    {

    }

    /// <summary>
    /// The CreateRiskBusinessCase command instance
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CreateRiskBusinessCaseCommandInstance
    {
        /// <summary>
        /// id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// command
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("command")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CommandCommandIdentifiers Command { get; set; }

        /// <summary>
        /// Result
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier Result { get; set; }

        /// <summary>
        /// Command Status
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public DefaultCommandStates Status { get; set; }

    }

    /// <summary>
    /// The CreateRiskBusinessCase command
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CreateRiskBusinessCaseCommand
    {
        /// <summary>
        /// Identifier of type of the command
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identifier")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CreateRiskBusinessCaseCommandIdentifier Identifier { get; set; }

    }

    /// <summary>
    /// The RiskBusinessCaseCommit command instance
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class RiskBusinessCaseCommitCommandInstance
    {
        /// <summary>
        /// id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// command
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("command")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CommandCommandIdentifiers Command { get; set; }

        /// <summary>
        /// Result
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier Result { get; set; }

        /// <summary>
        /// Command Status
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public DefaultCommandStates Status { get; set; }

    }

    /// <summary>
    /// The RiskBusinessCaseCommit command
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class RiskBusinessCaseCommitCommand
    {
        /// <summary>
        /// Identifier of type of the command
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identifier")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RiskBusinessCaseCommitCommandIdentifier Identifier { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class ResultReason
    {
        /// <summary>
        /// kód důvodu nespočtení výsledku.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Code { get; set; }

        /// <summary>
        /// popis důvodu nespočtení výsledku.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("desc")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Desc { get; set; }

    }

    /// <summary>
    /// Response
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class RiskBusinessCaseCommit
    {
        /// <summary>
        /// identifikátor obchodního případu v C4M
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RiskBusinessCaseId { get; set; }

        /// <summary>
        /// Datum a čas odpovědi
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Timestamp { get; set; }

        /// <summary>
        /// Status
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("operationResult")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string OperationResult { get; set; }

        /// <summary>
        /// Změněný  stav ukončení obchodu ze strany business commit, oproti požadovanému stavu obchodní aplikace
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseFinalState")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskBusinessCaseFinalState { get; set; }

        /// <summary>
        /// Důvod(y) nespočetní výsledků bonity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resultReasons")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ResultReason> ResultReasons { get; set; } = new System.Collections.ObjectModel.Collection<ResultReason>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CollateralAgreement
    {
        /// <summary>
        /// Identifikátor obchodního případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier Id { get; set; } = new ResourceIdentifier();

    }

    /// <summary>
    /// JobPost
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class JobPost
    {
        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

    }

    /// <summary>
    /// KbGroupPerson
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class KBGroupPerson
    {
        /// <summary>
        /// osobní číslo přihlášeného uživatele /schvalovatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier Id { get; set; }

        /// <summary>
        /// příjmení přihlášeného uživatele / příjmení schvalovatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("surname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Surname { get; set; }

        /// <summary>
        /// OrgUnit
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("orgUnit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public OrgUnit OrgUnit { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanAgreement
    {
        /// <summary>
        /// Identifikátor obchodního případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("distributionChannel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DistributionChannel { get; set; }

        /// <summary>
        /// Identifikátor obchodního případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("signatureType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string SignatureType { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationDealer
    {
        /// <summary>
        /// Identifikátor obchodního případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier Id { get; set; } = new ResourceIdentifier();

        /// <summary>
        /// Identifikátor obchodního případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("companyId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier CompanyId { get; set; } = new ResourceIdentifier();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationProduct
    {
        /// <summary>
        /// kód produktového shluku (shluk jednoho produktu).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ProductClusterCode { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanSoldProduct
    {
        /// <summary>
        /// Identifikátor obchodního případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier Id { get; set; } = new ResourceIdentifier();

    }

    /// <summary>
    /// OrgUnit
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class OrgUnit
    {
        /// <summary>
        /// pobočka + expozitura přihlášení uživatele / schvalovatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// název pobočky přihlášení  uživatele / schvalovatele 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Name { get; set; }

        /// <summary>
        /// kód pracovní pozice přihlášeného uživatele /schvalovatele
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("jobPost")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public JobPost JobPost { get; set; }

    }

    /// <summary>
    /// RiskBusinessCaseCommitCreate
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class RiskBusinessCaseCommitCreate
    {
        /// <summary>
        /// ID dané úvěrové žádosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier LoanApplicationId { get; set; } = new ResourceIdentifier();

        /// <summary>
        /// IT Channel.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("itChannel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RiskBusinessCaseCommitCreateItChannel ItChannel { get; set; }

        /// <summary>
        /// loanApplicationProduct.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationProduct")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public LoanApplicationProduct LoanApplicationProduct { get; set; } = new LoanApplicationProduct();

        /// <summary>
        /// riskBusinessCaseFinalResult.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseFinalResult")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RiskBusinessCaseCommitCreateRiskBusinessCaseFinalResult RiskBusinessCaseFinalResult { get; set; }

        /// <summary>
        /// loanSoldProduct.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanSoldProduct")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanSoldProduct LoanSoldProduct { get; set; }

        /// <summary>
        /// approvalLevel.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("approvalLevel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ApprovalLevel { get; set; }

        /// <summary>
        /// Datum schválení. 
        /// <br/>Format: yyyy-MM-dd
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("approvalDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]
        public System.DateTimeOffset? ApprovalDate { get; set; }

        /// <summary>
        /// loanAgreement.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanAgreement")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanAgreement LoanAgreement { get; set; }

        /// <summary>
        /// creator.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("creator")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public KBGroupPerson Creator { get; set; }

        /// <summary>
        /// approver.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("approver")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public KBGroupPerson Approver { get; set; }

        /// <summary>
        /// loanApplicationDealer.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDealer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationDealer LoanApplicationDealer { get; set; }

        /// <summary>
        /// collateralAgreements.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("collateralAgreements")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<CollateralAgreement> CollateralAgreements { get; set; }

    }

    /// <summary>
    /// RiskBusinessCase
    /// </summary>
    // [JsonInheritanceConverter(typeof(RiskBusinessCase), "@type")]
    [JsonInheritanceAttribute("RiskBusinessCaseExpanded", typeof(RiskBusinessCaseExpanded))]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class RiskBusinessCase
    {
        /// <summary>
        /// RiskBusinessCase resource-identifier
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskBusinessCaseId { get; set; }

    }

    /// <summary>
    /// RiskBusinessCaseExpanded
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class RiskBusinessCaseExpanded : RiskBusinessCase
    {

    }

    /// <summary>
    /// filtr sloužící pro založení RiskBusinessCase
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class Create
    {
        /// <summary>
        /// ID dané úvěrové žádosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier LoanApplicationId { get; set; } = new ResourceIdentifier();

        /// <summary>
        /// ID business procesu v rámci kterého Risk Business Case vzniká.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resourceProcessId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier ResourceProcessId { get; set; }

        /// <summary>
        /// Typ zdrojové aplikace (např. NOBY)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("itChannel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CreateItChannel ItChannel { get; set; }

    }

    /// <summary>
    /// Typ zdrojové aplikace (např. NOBY)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum ItChannel
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NOBY")]
        NOBY = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"STARBUILD")]
        STARBUILD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DCS")]
        DCS = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PF")]
        PF = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PFO")]
        PFO = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"AON")]
        AON = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum Anonymous
    {

        [System.Runtime.Serialization.EnumMember(Value = @"assessment")]
        Assessment = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum CommandCommandIdentifiersIdentifier
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE_ASSESSMENT")]
        CREATE_ASSESSMENT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE_BUSINESS_CASE")]
        CREATE_BUSINESS_CASE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"COMMIT_BUSINESS_CASE")]
        COMMIT_BUSINESS_CASE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"GET_ASSESSMENT")]
        GET_ASSESSMENT = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum DefaultCommandStatesCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSING")]
        PROCESSING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"SUCCEEDED")]
        SUCCEEDED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"FAILED")]
        FAILED = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum DefaultCommandStatesCompletionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INCOMPLETE")]
        INCOMPLETE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETED")]
        COMPLETED = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum ReasonLevel
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INFO")]
        INFO = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"WARNING")]
        WARNING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"ERROR")]
        ERROR = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum CreateAssessmentCommandIdentifier
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE_ASSESSMENT")]
        CREATE_ASSESSMENT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE_BUSINESS_CASE")]
        CREATE_BUSINESS_CASE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"COMMIT_BUSINESS_CASE")]
        COMMIT_BUSINESS_CASE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"GET_ASSESSMENT")]
        GET_ASSESSMENT = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationAssessmentCreateItChannel
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NOBY")]
        NOBY = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"STARBUILD")]
        STARBUILD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DCS")]
        DCS = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PF")]
        PF = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PFO")]
        PFO = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"AON")]
        AON = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationAssessmentCreateItChannelPrevious
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NOBY")]
        NOBY = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"STARBUILD")]
        STARBUILD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DCS")]
        DCS = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PF")]
        PF = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PFO")]
        PFO = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"AON")]
        AON = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationAssessmentCreateAssessmentMode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PS")]
        PS = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SC")]
        SC = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"FI")]
        FI = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationAssessmentCreateGrantingProcedureCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CPG")]
        CPG = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SC")]
        SC = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"EMP")]
        EMP = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"NCR")]
        NCR = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"NSR")]
        NSR = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"QLC")]
        QLC = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"SEL")]
        SEL = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"STD")]
        STD = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"STU")]
        STU = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"XM")]
        XM = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"XT")]
        XT = 10,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum Expand
    {

        [System.Runtime.Serialization.EnumMember(Value = @"assessmentDetail")]
        AssessmentDetail = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"householdAssessmentDetail")]
        HouseholdAssessmentDetail = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"counterpartyAssessmentDetail")]
        CounterpartyAssessmentDetail = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"loanApplicationApprovalPossibilities")]
        LoanApplicationApprovalPossibilities = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"collateralRiskCharacteristics")]
        CollateralRiskCharacteristics = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum CommandStateCompletionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INCOMPLETE")]
        INCOMPLETE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETED")]
        COMPLETED = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum CommandStateObjectCompletionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INCOMPLETE")]
        INCOMPLETE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETED")]
        COMPLETED = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum CreateRiskBusinessCaseCommandIdentifier
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE_ASSESSMENT")]
        CREATE_ASSESSMENT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE_BUSINESS_CASE")]
        CREATE_BUSINESS_CASE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"COMMIT_BUSINESS_CASE")]
        COMMIT_BUSINESS_CASE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"GET_ASSESSMENT")]
        GET_ASSESSMENT = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum RiskBusinessCaseCommitCommandIdentifier
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE_ASSESSMENT")]
        CREATE_ASSESSMENT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE_BUSINESS_CASE")]
        CREATE_BUSINESS_CASE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"COMMIT_BUSINESS_CASE")]
        COMMIT_BUSINESS_CASE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"GET_ASSESSMENT")]
        GET_ASSESSMENT = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum RiskBusinessCaseCommitCreateItChannel
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NOBY")]
        NOBY = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"STARBUILD")]
        STARBUILD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DCS")]
        DCS = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PF")]
        PF = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PFO")]
        PFO = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"AON")]
        AON = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum RiskBusinessCaseCommitCreateRiskBusinessCaseFinalResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELLED_BY_CLIENT")]
        CANCELLED_BY_CLIENT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"REFUSED_BY_OFFICER")]
        REFUSED_BY_OFFICER = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PROVIDED")]
        PROVIDED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"ALREADY_PROVIDED_BY_EXT_SYS")]
        ALREADY_PROVIDED_BY_EXT_SYS = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"TIMEOUT_BY_EXT_SYS")]
        TIMEOUT_BY_EXT_SYS = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum CreateItChannel
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NOBY")]
        NOBY = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"STARBUILD")]
        STARBUILD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DCS")]
        DCS = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PF")]
        PF = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PFO")]
        PFO = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"AON")]
        AON = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple = true)]
    internal class JsonInheritanceAttribute : System.Attribute
    {
        public JsonInheritanceAttribute(string key, System.Type type)
        {
            Key = key;
            Type = type;
        }

        public string Key { get; }

        public System.Type Type { get; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class JsonInheritanceConverterAttribute : System.Text.Json.Serialization.JsonConverterAttribute
    {
        public string DiscriminatorName { get; }

        public JsonInheritanceConverterAttribute(System.Type baseType, string discriminatorName = "discriminator")
            : base(typeof(JsonInheritanceConverter<>).MakeGenericType(baseType))
        {
            DiscriminatorName = discriminatorName;
        }
    }

    public class JsonInheritanceConverter<TBase> : System.Text.Json.Serialization.JsonConverter<TBase>
    {
        private readonly string _discriminatorName;

        public JsonInheritanceConverter()
        {
            var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute<JsonInheritanceConverterAttribute>(typeof(TBase));
            _discriminatorName = attribute?.DiscriminatorName ?? "discriminator";
        }

        public JsonInheritanceConverter(string discriminatorName)
        {
            _discriminatorName = discriminatorName;
        }

        public string DiscriminatorName { get { return _discriminatorName; } }

        public override TBase Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
        {
            var document = System.Text.Json.JsonDocument.ParseValue(ref reader);
            var hasDiscriminator = document.RootElement.TryGetProperty(_discriminatorName, out var discriminator);
            var subtype = GetDiscriminatorType(document.RootElement, typeToConvert, hasDiscriminator ? discriminator.GetString() : null);

            var bufferWriter = new System.IO.MemoryStream();
            using (var writer = new System.Text.Json.Utf8JsonWriter(bufferWriter))
            {
                document.RootElement.WriteTo(writer);
            }

            return (TBase)System.Text.Json.JsonSerializer.Deserialize(bufferWriter.ToArray(), subtype, options);
        }

        public override void Write(System.Text.Json.Utf8JsonWriter writer, TBase value, System.Text.Json.JsonSerializerOptions options)
        {
            writer.WriteStartObject();
            writer.WriteString(_discriminatorName, GetDiscriminatorValue(value.GetType()));

            var bytes = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes((object)value, options);
            var document = System.Text.Json.JsonDocument.Parse(bytes);
            foreach (var property in document.RootElement.EnumerateObject())
            {
                property.WriteTo(writer);
            }

            writer.WriteEndObject();
        }

        public string GetDiscriminatorValue(System.Type type)
        {
            var jsonInheritanceAttributeDiscriminator = GetSubtypeDiscriminator(type);
            if (jsonInheritanceAttributeDiscriminator != null)
            {
                return jsonInheritanceAttributeDiscriminator;
            }

            return type.Name;
        }

        protected System.Type GetDiscriminatorType(System.Text.Json.JsonElement jObject, System.Type objectType, string discriminatorValue)
        {
            var jsonInheritanceAttributeSubtype = GetObjectSubtype(objectType, discriminatorValue);
            if (jsonInheritanceAttributeSubtype != null)
            {
                return jsonInheritanceAttributeSubtype;
            }

            if (objectType.Name == discriminatorValue)
            {
                return objectType;
            }

            var typeName = objectType.Namespace + "." + discriminatorValue;
            var subtype = System.Reflection.IntrospectionExtensions.GetTypeInfo(objectType).Assembly.GetType(typeName);
            if (subtype != null)
            {
                return subtype;
            }

            throw new System.InvalidOperationException("Could not find subtype of '" + objectType.Name + "' with discriminator '" + discriminatorValue + "'.");
        }

        private System.Type GetObjectSubtype(System.Type objectType, string discriminator)
        {
            foreach (var attribute in System.Reflection.CustomAttributeExtensions.GetCustomAttributes<JsonInheritanceAttribute>(System.Reflection.IntrospectionExtensions.GetTypeInfo(objectType), true))
            {
                if (attribute.Key == discriminator)
                    return attribute.Type;
            }

            return objectType;
        }

        private string GetSubtypeDiscriminator(System.Type objectType)
        {
            foreach (var attribute in System.Reflection.CustomAttributeExtensions.GetCustomAttributes<JsonInheritanceAttribute>(System.Reflection.IntrospectionExtensions.GetTypeInfo(objectType), true))
            {
                if (attribute.Type == objectType)
                    return attribute.Key;
            }

            return objectType.Name;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : System.Text.Json.Serialization.JsonConverter<System.DateTime>
    {
        public override System.DateTime Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
        {
            var dateTime = reader.GetString();
            if (dateTime == null)
            {
                throw new System.Text.Json.JsonException("Unexpected JsonTokenType.Null");
            }

            return System.DateTime.Parse(dateTime);
        }

        public override void Write(System.Text.Json.Utf8JsonWriter writer, System.DateTime value, System.Text.Json.JsonSerializerOptions options)
        {
            writer.WriteStringValue(value.ToString("yyyy-MM-dd"));
        }
    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603