//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace DomainServices.RiskIntegrationService.ExternalServices.LoanApplication.V3.Contracts
{
    using System = global::System;

    

    /// <summary>
    /// Amount
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Amount
    {
        /// <summary>
        /// Currency code of the Amount (ISO 4217), e.g. 'CZK', 'EUR'
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Value of the Amount
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public decimal Value { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// ConsentValueType
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ConsentValueType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PHONE_NUMBER")]
        PHONE_NUMBER = 0,

    }

    /// <summary>
    /// Contact
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Contact
    {

        [System.Text.Json.Serialization.JsonPropertyName("contactCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContactCategoryType ContactCategory { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("contactType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContactType ContactType { get; set; }

        /// <summary>
        /// Hodnota kontaktu, tedy konkrétní email nebo telefonní číslo
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Value { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// CONTACT CATEGORY TYPE
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ContactCategoryType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"MOBILE")]
        MOBILE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS")]
        BUSINESS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PRIVATE")]
        PRIVATE = 2,

    }

    /// <summary>
    /// CONTACT TYPE
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ContactType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PHONE")]
        PHONE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"EMAIL")]
        EMAIL = 1,

    }

    /// <summary>
    /// HouseholdCreditLiabilitiesSummaryOutHomeCompany.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditLiabilitiesSummary
    {

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount Amount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountConsolidated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount AmountConsolidated { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CreditLiabilitiesSummaryType? ProductClusterCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// CREDIT LIABILITIES PRODUCT CLUSTER
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CreditLiabilitiesSummaryType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CC")]
        CC = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"AD")]
        AD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"CL")]
        CL = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"ML")]
        ML = 3,

    }

    /// <summary>
    /// Rozsah datumů od a do. Například: datum zaměstnání od, datum zaměstnání do.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DateRange
    {
        /// <summary>
        /// Datum od
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dateFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? DateFrom { get; set; }

        /// <summary>
        /// Datum do
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dateTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? DateTo { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// DISTRIBUTION CHANNEL
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum DistributionChannelType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"DC")]
        DC = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"AG")]
        AG = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"BR")]
        BR = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"CC")]
        CC = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"DM")]
        DM = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"SH")]
        SH = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"TP")]
        TP = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"MC")]
        MC = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"WF")]
        WF = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"MB")]
        MB = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"MA")]
        MA = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"XC")]
        XC = 11,

    }

    /// <summary>
    /// The unified error model
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ErrorModel
    {
        /// <summary>
        /// usually unused and replaced by the error codes categorization
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Obsolete]
        public int Category { get; set; }

        /// <summary>
        /// code of the error that occured, with or without an hirarchical categorization
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Code { get; set; }

        /// <summary>
        /// an optional error detail with a custom schema discriminated by the type-discriminator
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("detail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public object Detail { get; set; }

        /// <summary>
        /// copy of the http-status-code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("httpStatusCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int HttpStatusCode { get; set; }

        /// <summary>
        /// plain-text message description related to the given error code and intended for better issue-solving only
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Message { get; set; }

        /// <summary>
        /// unique error ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("uuid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Uuid { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Parametry domácnosti
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExpensesSummary
    {

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount Amount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ExpensesSummaryCategoryType? Category { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// EXPENSES CATEGORY
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ExpensesSummaryCategoryType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"RENT")]
        RENT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ALIMONY")]
        ALIMONY = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"INSURANCE")]
        INSURANCE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"SAVINGS")]
        SAVINGS = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 4,

    }

    /// <summary>
    /// ExternalRegistreType
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ExternalRegisterType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"TELCO")]
        TELCO = 0,

    }

    /// <summary>
    /// GENDER
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GenderType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"F")]
        F = 1,

    }

    /// <summary>
    /// EDUCATION
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum HighestEducationType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        _3 = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        _5 = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        _6 = 5,

    }

    /// <summary>
    /// HOUSING CONDITION
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum HousingConditionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OW")]
        OW = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"GR")]
        GR = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"RE")]
        RE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PA")]
        PA = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OT")]
        OT = 4,

    }

    /// <summary>
    /// IncomeDeduction
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IncomeDeduction
    {

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount Amount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomeDeductionType? Type { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// INCOME DEDUCTION TYPE
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum IncomeDeductionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"EXECUTION")]
        EXECUTION = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"INSTALLMENTS")]
        INSTALLMENTS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 2,

    }

    /// <summary>
    /// INCOME PERIOD TYPE
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum IncomePeriodType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"MONTH")]
        MONTH = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"YEAR")]
        YEAR = 1,

    }

    /// <summary>
    /// INSTALLMENT PERIOD
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum InstallmentPeriodType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"B")]
        B = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"T")]
        T = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Q")]
        Q = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"C")]
        C = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"N")]
        N = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"V")]
        V = 8,

    }

    /// <summary>
    /// JobPost
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class JobPost
    {
        /// <summary>
        /// Kód pracovní pozice přihlášeného uživatele / schvalovatele
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// KbGroupPerson
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class KBGroupPerson
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("orgUnit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public OrgUnit OrgUnit { get; set; }

        /// <summary>
        /// Příjmení přihlášeného uživatele / příjmení schvalovatele
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("surname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Surname { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// LoanApplication
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplication
    {
        /// <summary>
        /// Rozlišení nového obchodu a typu dodatku
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("appendixCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? AppendixCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("distributionChannelCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DistributionChannelType? DistributionChannelCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string Id { get; set; }

        /// <summary>
        /// loan application verze
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationSnapshotId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string LoanApplicationSnapshotId { get; set; }

        /// <summary>
        /// Způsob podpisu žádosti
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("signatureType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SignatureType { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCollateral
    {

        [System.Text.Json.Serialization.JsonPropertyName("appraisedValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount AppraisedValue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("appraisedValueOriginal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount AppraisedValueOriginal { get; set; }

        /// <summary>
        /// Kategorie zajištění
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("categoryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CategoryCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationConsentValue
    {

        [System.Text.Json.Serialization.JsonPropertyName("consentValueType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ConsentValueType? ConsentValueType { get; set; }

        /// <summary>
        /// value
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Value { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Protistrana na žádosti (žadatel, spolužadatel)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCounterParty
    {
        /// <summary>
        /// Akademický titul
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("academicTitlePrefix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string AcademicTitlePrefix { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public PrimaryAddress Address { get; set; }

        /// <summary>
        /// Datum narození
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? BirthDate { get; set; }

        /// <summary>
        /// Rodné příjmení
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string BirthName { get; set; }

        /// <summary>
        /// RČ klienta
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string BirthNumber { get; set; }

        /// <summary>
        /// Místo narození
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthPlace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string BirthPlace { get; set; }

        /// <summary>
        /// Telefonní/emailové kontakty.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contacts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Contact> Contacts { get; set; }

        /// <summary>
        /// Typ protistrany
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("counterpartyType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CounterpartyType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string CustomerId { get; set; }

        /// <summary>
        /// Jméno
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Firstname { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("gender")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GenderType? Gender { get; set; }

        /// <summary>
        /// Vztah klienta ke skupině KB
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("groupEmployee")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool GroupEmployee { get; set; }

        /// <summary>
        /// Emailová adresa
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("hasEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool HasEmail { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("highestEducation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        //[System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public int? HighestEducation { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("housingCondition")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public HousingConditionType? HousingCondition { get; set; }

        /// <summary>
        /// Identifikace klienta v rámci dané žádosti (korelační id)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("income")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationIncome Income { get; set; }

        /// <summary>
        /// Je klient druhem/družkou?
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isPartner")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool IsPartner { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCounterpartyConsent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationCounterpartyConsent LoanApplicationCounterpartyConsent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDeclaredIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationDeclaredIncome LoanApplicationDeclaredIncome { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationPersonalDocument")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationPersonalDocument LoanApplicationPersonalDocument { get; set; }

        /// <summary>
        /// Typ obsluhy klienta
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("managementType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ManagementType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("maritalStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public MaritalStatusType? MaritalStatus { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("roleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RoleType? RoleCode { get; set; }

        /// <summary>
        /// Segment klienta
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("segmentCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SegmentCode { get; set; }

        /// <summary>
        /// Speciální vztah k bance
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("specialRelationsWithKB")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool SpecialRelationsWithKB { get; set; }

        /// <summary>
        /// Příjmení
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("surname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Surname { get; set; }

        /// <summary>
        /// Příznak, zdali je protistrana daňovým residentem
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("taxpayer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool Taxpayer { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// LoanApplicationCounterpartyConsent
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCounterpartyConsent
    {
        /// <summary>
        /// Udělen souhlas s dotazem do registru NRKI?
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("consent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool Consent { get; set; }

        /// <summary>
        /// Datum udělení/neudělení souhlasu s dotazem do registru NRKI
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("consentDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime ConsentDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("externalRegisterType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ExternalRegisterType? ExternalRegisterType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationConsentValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationConsentValue LoanApplicationConsentValue { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationDealer
    {

        [System.Text.Json.Serialization.JsonPropertyName("companyId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string CompanyId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Kolekce příjmů od zaměstnavatele
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationDeclaredEmploymentIncome
    {
        /// <summary>
        /// Je příjem domicilován?
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool Domiciled { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("employerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string EmployerId { get; set; }

        /// <summary>
        /// Rodné číslo / IČO zaměstnavatele
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerIdentificationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EmployerIdentificationNumber { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount MonthlyIncomeAmount { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// LoanApplicationDeclaredIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationDeclaredIncome
    {
        /// <summary>
        /// employer
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanApplicationDeclaredEmploymentIncome> Employer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurAnnualIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount EntrepreneurAnnualIncomeAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyOtherIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount MonthlyOtherIncomeAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyRentIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount MonthlyRentIncomeAmount { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Vazba žádosti na existující úvěrový produkt (např.pro konsolidace, dodatky, apod.)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationDeclaredProductRelation
    {
        /// <summary>
        /// Aplikace + typ účtu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("aplType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string AplType { get; set; }

        /// <summary>
        /// Kód produktového shluku
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ProductClusterCode { get; set; }

        /// <summary>
        /// Typ navézaného produktu (KBRGOUP, OFI)
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ProductType { get; set; }

        /// <summary>
        /// Typ dané vazby (SECURED_PRODUCT)
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RelationType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationProductRelationValue Value { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// LoanApplicationEmploymentIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationEmploymentIncome
    {
        /// <summary>
        /// Telefonický a emailový kontakt na účetní
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountantContacts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Contact> AccountantContacts { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("dateRange")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public DateRange DateRange { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount DeclaredIncome { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomeCash")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount DeclaredIncomeCash { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomeCashPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomePeriodType? DeclaredIncomeCashPeriod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomePeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomePeriodType? DeclaredIncomePeriod { get; set; }

        /// <summary>
        /// Dle mapovacího excelu v10.10 viz BU popis rozhraní níže pro položku LoanApplicationEmploymentIncome.domiciled.   
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int Domiciled { get; set; }

        /// <summary>
        /// Stát sídla zaměstnání.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerCountryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EmployerCountryCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("employerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string EmployerId { get; set; }

        /// <summary>
        /// Rodné číslo / IČO zaměstnavatele
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerIdentificationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EmployerIdentificationNumber { get; set; }

        /// <summary>
        /// Název zaměstnavatele
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EmployerName { get; set; }

        /// <summary>
        /// Typ zaměstnaní
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employmentTypeCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EmploymentTypeCode { get; set; }

        /// <summary>
        /// První pracovní smlouva se zaměstnavatelem od
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstContractFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? FirstContractFrom { get; set; }

        /// <summary>
        /// Je pracovní poměr sjednán na dobu určitou?.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fixedTerm")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool FixedTerm { get; set; }

        /// <summary>
        /// Typ zaměstnání.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("foreignEmploymentTypeCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ForeignEmploymentTypeCode { get; set; }

        /// <summary>
        /// Číslo účtu ve formátu IBAN na který chodí bezhotovostní příjem.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeAccountIBAN")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.StringLength(34)]
        public string IncomeAccountIBAN { get; set; }

        /// <summary>
        /// Z příjmu Zaměstnance  jsou/nejsou prováděny srážky
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeDeduction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<IncomeDeduction> IncomeDeduction { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("incomePartId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string IncomePartId { get; set; }

        /// <summary>
        /// Vystavila potvrzení o příjmu externí účetní firma?
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuedByExternalAccountant")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool IssuedByExternalAccountant { get; set; }

        /// <summary>
        /// Klient je u zaměstavatele zaměstnán jako (textové pole)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("jobTitle")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string JobTitle { get; set; }

        /// <summary>
        /// Je klient ve výpovědní lhůtě?
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("noticePeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool NoticePeriod { get; set; }

        /// <summary>
        /// Je klient ve zkušební době?
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("probationaryPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool ProbationaryPeriod { get; set; }

        /// <summary>
        /// Kontaktní tel. číslo uvedené na potvrzení o výši příjmu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofConfirmationContactPhone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ProofConfirmationContactPhone { get; set; }

        /// <summary>
        /// Kontaktní osoba uvedená na potvrzení o výši příjm.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofConfirmationContactSurname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ProofConfirmationContactSurname { get; set; }

        /// <summary>
        /// Datum vystavení potvrzení o výši příjmu.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofCreatedOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? ProofCreatedOn { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("proofMonthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount ProofMonthlyIncomeAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ProofType? ProofType { get; set; }

        /// <summary>
        /// Klientem potvrzené transakce k žádosti.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relatedTransactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string> RelatedTransactions { get; set; }

        /// <summary>
        /// Dle mapovacího excelu v10.10 viz BU popis rozhraní níže pro položku LoanApplicationEmploymentIncome.verificationPriority.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationPriority")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int VerificationPriority { get; set; }

        /// <summary>
        /// Kód verifikační strategie dle číselníku CB_VerificationStrategyType - prozatím není verifikováno na straně LA.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationStrategyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string VerificationStrategyCode { get; set; }

        /// <summary>
        /// Kód verifikační podstrategie dle číselníku CB_VerificationStrategySubType - prozatím není verifikováno na straně LA.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationStrategySubCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string VerificationStrategySubCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// LoanApplicationEntrepreneurIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationEntrepreneurIncome
    {
        /// <summary>
        /// Země sídla podnikání
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CountryCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("dateRange")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public DateRange DateRange { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount DeclaredIncome { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomeCash")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount DeclaredIncomeCash { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomeCashPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomePeriodType? DeclaredIncomeCashPeriod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomePeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomePeriodType? DeclaredIncomePeriod { get; set; }

        /// <summary>
        /// Dle mapovacího excelu v10.10 viz BU popis rozhraní níže pro položku LoanApplicationEmploymentIncome.domiciled.   
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int Domiciled { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string EntrepreneurId { get; set; }

        /// <summary>
        /// Rodné číslo / IČO FOP
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurIdentificationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EntrepreneurIdentificationNumber { get; set; }

        /// <summary>
        /// Číslo účtu ve formátu IBAN na který chodí bezhotovostní příjem.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeAccountIBAN")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.StringLength(34)]
        public string IncomeAccountIBAN { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("incomePartId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string IncomePartId { get; set; }

        /// <summary>
        /// Příznak, zda byl využit modifikovaný paušál
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lumpSumModified")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool LumpSumModified { get; set; }

        /// <summary>
        /// Příznak, zda je v podnikání využita paušální daň
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lumpSumTaxationRegime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool LumpSumTaxationRegime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ProofType? ProofType { get; set; }

        /// <summary>
        /// Klientem potvrzené transakce k žádosti.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relatedTransactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string> RelatedTransactions { get; set; }

        /// <summary>
        /// Dle mapovacího excelu v10.10 viz BU popis rozhraní níže pro položku LoanApplicationEmploymentIncome.verificationPriority.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationPriority")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int VerificationPriority { get; set; }

        /// <summary>
        /// Kód verifikační strategie dle číselníku CB_VerificationStrategyType - prozatím není verifikováno na straně LA.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationStrategyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string VerificationStrategyCode { get; set; }

        /// <summary>
        /// Kód verifikační podstrategie dle číselníku CB_VerificationStrategySubType - prozatím není verifikováno na straně LA.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationStrategySubCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string VerificationStrategySubCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Parametry domácnosti
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationHousehold
    {
        /// <summary>
        /// Počet vyživovaných dětí nad 10 let
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("childrenOver10")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? ChildrenOver10 { get; set; }

        /// <summary>
        /// Počet vyživovaných dětí do 10 let (včetně)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("childrenUnderAnd10")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? ChildrenUnderAnd10 { get; set; }

        /// <summary>
        /// Protistrana na žádosti (žadatel, spolužadatel)
        /// <br/>NotNull,NotEmpty
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("counterParty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<LoanApplicationCounterParty> CounterParty { get; set; } = new System.Collections.ObjectModel.Collection<LoanApplicationCounterParty>();

        /// <summary>
        /// Shrnutí pasiv úvěru domácnosti
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdCreditLiabilitiesSummaryOutHomeCompany")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<CreditLiabilitiesSummary> HouseholdCreditLiabilitiesSummaryOutHomeCompany { get; set; }

        /// <summary>
        /// Household Expenses Summary
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdExpensesSummary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ExpensesSummary> HouseholdExpensesSummary { get; set; }

        /// <summary>
        /// Shrnutí pasiv úvěru mimo domácnosti
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdInstallmentsSummaryOutHomeCompany")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanInstallmentsSummary> HouseholdInstallmentsSummaryOutHomeCompany { get; set; }

        /// <summary>
        /// LoanApplicationHousehold identity
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long Id { get; set; }

        /// <summary>
        /// LoanApplication index
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("index")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long Index { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("roleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RoleType? RoleCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("settlementTypeCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        //[System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        //public SettlementType SettlementTypeCode { get; set; }
        public string SettlementTypeCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Příjmy protistrany
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationIncome
    {
        /// <summary>
        /// Příjmy ze závislé činnosti
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employmentIncomes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanApplicationEmploymentIncome> EmploymentIncomes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationEntrepreneurIncome EntrepreneurIncome { get; set; }

        /// <summary>
        /// Je příjem sbírán?
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeCollected")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool IncomeCollected { get; set; }

        /// <summary>
        /// Jsou celkové příjmy uzamčeny?
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeConfirmed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool IncomeConfirmed { get; set; }

        /// <summary>
        /// Datum a čas posledního uzamčení příjmů
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lastConfirmedDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime LastConfirmedDate { get; set; }

        /// <summary>
        /// Suma ostatních prokazatelných periodických čistých měsíčních příjmů
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("otherIncomes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanApplicationOtherIncome> OtherIncomes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("rentIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationRentIncome RentIncome { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// LoanApplicationOtherIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationOtherIncome
    {

        [System.Text.Json.Serialization.JsonPropertyName("dateRange")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public DateRange DateRange { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount DeclaredIncome { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomeCash")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount DeclaredIncomeCash { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomeCashPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomePeriodType? DeclaredIncomeCashPeriod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomePeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomePeriodType? DeclaredIncomePeriod { get; set; }

        /// <summary>
        /// Dle mapovacího excelu v10.10 viz BU popis rozhraní níže pro položku LoanApplicationEmploymentIncome.domiciled.   
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int Domiciled { get; set; }

        /// <summary>
        /// Číslo účtu ve formátu IBAN na který chodí bezhotovostní příjem.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeAccountIBAN")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.StringLength(34)]
        public string IncomeAccountIBAN { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("incomePartId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string IncomePartId { get; set; }

        /// <summary>
        /// Kód typu ostatního příjmu dle číselníku CB_OtherIncomeType - prozatím nebude verifikováno na straně LA.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("otherIncomeTypeCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string OtherIncomeTypeCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ProofType? ProofType { get; set; }

        /// <summary>
        /// Klientem potvrzené transakce k žádosti.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relatedTransactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string> RelatedTransactions { get; set; }

        /// <summary>
        /// Dle mapovacího excelu v10.10 viz BU popis rozhraní níže pro položku LoanApplicationEmploymentIncome.verificationPriority.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationPriority")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int VerificationPriority { get; set; }

        /// <summary>
        /// Kód verifikační strategie dle číselníku CB_VerificationStrategyType - prozatím není verifikováno na straně LA.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationStrategyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string VerificationStrategyCode { get; set; }

        /// <summary>
        /// Kód verifikační podstrategie dle číselníku CB_VerificationStrategySubType - prozatím není verifikováno na straně LA.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationStrategySubCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string VerificationStrategySubCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// LoanApplicationPersonalDocument
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationPersonalDocument
    {
        /// <summary>
        /// Číslo dokladu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Id { get; set; }

        /// <summary>
        /// Datum vydání
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuedOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? IssuedOn { get; set; }

        /// <summary>
        /// Typ dokladu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Type { get; set; }

        /// <summary>
        /// Datum expirace dokladu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? ValidTo { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationProduct
    {

        [System.Text.Json.Serialization.JsonPropertyName("amountForeignResources")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount AmountForeignResources { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountInvestment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount AmountInvestment { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountOwnResources")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount AmountOwnResources { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountRequired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount AmountRequired { get; set; }

        /// <summary>
        /// Žádaná anuitní splátka
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("annuity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long Annuity { get; set; }

        /// <summary>
        /// Aplikace + typ účtu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("aplType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string AplType { get; set; }

        /// <summary>
        /// Kód developera daného projektu, v rámci kterého je žádáno financování
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("developerCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string DeveloperCode { get; set; }

        /// <summary>
        /// Termín čerpání obchodu do
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("drawingPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? DrawingPeriodEnd { get; set; }

        /// <summary>
        /// Termín čerpání obchodu od
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("drawingPeriodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? DrawingPeriodStart { get; set; }

        /// <summary>
        /// Typ financování
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("financingType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string FinancingType { get; set; }

        /// <summary>
        /// Doba fixace úrokové sazby
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fixationPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? FixationPeriod { get; set; }

        /// <summary>
        /// Z tabulek xxTABGL, sloupec C_PROD_SEL
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("glTableSelection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string GlTableSelection { get; set; }

        /// <summary>
        /// Domácí měna dle příjmu žadatelů
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("homeCurrencyIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string HomeCurrencyIncome { get; set; }

        /// <summary>
        /// Domácí měna dle bydliště žadatelů
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("homeCurrencyResidence")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string HomeCurrencyResidence { get; set; }

        /// <summary>
        /// Počet splátek (pouze anuitní)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? InstallmentCount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("installmentPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public InstallmentPeriodType? InstallmentPeriod { get; set; }

        /// <summary>
        /// Žádaná roční úroková sazba
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? InterestRate { get; set; }

        /// <summary>
        /// Kód produktového shluku (shluk jednoho produktu)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isProductSecured")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? IsProductSecured { get; set; }

        /// <summary>
        /// Seznam zajištění daného účtu. Zabaluje větve COLLATERAL. Shodná struktura jako v CrI_out
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCollateral")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanApplicationCollateral> LoanApplicationCollateral { get; set; }

        /// <summary>
        /// Účely úvěru
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationPurpose")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanApplicationPurpose> LoanApplicationPurpose { get; set; }

        /// <summary>
        /// Počet splátek (anuitní a úrokové)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? Maturity { get; set; }

        /// <summary>
        /// Kód produktového shluku (shluk jednoho produktu)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ProductClusterCode { get; set; }

        /// <summary>
        /// Kód daného projektu, v rámci kterého je žádáno financování
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("projectCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ProjectCode { get; set; }

        /// <summary>
        /// Konečný den splatnosti
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? RepaymentPeriodEnd { get; set; }

        /// <summary>
        /// Datum začátku splácení
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentPeriodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? RepaymentPeriodStart { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("repaymentScheduleType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RepaymentScheduleType? RepaymentScheduleType { get; set; }

        /// <summary>
        /// Vnitrobankovní úroková sazba
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("vbs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double Vbs { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Vazba žádosti na existující úvěrový produkt (např.pro konsolidace, dodatky, apod.)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationProductRelation
    {

        [System.Text.Json.Serialization.JsonPropertyName("counterparty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanApplicationProductRelationCounterparty> Counterparty { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string ProductId { get; set; }

        /// <summary>
        /// Typ navézaného produktu (KBRGOUP, OFI).
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ProductType { get; set; }

        /// <summary>
        /// Typ dané vazby (CONSOLIDATION, APPENDIX, NOT_INCLUDE).
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RelationType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public LoanApplicationProductRelationValue Value { get; set; } = new LoanApplicationProductRelationValue();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationProductRelationCounterparty
    {

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string CustomerId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("roleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RoleType? RoleCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Navázané parametry na danou vazbu
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationProductRelationValue
    {
        /// <summary>
        /// Typ navázaného parametru (REMAINING_EXPOSURE)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Type { get; set; }

        /// <summary>
        /// Hodnota navázaného parametru
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Value { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Parametry domácnosti
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationPurpose
    {
        /// <summary>
        /// Výše požadované výše úvěru pro daný účel
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public decimal? Amount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        //[System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public int? Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// PURPOSE
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum LoanApplicationPurposeType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        _3 = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        _5 = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        _6 = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"7")]
        _7 = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"8")]
        _8 = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"9")]
        _9 = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"10")]
        _10 = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"11")]
        _11 = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"12")]
        _12 = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"13")]
        _13 = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"14")]
        _14 = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"15")]
        _15 = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"16")]
        _16 = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"17")]
        _17 = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"18")]
        _18 = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"19")]
        _19 = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"20")]
        _20 = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"21")]
        _21 = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"22")]
        _22 = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"23")]
        _23 = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"24")]
        _24 = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"25")]
        _25 = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"26")]
        _26 = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"27")]
        _27 = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"28")]
        _28 = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"29")]
        _29 = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"30")]
        _30 = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"31")]
        _31 = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"32")]
        _32 = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"33")]
        _33 = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"34")]
        _34 = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"35")]
        _35 = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"36")]
        _36 = 35,

    }

    /// <summary>
    /// LoanApplicationRentIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationRentIncome
    {

        [System.Text.Json.Serialization.JsonPropertyName("dateRange")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public DateRange DateRange { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount DeclaredIncome { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomeCash")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount DeclaredIncomeCash { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomeCashPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomePeriodType? DeclaredIncomeCashPeriod { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("declaredIncomePeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomePeriodType? DeclaredIncomePeriod { get; set; }

        /// <summary>
        /// Dle mapovacího excelu v10.10 viz BU popis rozhraní níže pro položku LoanApplicationEmploymentIncome.domiciled.   
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int Domiciled { get; set; }

        /// <summary>
        /// Číslo účtu ve formátu IBAN na který chodí bezhotovostní příjem.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeAccountIBAN")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.StringLength(34)]
        public string IncomeAccountIBAN { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("incomePartId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string IncomePartId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ProofType? ProofType { get; set; }

        /// <summary>
        /// Klientem potvrzené transakce k žádosti.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relatedTransactions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string> RelatedTransactions { get; set; }

        /// <summary>
        /// Dle mapovacího excelu v10.10 viz BU popis rozhraní níže pro položku LoanApplicationEmploymentIncome.verificationPriority.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationPriority")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int VerificationPriority { get; set; }

        /// <summary>
        /// Kód verifikační strategie dle číselníku CB_VerificationStrategyType - prozatím není verifikováno na straně LA.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationStrategyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string VerificationStrategyCode { get; set; }

        /// <summary>
        /// Kód verifikační podstrategie dle číselníku CB_VerificationStrategySubType - prozatím není verifikováno na straně LA.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationStrategySubCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string VerificationStrategySubCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// RiskBusinessCaseAssessment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationRequest
    {
        /// <summary>
        /// Rozlišení nového obchodu a typu dodatku
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("appendixCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? AppendixCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("distributionChannelCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DistributionChannelType? DistributionChannelCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDealer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationDealer LoanApplicationDealer { get; set; }

        /// <summary>
        /// Úvěrové produkty jištěné daným zajištěním (ještě bez znalosti konkrétních produktů)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDeclaredProductRelation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanApplicationDeclaredProductRelation> LoanApplicationDeclaredProductRelation { get; set; }

        /// <summary>
        /// Aplikační data jednotlivých domácností (včetně ručitelských)
        /// <br/>NotNull,NotEmpty
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationHousehold")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<LoanApplicationHousehold> LoanApplicationHousehold { get; set; } = new System.Collections.ObjectModel.Collection<LoanApplicationHousehold>();

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationProduct")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationProduct LoanApplicationProduct { get; set; }

        /// <summary>
        /// Vazba žádosti na existující úvěrový produkt (např.pro konsolidace, dodatky, apod.)
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationProductRelation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanApplicationProductRelation> LoanApplicationProductRelation { get; set; }

        /// <summary>
        /// Loan application snapshotID
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationSnapshotId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string LoanApplicationSnapshotId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("person")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public KBGroupPerson Person { get; set; }

        /// <summary>
        /// Způsob podpisu žádosti
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("signatureType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SignatureType { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Loan Application result
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationResult
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string Id { get; set; }

        /// <summary>
        /// Loan application SnapshotId
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationSnapshotId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string LoanApplicationSnapshotId { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// householdInstallmentsSummaryOutHomeCompany
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanInstallmentsSummary
    {

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount Amount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountConsolidated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount AmountConsolidated { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanInstallmentsSummaryType? ProductClusterCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// INSTALLMENTS PRODUCT CLUSTER
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum LoanInstallmentsSummaryType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CL")]
        CL = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ML")]
        ML = 1,

    }

    /// <summary>
    /// MARTIAL STATUS
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MaritalStatusType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"D")]
        D = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"W")]
        W = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"R")]
        R = 4,

    }

    /// <summary>
    /// OrgUnit
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OrgUnit
    {
        /// <summary>
        /// Pobočka + expozitura přihlášení uživatele / schvalovatele
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("jobPost")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public JobPost JobPost { get; set; }

        /// <summary>
        /// Název pobočky přihlášení  uživatele / schvalovatele
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Name { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// PrimaryAddress
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PrimaryAddress
    {
        /// <summary>
        /// Město trvalého bydliště
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string City { get; set; }

        /// <summary>
        /// Kód země
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CountryCode { get; set; }

        /// <summary>
        /// Číslo popisné
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("houseNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string HouseNumber { get; set; }

        /// <summary>
        /// Datum nastěhování do trvalého bydliště
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("inhabitancyFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime InhabitancyFrom { get; set; }

        /// <summary>
        /// PSČ trvalého bydliště
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("postalCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string PostalCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("regionCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        //[System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public string RegionCode { get; set; }

        /// <summary>
        /// Ulice
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("street")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Street { get; set; }

        /// <summary>
        /// Orientační číslo
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("streetNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string StreetNumber { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// PROOF TYPE
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ProofType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CCD")]
        CCD = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CPS")]
        CPS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DAP")]
        DAP = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"DOM")]
        DOM = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"EPP")]
        EPP = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PNZ")]
        PNZ = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"PVP")]
        PVP = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS")]
        UPS = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"XXX")]
        XXX = 8,

    }

    /// <summary>
    /// REGION
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RegionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        _3 = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        _5 = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        _6 = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"7")]
        _7 = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"8")]
        _8 = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"9")]
        _9 = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"10")]
        _10 = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"11")]
        _11 = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"12")]
        _12 = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"13")]
        _13 = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"14")]
        _14 = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"15")]
        _15 = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"16")]
        _16 = 15,

    }

    /// <summary>
    /// REPAYMENT SCHEDULE TYPE
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RepaymentScheduleType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"P")]
        P = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"OS")]
        OS = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"OM")]
        OM = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"AX")]
        AX = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PX")]
        PX = 5,

    }

    /// <summary>
    /// ROLE
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RoleType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"R")]
        R = 2,

    }

    /// <summary>
    /// SETTLEMENT TYPE
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum SettlementType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"6")]
        _6 = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"5")]
        _5 = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        _0 = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : System.Text.Json.Serialization.JsonConverter<System.DateTime>
    {
        public override System.DateTime Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
        {
            var dateTime = reader.GetString();
            if (dateTime == null)
            {
                throw new System.Text.Json.JsonException("Unexpected JsonTokenType.Null");
            }

            return System.DateTime.Parse(dateTime);
        }

        public override void Write(System.Text.Json.Utf8JsonWriter writer, System.DateTime value, System.Text.Json.JsonSerializerOptions options)
        {
            writer.WriteStringValue(value.ToString("yyyy-MM-dd"));
        }
    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603