//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace DomainServices.RiskIntegrationService.ExternalServices.LoanApplication.V1.Contracts
{
    using System = global::System;

    

    /// <summary>
    /// JobPost
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class JobPost
    {
        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

    }

    /// <summary>
    /// KbGroupPerson
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class KBGroupPerson
    {
        /// <summary>
        /// osobní číslo přihlášeného uživatele /schvalovatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier Id { get; set; }

        /// <summary>
        /// příjmení přihlášeného uživatele / příjmení schvalovatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("surname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Surname { get; set; }

        /// <summary>
        /// OrgUnit
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("orgUnit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public OrgUnit OrgUnit { get; set; }

    }

    /// <summary>
    /// OrgUnit
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class OrgUnit
    {
        /// <summary>
        /// pobočka + expozitura přihlášení uživatele / schvalovatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// název pobočky přihlášení  uživatele / schvalovatele 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Name { get; set; }

        /// <summary>
        /// kód pracovní pozice přihlášeného uživatele /schvalovatele
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("jobPost")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public JobPost JobPost { get; set; }

    }

    /// <summary>
    /// ResourceIdentifier
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class ResourceIdentifier
    {
        /// <summary>
        /// The resource instance code, eg. 'KBCZ'
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("instance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string Instance { get; set; }

        /// <summary>
        /// The resource domain code, eg. 'CFLM'
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domain")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string Domain { get; set; }

        /// <summary>
        /// The resource code (the in-domain resource code, eg. 'LimitModel')
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(64)]
        public string Resource { get; set; }

        /// <summary>
        /// ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(64)]
        public string Id { get; set; }

        /// <summary>
        /// The variant of the resource, eg. distinguishing the origin of the source
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variant")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string Variant { get; set; }

    }

    /// <summary>
    /// Amount
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class Amount
    {
        /// <summary>
        /// Hodnota částky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Value { get; set; }

        /// <summary>
        /// Kód měny částky (ISO 4217)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CurrencyCode { get; set; }

    }

    /// <summary>
    /// IncomeDeduction
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class IncomeDeduction
    {
        /// <summary>
        /// Product group.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IncomeDeductionType? Type { get; set; }

        /// <summary>
        /// Product group.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount Amount { get; set; }

    }

    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationConsentValue
    {
        /// <summary>
        /// ConsentValueType
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("consentValueType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationConsentValueConsentValueType? ConsentValueType { get; set; }

        /// <summary>
        /// value
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Value { get; set; }

    }

    /// <summary>
    /// Protistrana na žádosti (žadatel, spolužadatel)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationCounterParty
    {
        /// <summary>
        /// Korelační ID protistrany v rámci dané žádosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Id { get; set; }

        /// <summary>
        /// Id customera v dané společnosti (KB, MPSS).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier CustomerId { get; set; } = new ResourceIdentifier();

        /// <summary>
        /// Příznak, zdali je klient zaměstnancem skupiny KB.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("groupEmployee")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? GroupEmployee { get; set; }

        /// <summary>
        /// Speciální vztah protistrany k bance.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("specialRelationsWithKB")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? SpecialRelationsWithKB { get; set; }

        /// <summary>
        /// Rodné číslo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string BirthNumber { get; set; }

        /// <summary>
        /// Role protistrany na žádosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("roleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationCounterPartyRoleCode? RoleCode { get; set; }

        /// <summary>
        /// Křestní jméno.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Firstname { get; set; }

        /// <summary>
        /// Příjmení.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("surname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Surname { get; set; }

        /// <summary>
        /// Rodné příjmení.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string BirthName { get; set; }

        /// <summary>
        /// Datum narození.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? BirthDate { get; set; }

        /// <summary>
        /// Místo narození.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthPlace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string BirthPlace { get; set; }

        /// <summary>
        /// Adresa.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public PrimaryAddress Address { get; set; }

        /// <summary>
        /// Pohlaví.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("gender")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationCounterPartyGender? Gender { get; set; }

        /// <summary>
        /// Současný rodinný stav
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maritalStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationCounterPartyMaritalStatus? MaritalStatus { get; set; }

        /// <summary>
        /// Akademický titul.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("academicTitlePrefix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AcademicTitlePrefix { get; set; }

        /// <summary>
        /// Telefon.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<PhoneContact> Phone { get; set; }

        /// <summary>
        /// Příznak, zdali protistrana poskytla svůj email.y
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("hasEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? HasEmail { get; set; }

        /// <summary>
        /// Je protistrana druhem/družkou?
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isPartner")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? IsPartner { get; set; }

        /// <summary>
        /// Bytové poměry.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("housingCondition")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationCounterPartyHousingCondition? HousingCondition { get; set; }

        /// <summary>
        /// Segment klienta
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("segmentCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string SegmentCode { get; set; }

        /// <summary>
        /// Typ obsluhy klienta
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("managementType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ManagementType { get; set; }

        /// <summary>
        /// Příjmy protistrany
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("income")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationIncome Income { get; set; }

        /// <summary>
        /// Příznak, zdali je protistrana daňovým residentem.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("taxpayer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Taxpayer { get; set; }

        /// <summary>
        /// Typ protistrany.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("counterpartyType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CounterpartyType { get; set; }

        /// <summary>
        /// Doklad totožnosti klienta (OP, pas, …).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationPersonalDocument")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationPersonalDocument LoanApplicationPersonalDocument { get; set; }

        /// <summary>
        /// Souhlasy s externími registry.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCounterpartyConsent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationCounterpartyConsent LoanApplicationCounterpartyConsent { get; set; }

        /// <summary>
        /// Příjem deklarovaný protistranou.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDeclaredIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationDeclaredIncome LoanApplicationDeclaredIncome { get; set; }

        /// <summary>
        /// Nejvyšší dosažené vzdělání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("highestEducation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? HighestEducation { get; set; }

    }

    /// <summary>
    /// LoanApplicationCounterpartyConsent
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationCounterpartyConsent
    {
        /// <summary>
        /// Externí registr.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalRegisterType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationCounterpartyConsentExternalRegisterType? ExternalRegisterType { get; set; }

        /// <summary>
        /// udělen souhlas s dotazem do registru NRKI?
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("consent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Consent { get; set; }

        /// <summary>
        /// datum udělení/neudělení souhlasu s dotazem do registru NRKI.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("consentDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? ConsentDate { get; set; }

        /// <summary>
        /// loanApplicationConsentValue.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationConsentValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationConsentValue LoanApplicationConsentValue { get; set; }

    }

    /// <summary>
    /// Příjem deklarovaný protistranou
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationDeclaredEmploymentIncome
    {
        /// <summary>
        ///  IDDI zaměstnavatele
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier EmployerId { get; set; }

        /// <summary>
        /// IČ zaměstnavatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerIdentificationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string EmployerIdentificationNumber { get; set; }

        /// <summary>
        ///  Čistý průměrný měsíční příjem ze závislé činnosti za posledních 12 měsíců (nejméně 3 měsíce).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyIncomeAmount { get; set; }

        /// <summary>
        /// Je příjem domicilován?.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Domiciled { get; set; }

    }

    /// <summary>
    /// LoanApplicationDeclaredIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationDeclaredIncome
    {
        /// <summary>
        /// employer
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationDeclaredEmploymentIncome> Employer { get; set; }

        /// <summary>
        /// entrepreneurAnnualIncomeAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurAnnualIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount EntrepreneurAnnualIncomeAmount { get; set; }

        /// <summary>
        /// monthlyRentIncomeAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyRentIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyRentIncomeAmount { get; set; }

        /// <summary>
        /// monthlyOtherIncomeAmount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyOtherIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyOtherIncomeAmount { get; set; }

    }

    /// <summary>
    /// LoanApplicationEmploymentIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationEmploymentIncome
    {
        /// <summary>
        /// IDDI zaměstnavatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier EmployerId { get; set; }

        /// <summary>
        /// rodné číslo / IČO zaměstnavatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerIdentificationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string EmployerIdentificationNumber { get; set; }

        /// <summary>
        /// Název zaměstnavatele
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string EmployerName { get; set; }

        /// <summary>
        /// agregovaný OKEČ zaměstnavatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Nace { get; set; }

        /// <summary>
        /// PSČ sídla zaměstnavatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("postcode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Postcode { get; set; }

        /// <summary>
        /// město sídla zaměstnání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string City { get; set; }

        /// <summary>
        /// Stát sídla zaměstnání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CountryCode { get; set; }

        /// <summary>
        /// Název pracovní pozice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("jobTitle")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string JobTitle { get; set; }

        /// <summary>
        /// ulice sídla zaměstnání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("street")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Street { get; set; }

        /// <summary>
        /// Telefonní kontakt.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public PhoneContact Phone { get; set; }

        /// <summary>
        /// čistý průměrný měsíční příjem ze závislé činnosti za posledních 12 měsíců (nejméně 3 měsíce).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyIncomeAmount { get; set; }

        /// <summary>
        /// Číslo účtu, ze kterého od daného zaměstnavatele chodí mzda.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumber { get; set; }

        /// <summary>
        /// Je příjem domicilován?.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Domiciled { get; set; }

        /// <summary>
        /// typ dokumentu dokládajícího příjmy ("PNZ"=příjem není zadán).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationEmploymentIncomeProofType? ProofType { get; set; }

        /// <summary>
        /// domicilovaný příjem deklarovaný klientem.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("declaredMonthIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double? DeclaredMonthIncome { get; set; }

        /// <summary>
        /// Typ zaměstnání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("foreignEmploymentType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ForeignEmploymentType { get; set; }

        /// <summary>
        /// Hrubý roční příjem bez pojistného za poslední zdaňovací období.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("grossAnnualIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double? GrossAnnualIncome { get; set; }

        /// <summary>
        /// kontaktní osoba uvedená na potvrzení o výši příjmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofConfirmationContactSurname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProofConfirmationContactSurname { get; set; }

        /// <summary>
        /// kontaktní tel. číslo uvedené na potvrzení o výši příjmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofConfirmationContactPhone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProofConfirmationContactPhone { get; set; }

        /// <summary>
        /// Datum vystavení potvrzení o výši příjmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofCreatedOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? ProofCreatedOn { get; set; }

        /// <summary>
        /// Je klient ve zkušební době?.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("probationaryPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? ProbationaryPeriod { get; set; }

        /// <summary>
        /// Je klient ve výpovědní lhůtě?.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("noticePeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? NoticePeriod { get; set; }

        /// <summary>
        /// Je pracovní poměr sjednán na dobu určitou?.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fixedTerm")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? FixedTerm { get; set; }

        /// <summary>
        /// první pracovní smlouva se zaměstnavatelem od.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstContractFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? FirstContractFrom { get; set; }

        /// <summary>
        /// aktuální pracovní smlouva od.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currentContractFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? CurrentContractFrom { get; set; }

        /// <summary>
        /// aktuální pracovní smlouva do.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currentContractTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? CurrentContractTo { get; set; }

        /// <summary>
        /// Priorita verifikace
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verificationPriority")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? VerificationPriority { get; set; }

        /// <summary>
        /// Vystavila potvrzení o příjmu externí účetní firma?
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuedByExternalAccountant")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? IssuedByExternalAccountant { get; set; }

        /// <summary>
        /// Z příjmu Zaměstnance  jsou/nejsou prováděny srážky.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeDeduction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<IncomeDeduction> IncomeDeduction { get; set; }

        /// <summary>
        /// Typ zaměstnaní.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employmentType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string EmploymentType { get; set; }

        /// <summary>
        /// Číslo popisné.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("houseNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string HouseNumber { get; set; }

        /// <summary>
        /// Orientační číslo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("streetNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string StreetNumber { get; set; }

        /// <summary>
        /// Typ zaměstnavatele - státní společnost, spol. se zahraniční účastí, podnikatel, etc..
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? EmployerType { get; set; }

        /// <summary>
        /// povolání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("profession")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? Profession { get; set; }

    }

    /// <summary>
    /// LoanApplicationEntrepreneurIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationEntrepreneurIncome
    {
        /// <summary>
        /// ID_DI FOP.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier EntrepreneurId { get; set; }

        /// <summary>
        /// rodné číslo / IČO FOP.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurIdentificationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string EntrepreneurIdentificationNumber { get; set; }

        /// <summary>
        /// agregovaný OKEČ.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Nace { get; set; }

        /// <summary>
        /// PSČ sídla podnikání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("postcode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Postcode { get; set; }

        /// <summary>
        /// město sídla podnikání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string City { get; set; }

        /// <summary>
        /// země sídla podnikání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CountryCode { get; set; }

        /// <summary>
        /// establishedOn
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("establishedOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? EstablishedOn { get; set; }

        /// <summary>
        /// Příznak, zdali je příjem domicilován.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Domiciled { get; set; }

        /// <summary>
        /// dokument dokládající příjem z pronájmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationEntrepreneurIncomeProofType? ProofType { get; set; }

        /// <summary>
        /// čisté příjmy z podnikatelské činnosti (čistý roční příjem z daňového přiznání).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("annualIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AnnualIncomeAmount { get; set; }

        /// <summary>
        /// číslo popisné.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("houseNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string HouseNumber { get; set; }

        /// <summary>
        /// orientační číslo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("streetNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string StreetNumber { get; set; }

        /// <summary>
        /// ulice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("street")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Street { get; set; }

        /// <summary>
        /// příznak, zda je v podnikání využita poušální daň.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lumpSumTaxationRegime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? LumpSumTaxationRegime { get; set; }

        /// <summary>
        /// příznak, zda byl využit modifikovaný paušál.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lumpSumModified")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? LumpSumModified { get; set; }

        /// <summary>
        /// povolání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("profession")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? Profession { get; set; }

    }

    /// <summary>
    /// Příjmy protistrany
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationIncome
    {
        /// <summary>
        /// Příznak, zdali jsou příjmy uzamčeny.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeConfirmed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool IncomeConfirmed { get; set; }

        /// <summary>
        /// Příznak, zdali jsou pro danou protistranu sbírány příjmy.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeCollected")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool IncomeCollected { get; set; }

        /// <summary>
        /// Datum posledního uzamčení příjmů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lastConfirmedDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime LastConfirmedDate { get; set; }

        /// <summary>
        /// Příjmy ze závislé činnosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employmentIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationEmploymentIncome> EmploymentIncome { get; set; }

        /// <summary>
        /// Příjmy z podnikání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationEntrepreneurIncome EntrepreneurIncome { get; set; }

        /// <summary>
        /// Příjmy z pronájmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("rentIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationRentIncome RentIncome { get; set; }

        /// <summary>
        /// Ostatní druhy příjmů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("otherIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationOtherIncome> OtherIncome { get; set; }

    }

    /// <summary>
    /// LoanApplicationOtherIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationOtherIncome
    {
        /// <summary>
        /// Typ  vedlejšího prokazatelného příjmu. Opakující se atribut podle počtu vedeljších prokazatelných příjmů příjmů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Type { get; set; }

        /// <summary>
        /// Částka  vedlejšího prokazatelného příjmu. Opakující se atribut podle počtu vedeljších prokazatelných příjmů příjmů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyIncomeAmount { get; set; }

        /// <summary>
        /// číslo účtu, z kterého příjem přichází.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumber { get; set; }

        /// <summary>
        /// Příznak, zdali je příjem domicilován.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Domiciled { get; set; }

        /// <summary>
        /// dokument dokládající příjem z pronájmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationOtherIncomeProofType? ProofType { get; set; }

    }

    /// <summary>
    /// LoanApplicationPersonalDocument
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationPersonalDocument
    {
        /// <summary>
        /// Číslo dokladu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// Typ dokladu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Type { get; set; }

        /// <summary>
        /// Datum vydání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuedOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? IssuedOn { get; set; }

        /// <summary>
        /// Datum expirace dokladu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? ValidTo { get; set; }

    }

    /// <summary>
    /// LoanApplicationRentIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationRentIncome
    {
        /// <summary>
        /// accountNumber.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumber { get; set; }

        /// <summary>
        /// domiciled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Domiciled { get; set; }

        /// <summary>
        /// proofType.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationRentIncomeProofType? ProofType { get; set; }

        /// <summary>
        /// čisté měsíční příjmy z pronájmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyIncomeAmount { get; set; }

    }

    /// <summary>
    /// PhoneContact
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class PhoneContact
    {
        /// <summary>
        /// Product group.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contactType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public PhoneContactContactType ContactType { get; set; }

        /// <summary>
        /// Product group.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PhoneNumber { get; set; }

    }

    /// <summary>
    /// PrimaryAddress
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class PrimaryAddress
    {
        /// <summary>
        /// Ulice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("street")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Street { get; set; }

        /// <summary>
        /// Město.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string City { get; set; }

        /// <summary>
        /// Země.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CountryCode { get; set; }

        /// <summary>
        /// Směrovací číslo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("postCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? PostCode { get; set; }

        /// <summary>
        /// inhibitancyFrom
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("inhabitancyFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? InhabitancyFrom { get; set; }

        /// <summary>
        /// Číslo popisné.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("houseNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string HouseNumber { get; set; }

        /// <summary>
        /// Orientační číslo.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("streetNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string StreetNumber { get; set; }

        /// <summary>
        /// Region.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("regionCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RegionCode { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationDealer
    {
        /// <summary>
        /// Identifikátor dealera.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier Id { get; set; } = new ResourceIdentifier();

        /// <summary>
        /// Identifikátor zprostředkovateské společnosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("companyId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier CompanyId { get; set; } = new ResourceIdentifier();

    }

    /// <summary>
    /// Vazba žádosti na existující úvěrový produkt (např.pro konsolidace, dodatky, apod.)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationDeclaredProductRelation
    {
        /// <summary>
        /// Typ navézaného produktu (KBRGOUP, OFI).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ProductType { get; set; }

        /// <summary>
        /// Typ dané vazby (SECURED_PRODUCT).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RelationType { get; set; }

        /// <summary>
        /// kód produktového shluku.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProductClusterCode { get; set; }

        /// <summary>
        /// aplikace + typ účtu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("aplType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AplType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationProductRelationValue Value { get; set; }

    }

    /// <summary>
    /// Navázané parametry na danou vazbu.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationProductRelationValue
    {
        /// <summary>
        /// Typ navázaného parametru (REMAINING_EXPOSURE).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Type { get; set; }

        /// <summary>
        /// Hodnota navázaného parametru.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Value { get; set; }

    }

    /// <summary>
    /// HouseholdCreditLiabilitiesSummaryOutHomeCompany.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class CreditLiabilitiesSummary
    {
        /// <summary>
        /// Product group.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CreditLiabilitiesSummaryProductClusterCode? ProductClusterCode { get; set; }

        /// <summary>
        /// Množství.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount Amount { get; set; }

        /// <summary>
        /// Množství.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountConsolidated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountConsolidated { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class ExpensesSummary
    {
        /// <summary>
        /// Kategorie.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ExpensesSummaryCategory Category { get; set; }

        /// <summary>
        /// Množství.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public Amount Amount { get; set; } = new Amount();

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationHousehold
    {
        /// <summary>
        /// LoanApplicationHousehold identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Id { get; set; }

        /// <summary>
        /// LoanApplication index
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("index")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Index { get; set; }

        /// <summary>
        /// Role Code.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("roleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationHouseholdRoleCode? RoleCode { get; set; }

        /// <summary>
        /// počet vyživovaných dětí do 10 let (včetně).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("childrenUnderAnd10")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? ChildrenUnderAnd10 { get; set; }

        /// <summary>
        /// počet vyživovaných dětí nad 10 let .
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("childrenOver10")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? ChildrenOver10 { get; set; }

        /// <summary>
        /// Household Expenses Summary
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdExpensesSummary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<ExpensesSummary> HouseholdExpensesSummary { get; set; }

        /// <summary>
        /// Shrnutí pasiv úvěru domácnosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdCreditLiabilitiesSummaryOutHomeCompany")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<CreditLiabilitiesSummary> HouseholdCreditLiabilitiesSummaryOutHomeCompany { get; set; }

        /// <summary>
        /// Shrnutí pasiv úvěru mimo domácnosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdInstallmentsSummaryOutHomeCompany")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanInstallmentsSummary> HouseholdInstallmentsSummaryOutHomeCompany { get; set; }

        /// <summary>
        /// Protistrana na žádosti (žadatel, spolužadatel)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("counterParty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<LoanApplicationCounterParty> CounterParty { get; set; } = new System.Collections.ObjectModel.Collection<LoanApplicationCounterParty>();

        /// <summary>
        /// Shrnutí splátek mimo domácnosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("settlementTypeCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string SettlementTypeCode { get; set; }

    }

    /// <summary>
    /// householdInstallmentsSummaryOutHomeCompany
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanInstallmentsSummary
    {
        /// <summary>
        /// Product group.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanInstallmentsSummaryProductClusterCode? ProductClusterCode { get; set; }

        /// <summary>
        /// Množství.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount Amount { get; set; }

        /// <summary>
        /// Množství.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountConsolidated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountConsolidated { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationProductRelationCounterparty
    {
        /// <summary>
        /// Id customera v dané společnosti (KB, MPSS).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier CustomerId { get; set; } = new ResourceIdentifier();

        /// <summary>
        /// Role protistrany na žádosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("roleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationProductRelationCounterpartyRoleCode RoleCode { get; set; }

    }

    /// <summary>
    /// Vazba žádosti na existující úvěrový produkt (např.pro konsolidace, dodatky, apod.)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationProductRelation
    {
        /// <summary>
        /// Identifikátor úvěrového produktu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier ProductId { get; set; } = new ResourceIdentifier();

        /// <summary>
        /// Typ navézaného produktu (KBRGOUP, OFI).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ProductType { get; set; }

        /// <summary>
        /// Typ dané vazby (CONSOLIDATION, APPENDIX, NOT_INCLUDE).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RelationType { get; set; }

        /// <summary>
        /// Navázané parametry na danou vazbu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public LoanApplicationProductRelationValue Value { get; set; } = new LoanApplicationProductRelationValue();

        [System.Text.Json.Serialization.JsonPropertyName("counterparty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationProductRelationCounterparty> Counterparty { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationCollateral
    {
        /// <summary>
        /// ID zajištění v dané evidenci (Bagman,StarBuild, atd.).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier Id { get; set; }

        /// <summary>
        /// Kategorie zajištění.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("categoryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CategoryCode { get; set; }

        /// <summary>
        /// prohlášená budoucí hodnota zajištění.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("appraisedValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AppraisedValue { get; set; }

        /// <summary>
        /// prohlášená budoucí hodnota zajištění v původní měně.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("appraisedValueOriginal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AppraisedValueOriginal { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationProduct
    {
        /// <summary>
        /// kód produktového shluku (shluk jednoho produktu).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ProductClusterCode { get; set; }

        /// <summary>
        /// z tabulek xxTABGL, sloupec C_PROD_SEL.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("glTableSelection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string GlTableSelection { get; set; }

        /// <summary>
        /// aplikace + typ účtu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("aplType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AplType { get; set; }

        /// <summary>
        /// účely úvěru.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationPurpose")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationPurpose> LoanApplicationPurpose { get; set; }

        /// <summary>
        /// seznam zajištění daného účtu. Zabaluje větve COLLATERAL. Shodná struktura jako v CrI_out.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCollateral")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationCollateral> LoanApplicationCollateral { get; set; }

        /// <summary>
        /// požadovaná výše úvěru.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountRequired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountRequired { get; set; }

        /// <summary>
        /// celková výše investice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountInvestment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountInvestment { get; set; }

        /// <summary>
        /// celková výše vlastních zdrojů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountOwnResources")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountOwnResources { get; set; }

        /// <summary>
        /// celková výše cizích zdrojů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountForeignResources")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountForeignResources { get; set; }

        /// <summary>
        /// počet splátek (anuitní a úrokové).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Maturity { get; set; }

        /// <summary>
        /// žádaná anuitní splátka.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("annuity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Annuity { get; set; }

        /// <summary>
        /// doba fixace úrokové sazby.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fixationPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? FixationPeriod { get; set; }

        /// <summary>
        /// žádaná roční úroková sazba.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? InterestRate { get; set; }

        /// <summary>
        /// typ splátkového kalendáře.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentScheduleType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationProductRepaymentScheduleType? RepaymentScheduleType { get; set; }

        /// <summary>
        /// periodicity splátek.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationProductInstallmentPeriod? InstallmentPeriod { get; set; }

        /// <summary>
        /// počet splátek (pouze anuitní).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? InstallmentCount { get; set; }

        /// <summary>
        /// termín čerpání obchodu od.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("drawingPeriodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? DrawingPeriodStart { get; set; }

        /// <summary>
        /// termín čerpání obchodu do.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("drawingPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? DrawingPeriodEnd { get; set; }

        /// <summary>
        /// datum začátku splácení.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentPeriodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? RepaymentPeriodStart { get; set; }

        /// <summary>
        /// konečný den splatnosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTime? RepaymentPeriodEnd { get; set; }

        /// <summary>
        /// vnitrobankovní úroková sazba.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("vbs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double? Vbs { get; set; }

        /// <summary>
        /// kód produktového shluku (shluk jednoho produktu).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isProductSecured")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? IsProductSecured { get; set; }

        /// <summary>
        /// domácí měna dle příjmu žadatelů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("homeCurrencyIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string HomeCurrencyIncome { get; set; }

        /// <summary>
        /// domácí měna dle bydliště žadatelů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("homeCurrencyResidence")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string HomeCurrencyResidence { get; set; }

        /// <summary>
        /// typ financování.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("financingType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string FinancingType { get; set; }

        /// <summary>
        /// kód developera daného projektu, v rámci kterého je žádáno financování.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("developerCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string DeveloperCode { get; set; }

        /// <summary>
        /// kód daného projektu, v rámci kterého je žádáno financování.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("projectCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProjectCode { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationPurpose
    {
        /// <summary>
        /// výše požadované výše úvěru pro daný účel.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Amount { get; set; }

        /// <summary>
        /// účel úvěru.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? Code { get; set; }

    }

    /// <summary>
    /// RiskBusinessCaseAssessment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplication
    {
        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ResourceIdentifier Id { get; set; } = new ResourceIdentifier();

        /// <summary>
        /// rozlišení nového obchodu a typu dodatku
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("appendixCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? AppendixCode { get; set; }

        /// <summary>
        /// distribuční kanál vzniku žádosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("distributionChannelCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanApplicationDistributionChannelCode? DistributionChannelCode { get; set; }

        /// <summary>
        /// Způsob podpisu žádosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("signatureType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string SignatureType { get; set; }

        /// <summary>
        /// loan application verze
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDataVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string LoanApplicationDataVersion { get; set; }

        /// <summary>
        /// pouze CREATOR
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("person")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public KBGroupPerson Person { get; set; }

        /// <summary>
        /// aplikačních data jednotlivých domácností (včetně ručitelských)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationHousehold")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationHousehold> LoanApplicationHousehold { get; set; }

        /// <summary>
        /// parametrů jednotlivých účtů balíčku
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationProduct")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationProduct LoanApplicationProduct { get; set; }

        /// <summary>
        /// Vazba žádosti na existující úvěrový produkt (např.pro konsolidace, dodatky, apod.)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationProductRelation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationProductRelation> LoanApplicationProductRelation { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDeclaredProductRelation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationDeclaredProductRelation> LoanApplicationDeclaredProductRelation { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDealer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationDealer LoanApplicationDealer { get; set; }

    }

    /// <summary>
    /// Loan Application result.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal partial class LoanApplicationResult
    {
        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// loan application verze
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDataVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanApplicationDataVersion { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum IncomeDeductionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"EXECUTION")]
        EXECUTION = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"INSTALLMENTS")]
        INSTALLMENTS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationConsentValueConsentValueType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PHONE_NUMBER")]
        PHONE_NUMBER = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationCounterPartyRoleCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"R")]
        R = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationCounterPartyGender
    {

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"F")]
        F = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationCounterPartyMaritalStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"D")]
        D = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"W")]
        W = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"R")]
        R = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationCounterPartyHousingCondition
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OW")]
        OW = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"GR")]
        GR = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"RE")]
        RE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PA")]
        PA = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OT")]
        OT = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationCounterpartyConsentExternalRegisterType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"TELCO")]
        TELCO = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationEmploymentIncomeProofType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CCD")]
        CCD = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CPS")]
        CPS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DAP")]
        DAP = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"DOM")]
        DOM = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"EPP")]
        EPP = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PNZ")]
        PNZ = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"PVP")]
        PVP = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS")]
        UPS = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"XXX")]
        XXX = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationEntrepreneurIncomeProofType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CCD")]
        CCD = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CPS")]
        CPS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DAP")]
        DAP = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"DOM")]
        DOM = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"EPP")]
        EPP = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PNZ")]
        PNZ = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"PVP")]
        PVP = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS")]
        UPS = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"XXX")]
        XXX = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationOtherIncomeProofType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CCD")]
        CCD = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CPS")]
        CPS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DAP")]
        DAP = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"DOM")]
        DOM = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"EPP")]
        EPP = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PNZ")]
        PNZ = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"PVP")]
        PVP = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS")]
        UPS = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"XXX")]
        XXX = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationRentIncomeProofType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CCD")]
        CCD = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CPS")]
        CPS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DAP")]
        DAP = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"DOM")]
        DOM = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"EPP")]
        EPP = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PNZ")]
        PNZ = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"PVP")]
        PVP = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS")]
        UPS = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"XXX")]
        XXX = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum PhoneContactContactType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PRIVATE")]
        PRIVATE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS")]
        BUSINESS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"MOBILE")]
        MOBILE = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum CreditLiabilitiesSummaryProductClusterCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CC")]
        CC = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"AD")]
        AD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"ML")]
        ML = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"CL")]
        CL = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum ExpensesSummaryCategory
    {

        [System.Runtime.Serialization.EnumMember(Value = @"RENT")]
        RENT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ALIMONY")]
        ALIMONY = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"INSURANCE")]
        INSURANCE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"SAVINGS")]
        SAVINGS = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationHouseholdRoleCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"R")]
        R = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanInstallmentsSummaryProductClusterCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CL")]
        CL = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ML")]
        ML = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationProductRelationCounterpartyRoleCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"R")]
        R = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationProductRepaymentScheduleType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"P")]
        P = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"OS")]
        OS = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"OM")]
        OM = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"AX")]
        AX = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PX")]
        PX = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationProductInstallmentPeriod
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"B")]
        B = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"T")]
        T = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Q")]
        Q = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"C")]
        C = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"N")]
        N = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"V")]
        V = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal enum LoanApplicationDistributionChannelCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"DC")]
        DC = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"AG")]
        AG = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"BR")]
        BR = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"CC")]
        CC = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"DM")]
        DM = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"SH")]
        SH = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"TP")]
        TP = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"MC")]
        MC = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"WF")]
        WF = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"MB")]
        MB = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"MA")]
        MA = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"XC")]
        XC = 11,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : System.Text.Json.Serialization.JsonConverter<System.DateTime>
    {
        public override System.DateTime Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
        {
            var dateTime = reader.GetString();
            if (dateTime == null)
            {
                throw new System.Text.Json.JsonException("Unexpected JsonTokenType.Null");
            }

            return System.DateTime.Parse(dateTime);
        }

        public override void Write(System.Text.Json.Utf8JsonWriter writer, System.DateTime value, System.Text.Json.JsonSerializerOptions options)
        {
            writer.WriteStringValue(value.ToString("yyyy-MM-dd"));
        }
    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603