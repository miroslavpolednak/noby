//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace DomainServices.RiskIntegrationService.ExternalServices.CustomerExposure.V3.Contracts
{
    using System = global::System;

    

    /// <summary>
    /// Amount
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Amount
    {
        /// <summary>
        /// Currency code of the Amount (ISO 4217), e.g. 'CZK', 'EUR'
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Value of the Amount
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public decimal Value { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The unified error model
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ErrorModel
    {
        /// <summary>
        /// usually unused and replaced by the error codes categorization
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Obsolete]
        public int Category { get; set; }

        /// <summary>
        /// code of the error that occured, with or without an hirarchical categorization
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Code { get; set; }

        /// <summary>
        /// an optional error detail with a custom schema discriminated by the type-discriminator
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("detail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public object Detail { get; set; }

        /// <summary>
        /// copy of the http-status-code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("httpStatusCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int HttpStatusCode { get; set; }

        /// <summary>
        /// plain-text message description related to the given error code and intended for better issue-solving only
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Message { get; set; }

        /// <summary>
        /// unique error ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("uuid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Uuid { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Obchody FOP
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExistingCBCBExposureItem
    {

        [System.Text.Json.Serialization.JsonPropertyName("cbcbContractId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string CbcbContractId { get; set; }

        /// <summary>
        /// Datum poslední aktualizace dat v CBCB
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cbcbDataLastUpdate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? CbcbDataLastUpdate { get; set; }

        /// <summary>
        /// Datum poskytnutí
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contractDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? ContractDate { get; set; }

        /// <summary>
        /// Role klienta v obchodu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerRoleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CustomerRoleCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("exposureAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount ExposureAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("installmentAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount InstallmentAmount { get; set; }

        /// <summary>
        /// Produkt poskytnutý v rámci skupiny KB
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("kbGroupInstanceCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string KbGroupInstanceCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount LoanAmount { get; set; }

        /// <summary>
        /// Typ úvěru
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string LoanType { get; set; }

        /// <summary>
        /// Konečná splatnost
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturityDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? MaturityDate { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Obchody FOP
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExistingKBGroupExposureItem
    {
        /// <summary>
        /// Typ účtu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string AccType { get; set; }

        /// <summary>
        /// Datum poskytnutí obchodu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contractDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? ContractDate { get; set; }

        /// <summary>
        /// Role klienta v obchodu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerRoleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CustomerRoleCode { get; set; }

        /// <summary>
        /// Aplikace
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("diApplicationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string DiApplicationNumber { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("drawingAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount DrawingAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("exposureAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount ExposureAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("installmentAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount InstallmentAmount { get; set; }

        /// <summary>
        /// Indikátor zajištění
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isSecured")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool IsSecured { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount LoanAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanBalanceAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount LoanBalanceAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanOffBalanceAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount LoanOffBalanceAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanOnBalanceAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount LoanOnBalanceAmount { get; set; }

        /// <summary>
        /// Typ úvěru
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string LoanType { get; set; }

        /// <summary>
        /// Datum splatnosti obchodu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturityDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? MaturityDate { get; set; }

        /// <summary>
        /// Cluster kód úvěru
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ProductClusterCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string ProductId { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// exposureSummary
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExposureSummaryForApproval
    {

        [System.Text.Json.Serialization.JsonPropertyName("totalExistingExposureKB")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount TotalExistingExposureKB { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalExistingExposureKBNaturalPerson")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount TotalExistingExposureKBNaturalPerson { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalExistingExposureKBNonPurpose")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount TotalExistingExposureKBNonPurpose { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalExistingExposureUnsecured")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount TotalExistingExposureUnsecured { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Seznam klientů v domácnosti
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCounterparty
    {
        /// <summary>
        /// Příznak zda byly provolány registry
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cbcbRegisterCalled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool CbcbRegisterCalled { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cbcbReportId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string CbcbReportId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string CustomerId { get; set; }

        /// <summary>
        /// Obchody FOP
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("existingCBCBJuridicalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ExistingCBCBExposureItem> ExistingCBCBJuridicalPersonExposureItem { get; set; }

        /// <summary>
        /// Obchody FOO
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("existingCBCBNaturalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ExistingCBCBExposureItem> ExistingCBCBNaturalPersonExposureItem { get; set; }

        /// <summary>
        /// Obchody FOP
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("existingKBGroupJuridicalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ExistingKBGroupExposureItem> ExistingKBGroupJuridicalPersonExposureItem { get; set; }

        /// <summary>
        /// Obchody FOO
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("existingKBGroupNaturalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ExistingKBGroupExposureItem> ExistingKBGroupNaturalPersonExposureItem { get; set; }

        /// <summary>
        /// ID loanApplicationCounterparty
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCounterpartyId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long LoanApplicationCounterpartyId { get; set; }

        /// <summary>
        /// Obchody FOP
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestedCBCBJuridicalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<RequestedCBCBExposureItem> RequestedCBCBJuridicalPersonExposureItem { get; set; }

        /// <summary>
        /// Obchody FOO
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestedCBCBNaturalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<RequestedCBCBExposureItem> RequestedCBCBNaturalPersonExposureItem { get; set; }

        /// <summary>
        /// Obchody FOP
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestedKBGroupJuridicalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<RequestedKBGroupExposureItem> RequestedKBGroupJuridicalPersonExposureItem { get; set; }

        /// <summary>
        /// Obchody FOO
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestedKBGroupNaturalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<RequestedKBGroupExposureItem> RequestedKBGroupNaturalPersonExposureItem { get; set; }

        /// <summary>
        /// Role klienta v žádosti
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("roleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string RoleCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Zprostředkovatel
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationDealer
    {

        [System.Text.Json.Serialization.JsonPropertyName("companyId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string CompanyId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationRelatedExposure
    {

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDealer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LoanApplicationDealer LoanApplicationDealer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string LoanApplicationId { get; set; }

        /// <summary>
        /// loanApplicationSnapshotId
        /// <br/>NotNull
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationSnapshotId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string LoanApplicationSnapshotId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string RiskBusinessCaseId { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationRelatedExposureResult
    {

        [System.Text.Json.Serialization.JsonPropertyName("exposureSummary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public ExposureSummaryForApproval ExposureSummary { get; set; }

        /// <summary>
        /// Seznam klientů v domácnosti
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCounterparty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LoanApplicationCounterparty> LoanApplicationCounterparty { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Obchody FOP
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RequestedCBCBExposureItem
    {

        [System.Text.Json.Serialization.JsonPropertyName("cbcbContractId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string CbcbContractId { get; set; }

        /// <summary>
        /// Datum poslední aktualizace dat v CBCB
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cbcbDataLastUpdate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? CbcbDataLastUpdate { get; set; }

        /// <summary>
        /// Role klienta v obchod
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerRoleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CustomerRoleCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("installmentAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount InstallmentAmount { get; set; }

        /// <summary>
        /// Produkt poskytnutý v rámci skupiny KB
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("kbGroupInstanceCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string KbGroupInstanceCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount LoanAmount { get; set; }

        /// <summary>
        /// Typ úvěru
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string LoanType { get; set; }

        /// <summary>
        /// Konečná splatnost
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturityDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? MaturityDate { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Obchody FOP
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.5.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RequestedKBGroupExposureItem
    {
        /// <summary>
        /// Typ účtu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string AccType { get; set; }

        /// <summary>
        /// Role klienta v obchodu
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerRoleCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CustomerRoleCode { get; set; }

        /// <summary>
        /// Aplikace
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("diApplicationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string DiApplicationNumber { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("installmentAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount InstallmentAmount { get; set; }

        /// <summary>
        /// Indikátor zajištění
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isSecured")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool IsSecured { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Amount LoanAmount { get; set; }

        /// <summary>
        /// Typ úvěru
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string LoanType { get; set; }

        /// <summary>
        /// Cluster kód úvěru
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productClusterCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ProductClusterCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^urn:ri:(\w+)\.(\w+)\.(\w+)\.([\w+-.]*)(~(\w+))?")]
        public string RiskBusinessCaseId { get; set; }

        /// <summary>
        /// Stav rozpracovaného obchodu v C4M
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("statusCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string StatusCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603