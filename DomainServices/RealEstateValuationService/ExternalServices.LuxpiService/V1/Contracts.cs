//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json.Serialization;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace DomainServices.RealEstateValuationService.ExternalServices.LuxpiService.V1.Contracts
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddressPoint
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Name { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("streetId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? StreetId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("townPartId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? TownPartId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("zipCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ZipCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("addressDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? AddressDescription { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("addressSearch")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? AddressSearch { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("gpsLat")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? GpsLat { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("gpsLon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? GpsLon { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("streetName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? StreetName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("townName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TownName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("townPartName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TownPartName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("distictName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? DistictName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Link>? Links { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddressRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("districtName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? DistrictName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("townName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TownName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("townPartName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TownPartName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("streetName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? StreetName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("buildingNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? BuildingNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("orientationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? OrientationNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("zipCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ZipCode { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddressTermRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("term")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Term { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FlatPriceRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("technicalState")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TechnicalState { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("materialStructure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? MaterialStructure { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatSchema")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? FlatSchema { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double FlatArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("userId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? UserId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("locality")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? Locality { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dealNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? DealNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? FlatNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("actualPurchasePrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? ActualPurchasePrice { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("floorNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? FloorNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("balconyArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? BalconyArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("terraceArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? TerraceArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loggiaArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? LoggiaArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("frontGardenArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? FrontGardenArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cellarBoxArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? CellarBoxArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("location")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Location { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("distanceStation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? DistanceStation { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ageOfBuilding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? AgeOfBuilding { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("metro")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Metro { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("garageCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? GarageCount { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("basicInfoEstate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? BasicInfoEstate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("technicalStateFlat")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TechnicalStateFlat { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("leased")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Leased { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("garret")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Garret { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("reconstruction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Reconstruction { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("reconstructionScale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ReconstructionScale { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("valuationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? ValuationId { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class KBModelRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("technicalState")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TechnicalState { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("materialStructure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? MaterialStructure { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatSchema")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? FlatSchema { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double FlatArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dealNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? DealNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("leased")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Leased { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ageOfBuilding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? AgeOfBuilding { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("actualPurchasePrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? ActualPurchasePrice { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("floorNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? FloorNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("isDealSubject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? IsDealSubject { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? LoanAmount { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Link
    {

        [System.Text.Json.Serialization.JsonPropertyName("href")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Href { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("rel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Rel { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("method")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Method { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LuxComparableRealEstate
    {

        [System.Text.Json.Serialization.JsonPropertyName("valuationNavigation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LuxValuation ValuationNavigation { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("compRealEstateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long CompRealEstateId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("luxValuationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long LuxValuationId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("valuationDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValuationDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("territoryNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long TerritoryNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("streetName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? StreetName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("buildingTechnicalStateText")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? BuildingTechnicalStateText { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("materialStructureText")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? MaterialStructureText { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatSchemaText")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? FlatSchemaText { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("garageBoxCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? GarageBoxCount { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("garageBoxCountText")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? GarageBoxCountText { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("calcFloorArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? CalcFloorArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("location")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Location { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("massTransport")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? MassTransport { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("highway")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Highway { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("upstairsNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? UpstairsNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cellarArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? CellarArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("heatingType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? HeatingType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("finalApprovalYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? FinalApprovalYear { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("wearTear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? WearTear { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("totalReconstructionYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? TotalReconstructionYear { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partReconstructionYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? PartReconstructionYear { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("negativeImpactFloads")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? NegativeImpactFloads { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("buildingTermination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? BuildingTermination { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("accessRisk")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? AccessRisk { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("easements")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Easements { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cadastralRegister")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? CadastralRegister { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("negativeImpactNoise")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? NegativeImpactNoise { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("impurityRisk")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? ImpurityRisk { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("otherNaturalRisk")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? OtherNaturalRisk { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("socialRisk")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? SocialRisk { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("foreignLand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? ForeignLand { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("electricalConnection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? ElectricalConnection { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("waterConnection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? WaterConnection { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("sewerConnection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? SewerConnection { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("gasConnection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? GasConnection { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("telephoneConnection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? TelephoneConnection { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("driveway")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Driveway { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("floorNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? FloorNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("btlTotalArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? BtlTotalArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatTechnicalStateText")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? FlatTechnicalStateText { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("standardPrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? StandardPrice { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("standardPrice1m")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? StandardPrice1m { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("purchasePrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? PurchasePrice { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LuxValuation
    {

        [System.Text.Json.Serialization.JsonPropertyName("luxValuationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long LuxValuationId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("creatorRequestId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long CreatorRequestId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("standardPrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? StandardPrice { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("standardPriceDiscount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? StandardPriceDiscount { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("standardPriceDiscountLux")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? StandardPriceDiscountLux { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("unsuitable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Unsuitable { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("areaRisk")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? AreaRisk { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("heterogenityRisk")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? HeterogenityRisk { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("errorMessage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ErrorMessage { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("errorCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? ErrorCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("createdWhen")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime CreatedWhen { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Status { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("luxSearchId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? LuxSearchId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("pdfResult")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public byte[]? PdfResult { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("xmlDataStaus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? XmlDataStaus { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("comparableRealEstates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<LuxComparableRealEstate>? ComparableRealEstates { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("valuationRequestInstances")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ValuationRequest>? ValuationRequestInstances { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceIndexResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("zipCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ZipCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("validDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime ValidDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? Price { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ValuationRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("requestType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? RequestType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("luxValuationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? LuxValuationId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("luxValuation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public LuxValuation LuxValuation { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("realEstateType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? RealEstateType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("territoryNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? TerritoryNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("streetId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? StreetId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("addressId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? AddressId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? FlatNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("isknId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? IsknId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("technicalStateCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TechnicalStateCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("materialStructureCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? MaterialStructureCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatSchemaCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? FlatSchemaCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("flatArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double FlatArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("createdBy")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? CreatedBy { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("createdByUserId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? CreatedByUserId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("createdWhen")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTime CreatedWhen { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Status { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("errorMessage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ErrorMessage { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dealNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? DealNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("actualPurchasePrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? ActualPurchasePrice { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("localityId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? LocalityId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("floorNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? FloorNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("balconyArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? BalconyArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("terraceArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? TerraceArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loggiaArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? LoggiaArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("fontGardenArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? FontGardenArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("cellarBoxArea")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? CellarBoxArea { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("location")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Location { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("ageOfBuilding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? AgeOfBuilding { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("distanceStation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? DistanceStation { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("metro")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Metro { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("garageCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? GarageCount { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("basicInfoEstate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? BasicInfoEstate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("technicalStateFlat")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TechnicalStateFlat { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("leased")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Leased { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("garret")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Garret { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("reconstruction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Reconstruction { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("reconstructionScale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ReconstructionScale { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("valuationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? ValuationId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("isDealSubject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? IsDealSubject { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("modelType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ModelType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("resultPrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? ResultPrice { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("priceType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? PriceType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("passedRequestCheck")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? PassedRequestCheck { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? LoanAmount { get; set; } = default!;

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603