# ASP.NET Core

#Default none and then overriden in the Azure Pipeline settings
trigger: none

pool:
  name: MPSS Common

variables:
  - name: buildConfiguration
    value: 'Release'
  - name: buildPlatform
    value: 'Any CPU'
  - name: projectFile
    value: 'NOBY\NOBY.LogApi\NOBY.LogApi.csproj'
  - name: runSonarQube
    value: $[or(eq(lower(variables['Build.SourceBranchName']), 'stage'), eq(lower(variables['Build.SourceBranchName']), 'production'), ne(lower(variables['USESONARQUBE']), 'false'))]
  - template: azure-pipelines-vars.yml

# custom BuildNumber
name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)_$(Build.BuildId)

steps:
- task: InlinePowershell@1
  displayName: Set Version
  inputs:
    Script: |
      $file = '$(Build.SourcesDirectory)\$(projectFile)'
      $regex = '(?<=<Version>)[^<]*'
      
      $finalVersion = "$(versionMajor).$(versionMinor).$(versionPatch).$(Build.BuildId)"
     
      (Get-Content $file) -replace $regex, $finalversion | Set-Content $file

      Write-Host "Build.BuildId - " -NoNewline
      Write-Host $(Build.BuildId)
      Write-Host "Final version - " -NoNewline
      Write-Host $finalVersion


- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(projectFile)'
    feedsToUse: 'config'
    nugetConfigPath: 'C:\Users\XX_TFSAGENT_MPSS\AppData\Roaming\NuGet\NuGet.Config'
    noCache: false

- task: SonarQubePrepare@5
  condition: eq(variables.runSonarQube, true)
  inputs:
    SonarQube: 'NOBY - SonarQube'
    scannerMode: 'MSBuild'
    projectKey: 'AZURE--MPSS--CIS--OneSolution--NOBY.LOGAPI'
    projectName: 'NOBY.LOGAPI'
    projectVersion: '1.0.0.$(Build.BuildId)'
    extraProperties: 'sonar.verbose=true'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(projectFile)'
    arguments: '--configuration $(buildConfiguration) --output $(Build.BinariesDirectory)'
    noCache: false

- task: SonarQubeAnalyze@5
  condition: eq(variables.runSonarQube, true)

- task: SonarQubePublish@5
  condition: eq(variables.runSonarQube, true)
  inputs:
    pollingTimeoutSec: '300'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).zip'
    ArtifactName: 'drop'
    publishLocation: 'FilePath'
    TargetPath: '\\sapckb079\NETDEV\BuildsMPSS\NOBY\$(Build.DefinitionName)\$(Build.BuildNumber)'