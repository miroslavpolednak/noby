//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace ExternalServices.Rip.V1.RipWrapper
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Client 
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public Client(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Výpočet rozšířené bonity
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<CreditWorthinessCalculation> ComputeCreditWorthinessAsync(CreditWorthinessCalculationArguments body)
        {
            return ComputeCreditWorthinessAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Výpočet rozšířené bonity
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<CreditWorthinessCalculation> ComputeCreditWorthinessAsync(CreditWorthinessCalculationArguments body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/v1/credit-worthiness");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var content_ = new System.Net.Http.StringContent(System.Text.Json.JsonSerializer.Serialize(body, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<CreditWorthinessCalculation>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Založí LoanApplication
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<LoanApplicationResponse> CreateLoanApplicationAsync(LoanApplicationRequest body)
        {
            return CreateLoanApplicationAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Založí LoanApplication
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<LoanApplicationResponse> CreateLoanApplicationAsync(LoanApplicationRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/v1/loan-application");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var content_ = new System.Net.Http.StringContent(System.Text.Json.JsonSerializer.Serialize(body, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<LoanApplicationResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Vrátí LoanApplicationAssessment podle ID
        /// </summary>
        /// <param name="loanApplicationAssessmentId">loanApplicationAssessmentId</param>
        /// <param name="expand">vrácený objekt LoanApplicationAssessment je možné rozšířit o tyto položky |assessmentDetail|householdAssessmentDetail|counterpartyAssessmentDetail|loanApplicationApprovalPossibilities|collateralRiskCharacteristics</param>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<LoanApplicationAssessment> GetLoanApplicationAssessmentAsync(string loanApplicationAssessmentId, System.Collections.Generic.IEnumerable<string> expand)
        {
            return GetLoanApplicationAssessmentAsync(loanApplicationAssessmentId, expand, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Vrátí LoanApplicationAssessment podle ID
        /// </summary>
        /// <param name="loanApplicationAssessmentId">loanApplicationAssessmentId</param>
        /// <param name="expand">vrácený objekt LoanApplicationAssessment je možné rozšířit o tyto položky |assessmentDetail|householdAssessmentDetail|counterpartyAssessmentDetail|loanApplicationApprovalPossibilities|collateralRiskCharacteristics</param>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<LoanApplicationAssessment> GetLoanApplicationAssessmentAsync(string loanApplicationAssessmentId, System.Collections.Generic.IEnumerable<string> expand, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/v1/loan-application-assessment/{loanApplicationAssessmentId}?");
            urlBuilder_.Replace("{loanApplicationAssessmentId}", System.Uri.EscapeDataString(ConvertToString(loanApplicationAssessmentId, System.Globalization.CultureInfo.InvariantCulture)));
            if (expand != null)
            {
                foreach (var item_ in expand) { urlBuilder_.Append(System.Uri.EscapeDataString("expand") + "=").Append(System.Uri.EscapeDataString(ConvertToString(item_, System.Globalization.CultureInfo.InvariantCulture))).Append("&"); }
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<LoanApplicationAssessment>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Vrátí data související s angažovaností jednotlivých účastníků úvěrové žádosti(Loan Applicaiton).
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<LoanApplicationRelatedExposureResult> LoanApplicationExposureAsync(LoanApplicationRelatedExposure body)
        {
            return LoanApplicationExposureAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Vrátí data související s angažovaností jednotlivých účastníků úvěrové žádosti(Loan Applicaiton).
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<LoanApplicationRelatedExposureResult> LoanApplicationExposureAsync(LoanApplicationRelatedExposure body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/v1/loan-application-exposure-calculation");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var content_ = new System.Net.Http.StringContent(System.Text.Json.JsonSerializer.Serialize(body, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<LoanApplicationRelatedExposureResult>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Risk Business Case - Assessment (Asynchronous)
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<RiskBusinessCaseCommand> RiskBusinessCaseAssessmentAsync(string id, AssessmentRequest body)
        {
            return RiskBusinessCaseAssessmentAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Risk Business Case - Assessment (Asynchronous)
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<RiskBusinessCaseCommand> RiskBusinessCaseAssessmentAsync(string id, AssessmentRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/v1/assessment/command/riskBusinessCaseId={id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var content_ = new System.Net.Http.StringContent(System.Text.Json.JsonSerializer.Serialize(body, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<RiskBusinessCaseCommand>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Risk Business Case - Create
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<LoanApplicationCreate> RiskBusinessCaseCreateAsync(CreateRequest body)
        {
            return RiskBusinessCaseCreateAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Risk Business Case - Create
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<LoanApplicationCreate> RiskBusinessCaseCreateAsync(CreateRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/v1/risk-business-case");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var content_ = new System.Net.Http.StringContent(System.Text.Json.JsonSerializer.Serialize(body, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<LoanApplicationCreate>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Risk Business Case - Commit
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<LoanApplicationCommit> RiskBusinessCaseCommitAsync(string id, CommitRequest body)
        {
            return RiskBusinessCaseCommitAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Risk Business Case - Commit
        /// </summary>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<LoanApplicationCommit> RiskBusinessCaseCommitAsync(string id, CommitRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/v1/risk-business-case/{id}/commitment");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var content_ = new System.Net.Http.StringContent(System.Text.Json.JsonSerializer.Serialize(body, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<LoanApplicationCommit>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute)) 
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool) 
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[]) value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array) value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    /// <summary>
    /// Uživatel (přihlášený uživatel/schvalovatel aplikace StarBuild/NOBY)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HumanUser
    {
        /// <summary>
        /// Identifikátor uživatele/schvalovatele (os.číslo, login, ...)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Identity { get; set; }

        /// <summary>
        /// Identitní schéma ("MPAD", "KBAD", "DMID" (BrokerId), "M04ID", "M17ID")
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identityScheme")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string IdentityScheme { get; set; }

    }

    /// <summary>
    /// Parametry potřebné pro výpočet Bonity
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationProduct
    {
        /// <summary>
        /// Kód produktu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("product")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int Product { get; set; }

        /// <summary>
        /// Doba splatnosti úvěru v měsících.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int Maturity { get; set; }

        /// <summary>
        /// Žádaná roční úroková sazba.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double InterestRate { get; set; }

        /// <summary>
        /// Požadovaná výše úvěru v Kč.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountRequired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int AmountRequired { get; set; }

        /// <summary>
        /// Požadovaná výše splátky v Kč.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("annuity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int Annuity { get; set; }

        /// <summary>
        /// Doba fixace úrokové sazby v měsících.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fixationPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int FixationPeriod { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExpensesSummary
    {
        /// <summary>
        /// Náklady domácnosti spojené s bydlením (Kč/měsíc).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("rent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Rent { get; set; }

        /// <summary>
        /// Výdaje domácnosti na spoření (Kč/měsíc).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("saving")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Saving { get; set; }

        /// <summary>
        /// Výdaje domácnosti na pojištění (Kč/měsíc).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("insurance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Insurance { get; set; }

        /// <summary>
        /// Ostatní výdaje domácnosti (Kč/měsíc).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("other")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Other { get; set; }

    }

    /// <summary>
    /// Příjem klienta
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationIncome
    {
        /// <summary>
        /// Kategorie příjmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("categoryMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int CategoryMp { get; set; }

        /// <summary>
        /// Výše příjmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Amount { get; set; }

    }

    /// <summary>
    /// Household Credit Liabilities OutHomeCompany.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditLiability
    {
        /// <summary>
        /// Typ závazku.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("liabilityType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int LiabilityType { get; set; }

        /// <summary>
        /// Výše limitu kreditní karty nebo povoleného debetu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("limit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Limit { get; set; }

        /// <summary>
        /// Konsolidovaná výše limitu kreditní karty nebo povoleného debetu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountConsolidated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double AmountConsolidated { get; set; }

        /// <summary>
        /// Výše splátky spotřebitelského nebo hypotečního úvěru.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Installment { get; set; }

        /// <summary>
        /// Konsolidovaná výše splátky spotřebitelského nebo hypotečního úvěru.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentConsolidated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double InstallmentConsolidated { get; set; }

        /// <summary>
        /// Příznak, že závazek je veden u jiného peněžního ústavu (JPÚ), než v kterém je sjednáván úvěr.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("outHomeCompanyFlag")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool OutHomeCompanyFlag { get; set; }

    }

    /// <summary>
    /// Protistrana žádosti o půjčku.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCounterParty
    {
        /// <summary>
        /// ID klienta
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("idMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string IdMp { get; set; }

        /// <summary>
        /// Je klient druhem/družkou?
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isPartnerMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool IsPartnerMp { get; set; }

        /// <summary>
        /// Rodinný stav.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maritalStatusMp")]
        public int MaritalStatusMp { get; set; }

        /// <summary>
        /// Příjem klienta.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationIncome> LoanApplicationIncome { get; set; }

        /// <summary>
        /// Závazky klienta.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("creditLiabilities")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<CreditLiability> CreditLiabilities { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationHousehold
    {
        /// <summary>
        /// Počet vyživovaných dětí do 10 let (včetně).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("childrenUnderAnd10")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? ChildrenUnderAnd10 { get; set; }

        /// <summary>
        /// Počet vyživovaných dětí nad 10 let.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("childrenOver10")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? ChildrenOver10 { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("expensesSummary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ExpensesSummary ExpensesSummary { get; set; }

        /// <summary>
        /// Klienti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("clients")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationCounterParty> Clients { get; set; }

    }

    /// <summary>
    /// Parametry potřebné pro výpočet Bonity
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditWorthinessCalculationArguments
    {
        /// <summary>
        /// ResourceProcessId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resourceProcessIdMp")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ResourceProcessIdMp { get; set; }

        /// <summary>
        /// Identifikátor volající aplikace.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("itChannel")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ItChannel { get; set; }

        /// <summary>
        /// Identifikátor žádosti z pohledu Risku (nepovinné).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskBusinessCaseIdMp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("humanUser")]
        [System.ComponentModel.DataAnnotations.Required]
        public HumanUser HumanUser { get; set; } = new HumanUser();

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationProduct")]
        [System.ComponentModel.DataAnnotations.Required]
        public LoanApplicationProduct LoanApplicationProduct { get; set; } = new LoanApplicationProduct();

        /// <summary>
        /// Domácnosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("households")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<LoanApplicationHousehold> Households { get; set; } = new System.Collections.ObjectModel.Collection<LoanApplicationHousehold>();

    }

    /// <summary>
    /// Důvod(y) nespočtení výsledků bonity.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultReason
    {
        /// <summary>
        /// Kód důvodu nespočtení výsledku
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Code { get; set; }

        /// <summary>
        /// Popis důvodu nespočtení výsledku
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Description { get; set; }

    }

    /// <summary>
    /// Vypočtená Bonita (výsledek)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditWorthinessCalculation
    {
        /// <summary>
        /// Maximální disponibilní splátka
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentLimit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? InstallmentLimit { get; set; }

        /// <summary>
        /// Maximální výše úvěru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maxAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? MaxAmount { get; set; }

        /// <summary>
        /// Zbývá na živobytí s ANNUITY
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("remainsLivingAnnuity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? RemainsLivingAnnuity { get; set; }

        /// <summary>
        /// Zbývá na živobytí s disp. Splátkou
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("remainsLivingInst")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? RemainsLivingInst { get; set; }

        /// <summary>
        /// Výsledek porovnání disponibilní a požadované splátky (0 - nebonitní, 1 - bonitní)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("worthinessResult")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int WorthinessResult { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("resultReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResultReason ResultReason { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SystemId
    {
        /// <summary>
        /// Id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// System (eg. NOBY, STARBUILD)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("system")]
        public string System { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExpensesSummary2
    {
        /// <summary>
        /// Rent.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("rent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Rent { get; set; }

        /// <summary>
        /// Saving.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("saving")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Saving { get; set; }

        /// <summary>
        /// Insurance.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("insurance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Insurance { get; set; }

        /// <summary>
        /// Other.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("other")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Other { get; set; }

    }

    /// <summary>
    /// PhoneContact
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PrimaryAddress
    {
        /// <summary>
        /// název ulice
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("streetName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string StreetName { get; set; }

        /// <summary>
        /// číslo popisné
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("houseNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? HouseNumber { get; set; }

        /// <summary>
        /// číslo orientační
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("streetNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string StreetNumber { get; set; }

        /// <summary>
        /// číslo evidenční
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("evidenceNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string EvidenceNumber { get; set; }

        /// <summary>
        /// město primární adresy
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string City { get; set; }

        /// <summary>
        /// Země.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CountryCode { get; set; }

        /// <summary>
        /// PSČ primární adresy
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("postCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? PostCode { get; set; }

        /// <summary>
        /// kód regionu primární adresy
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("regionCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? RegionCode { get; set; }

    }

    /// <summary>
    /// Amount
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Amount
    {
        /// <summary>
        /// Hodnota částky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double? Value { get; set; }

        /// <summary>
        /// Kód měny částky (ISO 4217)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CurrencyCode { get; set; }

    }

    /// <summary>
    /// IncomeDeduction
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IncomeDeduction
    {
        /// <summary>
        /// Execution
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("execution")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Execution { get; set; }

        /// <summary>
        /// Installments
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Installments { get; set; }

        /// <summary>
        /// Other
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("other")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Other { get; set; }

    }

    /// <summary>
    /// LoanApplicationEmploymentIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationEmploymentIncome
    {
        /// <summary>
        /// rodné číslo / IČO zaměstnavatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerIdentificationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string EmployerIdentificationNumber { get; set; }

        /// <summary>
        /// Typ zaměstnavatele - státní společnost, spol. se zahraniční účastí, podnikatel, etc..
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? EmployerType { get; set; }

        /// <summary>
        /// Název zaměstnavatele
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employerName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string EmployerName { get; set; }

        /// <summary>
        /// agregovaný OKEČ zaměstnavatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Nace { get; set; }

        /// <summary>
        /// povolání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("profession")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Profession { get; set; }

        /// <summary>
        /// PSČ sídla zaměstnavatele.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("postcode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Postcode { get; set; }

        /// <summary>
        /// město sídla zaměstnání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string City { get; set; }

        /// <summary>
        /// Stát sídla zaměstnání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CountryCode { get; set; }

        /// <summary>
        /// Název pracovní pozice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("jobTitle")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string JobTitle { get; set; }

        /// <summary>
        /// ulice sídla zaměstnání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("street")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Street { get; set; }

        /// <summary>
        /// číslo popisné sídla zaměstnavatele
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("houseNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int HouseNumber { get; set; }

        /// <summary>
        /// číslo orientační sídla zaměstnavatele
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("streetNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string StreetNumber { get; set; }

        /// <summary>
        /// Telefonní kontakt.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string PhoneNumber { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyIncomeAmount { get; set; }

        /// <summary>
        /// předčíslí čísla účtu zaměstnavatele, z kterého klientovi chodí mzda
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumberPrefix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumberPrefix { get; set; }

        /// <summary>
        /// číslo účtu zaměstnavatele (bez předčíslí), z kterého klientovi chodí mzda
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumberCore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumberCore { get; set; }

        /// <summary>
        /// kód banky účtu zaměstnavatele, z kterého klientovi chodí mzda
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountBankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountBankCode { get; set; }

        /// <summary>
        /// příznak domicilace příjmu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Domiciled { get; set; }

        /// <summary>
        /// typ dokumentu dokládajícího příjmy (\"PNZ\"=příjem není zadán).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProofType { get; set; }

        /// <summary>
        /// typ zaměstnání v zahraničí
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("foreignEmploymentType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ForeignEmploymentType { get; set; }

        /// <summary>
        /// Hrubý roční příjem bez pojistného za poslední zdaňovací období.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("grossAnnualIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double? GrossAnnualIncome { get; set; }

        /// <summary>
        /// kontaktní osoba uvedená na potvrzení o výši příjmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofConfirmationContactSurname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProofConfirmationContactSurname { get; set; }

        /// <summary>
        /// kontaktní tel. číslo uvedené na potvrzení o výši příjmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofConfirmationContactPhone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProofConfirmationContactPhone { get; set; }

        /// <summary>
        /// Datum vystavení potvrzení o výši příjmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofCreatedOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? ProofCreatedOn { get; set; }

        /// <summary>
        /// Je klient ve zkušební době?.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("probationaryPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? ProbationaryPeriod { get; set; }

        /// <summary>
        /// Je klient ve výpovědní lhůtě?.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("noticePeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? NoticePeriod { get; set; }

        /// <summary>
        /// Je pracovní poměr sjednán na dobu určitou?.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employmentTypeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int EmploymentTypeMp { get; set; }

        /// <summary>
        /// první pracovní smlouva se zaměstnavatelem od.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstContractFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? FirstContractFrom { get; set; }

        /// <summary>
        /// aktuální pracovní smlouva od.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currentContractFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? CurrentContractFrom { get; set; }

        /// <summary>
        /// aktuální pracovní smlouva do.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currentContractTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? CurrentContractTo { get; set; }

        /// <summary>
        /// Vystavila potvrzení o příjmu externí účetní firma?
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuedByExternalAccountant")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? IssuedByExternalAccountant { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("incomeDeduction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public IncomeDeduction IncomeDeduction { get; set; }

    }

    /// <summary>
    /// LoanApplicationEntrepreneurIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationEntrepreneurIncome
    {
        /// <summary>
        /// rodné číslo / IČO FOP.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurIdentificationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string EntrepreneurIdentificationNumber { get; set; }

        /// <summary>
        /// agregovaný OKEČ.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Nace { get; set; }

        /// <summary>
        /// povolání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("profession")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Profession { get; set; }

        /// <summary>
        /// PSČ sídla podnikání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("postcode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Postcode { get; set; }

        /// <summary>
        /// město sídla podnikání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string City { get; set; }

        /// <summary>
        /// země sídla podnikání.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CountryCode { get; set; }

        /// <summary>
        /// establishedOn
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("establishedOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? EstablishedOn { get; set; }

        /// <summary>
        /// Příznak, zdali je příjem domicilován.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Domiciled { get; set; }

        /// <summary>
        /// dokument dokládající příjem z pronájmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProofType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("annualIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AnnualIncomeAmount { get; set; }

    }

    /// <summary>
    /// LoanApplicationRentIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationRentIncome
    {
        /// <summary>
        /// předčíslí čísla účtu, ze kterého příjem přichází
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumberPrefix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumberPrefix { get; set; }

        /// <summary>
        /// číslo účtu (bez předčíslí), ze kterého příjem přichází
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumberCore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumberCore { get; set; }

        /// <summary>
        /// kód banky čísla účtu, ze kterého příjem přichází
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountBankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountBankCode { get; set; }

        /// <summary>
        /// příznak domicilace
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Domiciled { get; set; }

        /// <summary>
        /// dokument dokládající příjem z pronájmu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProofType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyIncomeAmount { get; set; }

    }

    /// <summary>
    /// LoanApplicationOtherIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationOtherIncome
    {
        /// <summary>
        /// Typ  vedlejšího prokazatelného příjmu. Opakující se atribut podle počtu vedeljších prokazatelných příjmů příjmů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount MonthlyIncomeAmount { get; set; }

        /// <summary>
        /// předčíslí čísla účtu, ze kterého příjem přichází
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumberPrefix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumberPrefix { get; set; }

        /// <summary>
        /// číslo účtu, z kterého příjem přichází.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumberCore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumberCore { get; set; }

        /// <summary>
        /// kód banky čísla účtu, ze kterého příjem přichází
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountBankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountBankCode { get; set; }

        /// <summary>
        /// Příznak, zdali je příjem domicilován.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domiciled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Domiciled { get; set; }

        /// <summary>
        /// dokument dokládající příjem z pronájmu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("proofType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProofType { get; set; }

    }

    /// <summary>
    /// LoanApplicationIncome
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationIncome2
    {
        /// <summary>
        /// příznak uzamčení příjmů
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("incomeConfirmed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? IncomeConfirmed { get; set; }

        /// <summary>
        /// datum posledního uzamčení příjmů
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lastConfirmedDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? LastConfirmedDate { get; set; }

        /// <summary>
        /// příjmy ze zaměstnání
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("employmentIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationEmploymentIncome> EmploymentIncome { get; set; }

        /// <summary>
        /// Příjmy z podnikání
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entrepreneurIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationEntrepreneurIncome> EntrepreneurIncome { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("rentIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationRentIncome RentIncome { get; set; }

        /// <summary>
        /// ostatní příjmy
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("otherIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationOtherIncome> OtherIncome { get; set; }

    }

    /// <summary>
    /// LoanApplicationPersonalDocument
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationPersonalDocument
    {
        /// <summary>
        /// Product group.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// Product group.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("typeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string TypeMp { get; set; }

        /// <summary>
        /// issuedOn
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuedOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? IssuedOn { get; set; }

        /// <summary>
        /// validTo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? ValidTo { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditLiability2
    {
        /// <summary>
        /// Typ závazku klienta
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("liabilityType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int LiabilityType { get; set; }

        /// <summary>
        /// Výše závazku v JPÚ - splátkové operace (spotřebiteslé úvěry, hypotéky)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Amount { get; set; }

        /// <summary>
        /// Výše limitu v JPÚ -  esplátkové operace (kreditní karty, povolené debety)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("limit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Limit { get; set; }

        /// <summary>
        /// Výše konsolidace u nesplátkových operací (u daného závazku (zrušení/snížení))
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountConsolidated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double AmountConsolidated { get; set; }

        /// <summary>
        /// Výše splátky (splátkové operace)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Installment { get; set; }

        /// <summary>
        /// Výše konsolidace u splátkových operací
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentConsolidated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double InstallmentConsolidated { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCounterParty2
    {
        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Id { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isPartner")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? IsPartner { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CustomerId { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("groupEmployee")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? GroupEmployee { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("specialRelationsWithKB")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? SpecialRelationsWithKB { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string BirthNumber { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("roleCodeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int RoleCodeMp { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Firstname { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("surname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Surname { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string BirthName { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? BirthDate { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthPlace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string BirthPlace { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public PrimaryAddress Address { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("genderMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string GenderMp { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maritalStatusMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? MaritalStatusMp { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("highestEducation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? HighestEducation { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("academicTitlePrefix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AcademicTitlePrefix { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mobilePhoneNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string MobilePhoneNumber { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("hasEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? HasEmail { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("housingCondition")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string HousingCondition { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("income")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationIncome2 Income { get; set; }

        /// <summary>
        /// LoanApplication identity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("taxpayer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Taxpayer { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationPersonalDocument")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationPersonalDocument LoanApplicationPersonalDocument { get; set; }

        /// <summary>
        /// Závazky klienta
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("creditLiability")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<CreditLiability2> CreditLiability { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationHousehold2
    {
        /// <summary>
        /// ID domácnosti přidělené volajícím systémem
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int Id { get; set; }

        /// <summary>
        /// kód role domácnosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("roleCodeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int RoleCodeMp { get; set; }

        /// <summary>
        /// počet vyživovaných dětí do 10 let (včetně).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("childrenUnderAnd10")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? ChildrenUnderAnd10 { get; set; }

        /// <summary>
        /// počet vyživovaných dětí nad 10 let .
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("childrenOver10")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? ChildrenOver10 { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("householdExpensesSummary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ExpensesSummary2 HouseholdExpensesSummary { get; set; }

        /// <summary>
        /// kód vypořádání majetku (manželů)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("settlementTypeCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string SettlementTypeCode { get; set; }

        /// <summary>
        /// údaje o klientech
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("counterParty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationCounterParty2> CounterParty { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MarketingActions
    {

        [System.Text.Json.Serialization.JsonPropertyName("marketingAction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int MarketingAction { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationPurpose
    {
        /// <summary>
        /// účel úvěru.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("codeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? CodeMp { get; set; }

        /// <summary>
        /// výše požadované výše úvěru pro daný účel.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double? Amount { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCollateral
    {
        /// <summary>
        /// ID zajištění v dané evidenci (Bagman,StarBuild, atd.).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// Kategorie zajištění.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("categoryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CategoryCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("appraisedValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AppraisedValue { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationProduct2
    {
        /// <summary>
        /// kód produktového shluku (shluk jednoho produktu).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("product")]
        public int Product { get; set; }

        /// <summary>
        /// LoanType
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]
        public int LoanType { get; set; }

        /// <summary>
        /// MarketingActions
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("marketingActions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<MarketingActions> MarketingActions { get; set; }

        /// <summary>
        /// Ltv
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ltv")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double Ltv { get; set; }

        /// <summary>
        /// aplikace + typ účtu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("aplType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AplType { get; set; }

        /// <summary>
        /// účely úvěru.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationPurpose")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationPurpose> LoanApplicationPurpose { get; set; }

        /// <summary>
        /// seznam zajištění daného účtu. Zabaluje větve COLLATERAL. Shodná struktura jako v CrI_out.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCollateral")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationCollateral> LoanApplicationCollateral { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountRequired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountRequired { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountInvestment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountInvestment { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountOwnResources")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountOwnResources { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("amountForeignResources")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount AmountForeignResources { get; set; }

        /// <summary>
        /// počet splátek (anuitní a úrokové).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Maturity { get; set; }

        /// <summary>
        /// žádaná anuitní splátka.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("annuity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Annuity { get; set; }

        /// <summary>
        /// doba fixace úrokové sazby.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fixationPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? FixationPeriod { get; set; }

        /// <summary>
        /// žádaná roční úroková sazba.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? InterestRate { get; set; }

        /// <summary>
        /// typ splátkového kalendáře.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentScheduleTypeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? RepaymentScheduleTypeMp { get; set; }

        /// <summary>
        /// periodicity splátek.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string InstallmentPeriod { get; set; }

        /// <summary>
        /// počet splátek (pouze anuitní).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? InstallmentCount { get; set; }

        /// <summary>
        /// termín čerpání obchodu od.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("drawingPeriodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? DrawingPeriodStart { get; set; }

        /// <summary>
        /// termín čerpání obchodu do.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("drawingPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? DrawingPeriodEnd { get; set; }

        /// <summary>
        /// datum začátku splácení.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentPeriodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? RepaymentPeriodStart { get; set; }

        /// <summary>
        /// konečný den splatnosti.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? RepaymentPeriodEnd { get; set; }

        /// <summary>
        /// domácí měna dle příjmu žadatelů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("homeCurrencyIncome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string HomeCurrencyIncome { get; set; }

        /// <summary>
        /// domácí měna dle bydliště žadatelů.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("homeCurrencyResidence")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string HomeCurrencyResidence { get; set; }

    }

    /// <summary>
    /// Parametry domácnosti.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationProductRelation
    {
        /// <summary>
        /// jiné závazky zohledněné při poskytování úvěru - ID kontraktu z CBCB
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cbcbContractIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CbcbContractIdMp { get; set; }

        /// <summary>
        /// jiné závazky zohledněné při poskytování úvěru - číslo účtu z KB/MPSS -  předčíslí
        /// <br/>plní se pouze tehdy, pokud se jedná o číslo účtu z entity poskytující úvěr
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumberPrefix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumberPrefix { get; set; }

        /// <summary>
        /// jiné závazky zohledněné při poskytování úvěru - číslo účtu z KB/MPSS (bez předčíslí)
        /// <br/>plní se pouze tehdy, pokud se jedná o číslo účtu z entity poskytující úvěr
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumberCore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountNumberCore { get; set; }

        /// <summary>
        /// jiné závazky zohledněné při poskytování úvěru - číslo účtu z KB nebo MPSS -  kód banky
        /// <br/>plní se pouze tehdy, pokud se jedná o číslo účtu z entity poskytující úvěr
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountBankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AccountBankCode { get; set; }

        /// <summary>
        /// kód produktového shluku (shluk jednoho produktu).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ProductType { get; set; }

        /// <summary>
        /// kód produktového shluku (shluk jednoho produktu).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RelationType { get; set; }

        /// <summary>
        /// remainingExposure
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("remainingExposure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double RemainingExposure { get; set; }

    }

    /// <summary>
    /// LoanApplication
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required]
        public SystemId Id { get; set; } = new SystemId();

        /// <summary>
        /// rozlišení nového obchodu a typu dodatku
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("appendixCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? AppendixCode { get; set; }

        /// <summary>
        /// distribuční kanál vzniku žádosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("distributionChannelCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string DistributionChannelCode { get; set; }

        /// <summary>
        /// Způsob podpisu žádosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("signatureType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string SignatureType { get; set; }

        /// <summary>
        /// loan application verze (verze dat - timestamp)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDataVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanApplicationDataVersion { get; set; }

        /// <summary>
        /// aplikačních data jednotlivých domácností (včetně ručitelských)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationHousehold")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<LoanApplicationHousehold2> LoanApplicationHousehold { get; set; } = new System.Collections.ObjectModel.Collection<LoanApplicationHousehold2>();

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationProduct")]
        [System.ComponentModel.DataAnnotations.Required]
        public LoanApplicationProduct2 LoanApplicationProduct { get; set; } = new LoanApplicationProduct2();

        /// <summary>
        /// konsolidované/zrušené úvěry
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationProductRelation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationProductRelation> LoanApplicationProductRelation { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("humanUser")]
        [System.ComponentModel.DataAnnotations.Required]
        public HumanUser HumanUser { get; set; } = new HumanUser();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationResponse
    {
        /// <summary>
        /// Risk segment (calculated on RIP)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskSegment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskSegment { get; set; }

    }

    /// <summary>
    /// ResourceIdentifier
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResourceIdentifier
    {
        /// <summary>
        /// The resource instance code, eg. 'KBCZ'
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("instance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Instance { get; set; }

        /// <summary>
        /// The resource domain code, eg. 'CFLM'
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("domain")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Domain { get; set; }

        /// <summary>
        /// The resource code (the in-domain resource code, eg. 'LimitModel')
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Resource { get; set; }

        /// <summary>
        /// ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        /// <summary>
        /// The variant of the resource, eg. distinguishing the origin of the source
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variant")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Variant { get; set; }

    }

    /// <summary>
    /// Resource
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Resource
    {
        /// <summary>
        /// Entity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Entity { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public ResourceIdentifier Id { get; set; }

    }

    /// <summary>
    /// AssessmentReasonDetail
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AssessmentReasonDetail
    {
        /// <summary>
        /// Target
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("target")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Target { get; set; }

        /// <summary>
        /// Desc
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("desc")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Desc { get; set; }

        /// <summary>
        /// Result
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Result { get; set; }

        /// <summary>
        /// Target
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<Resource> Resource { get; set; }

    }

    /// <summary>
    /// LoanApplicationAssessmentReason
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationAssessmentReason
    {
        /// <summary>
        /// Code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Code { get; set; }

        /// <summary>
        /// Level
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("level")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Level { get; set; }

        /// <summary>
        /// Weight
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("weight")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Weight { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("detail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public AssessmentReasonDetail Detail { get; set; }

    }

    /// <summary>
    /// LoanApplicationScore
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationScore
    {
        /// <summary>
        /// Value
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Value { get; set; }

        /// <summary>
        /// Scale
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("scale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Scale { get; set; }

    }

    /// <summary>
    /// Amount
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Amount2
    {
        /// <summary>
        /// Hodnota částky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double? Value { get; set; }

        /// <summary>
        /// Kód měny částky (ISO 4217)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CurrencyCode { get; set; }

    }

    /// <summary>
    /// LoanApplicationLimit
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationLimit
    {

        [System.Text.Json.Serialization.JsonPropertyName("_LoanApplicationLimit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 _LoanApplicationLimit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationInstallmentLimit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 LoanApplicationInstallmentLimit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCollateralLimit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 LoanApplicationCollateralLimit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("remainingAnnuityLivingAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 RemainingAnnuityLivingAmount { get; set; }

        /// <summary>
        /// Remaining Annuity Living Amount
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("calculationIrStressed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? CalculationIrStressed { get; set; }

        /// <summary>
        /// iir
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("iir")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Iir { get; set; }

        /// <summary>
        /// cir
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cir")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Cir { get; set; }

        /// <summary>
        /// dti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dti")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Dti { get; set; }

        /// <summary>
        /// dsti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dsti")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Dsti { get; set; }

    }

    /// <summary>
    /// RiskCharacteristics
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RiskCharacteristics
    {

        [System.Text.Json.Serialization.JsonPropertyName("monthlyIncomeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 MonthlyIncomeAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyCostsWithoutInstAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 MonthlyCostsWithoutInstAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallmentsInKBAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 MonthlyInstallmentsInKBAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyEntrepreneurInstallmentsInKBAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 MonthlyEntrepreneurInstallmentsInKBAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallmentsInMPSSAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 MonthlyInstallmentsInMPSSAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallmentsInOFIAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 MonthlyInstallmentsInOFIAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallmentsInCBCBAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount2 MonthlyInstallmentsInCBCBAmount { get; set; }

    }

    /// <summary>
    /// AssessmentDetail
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AssessmentDetail
    {

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationScore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationScore LoanApplicationScore { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationLimit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationLimit LoanApplicationLimit { get; set; }

        /// <summary>
        /// Assessment detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationRiskCharacteristics")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<RiskCharacteristics> LoanApplicationRiskCharacteristics { get; set; }

    }

    /// <summary>
    /// Household Assessment detail
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HouseholdAssessmentDetail
    {
        /// <summary>
        /// Household id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? HouseholdId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("assessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public AssessmentDetail AssessmentDetail { get; set; }

    }

    /// <summary>
    /// Counterparty Assessment Detail
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CounterpartyAssessmentDetail
    {
        /// <summary>
        /// Counterparty id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("counterPartyId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? CounterPartyId { get; set; }

        /// <summary>
        /// Customer id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CustomerIdMp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("assessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public AssessmentDetail AssessmentDetail { get; set; }

    }

    /// <summary>
    /// CollateralRiskCharacteristics
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CollateralRiskCharacteristics
    {
        /// <summary>
        /// Ltv
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ltv")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Ltv { get; set; }

        /// <summary>
        /// Ltfv
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ltfv")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Ltfv { get; set; }

        /// <summary>
        /// Ltp
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ltp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? Ltp { get; set; }

        /// <summary>
        /// SumAppraisedValue
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sumAppraisedValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? SumAppraisedValue { get; set; }

    }

    /// <summary>
    /// SemanticVersion
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SemanticVersion
    {
        /// <summary>
        /// Major part of a version
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("major")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? Major { get; set; }

        /// <summary>
        /// Minor part of a version
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("minor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? Minor { get; set; }

        /// <summary>
        /// Bugfix part of a version
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("bugfix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? Bugfix { get; set; }

        /// <summary>
        /// A non-semantic part of a version
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nonSemanticPart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string NonSemanticPart { get; set; }

    }

    /// <summary>
    /// Change
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Change
    {
        /// <summary>
        /// Identita actora/uživatele
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identityId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string IdentityId { get; set; }

        /// <summary>
        /// Datum změny
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? Date { get; set; }

    }

    /// <summary>
    /// LoanApplicationAssessment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationAssessment
    {
        /// <summary>
        /// ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public SystemId LoanApplicationIdMp { get; set; }

        /// <summary>
        /// Risk BusinessCase resource-identifier
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinesscaseIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskBusinesscaseIdMp { get; set; }

        /// <summary>
        /// Gets or Sets RiskBusinesscaseExpirationDate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinesscaseExpirationDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? RiskBusinesscaseExpirationDate { get; set; }

        /// <summary>
        /// Assessment result
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("assessmentResult")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? AssessmentResult { get; set; }

        /// <summary>
        /// Gets or Sets StandardRiskCosts
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("standardRiskCosts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public float? StandardRiskCosts { get; set; }

        /// <summary>
        /// Gets or Sets GlTableCode
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("glTableCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? GlTableCode { get; set; }

        /// <summary>
        /// LoanApplicationAssessment resource-identifier
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationAssessmentReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationAssessmentReason> LoanApplicationAssessmentReason { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("assessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public AssessmentDetail AssessmentDetail { get; set; }

        /// <summary>
        /// HouseholdAssessmentDetail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("householdAssessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<HouseholdAssessmentDetail> HouseholdAssessmentDetail { get; set; }

        /// <summary>
        /// HouseholdAssessmentDetail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("counterpartyAssessmentDetail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<CounterpartyAssessmentDetail> CounterpartyAssessmentDetail { get; set; }

        /// <summary>
        /// CollateralRiskCharacteristics
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("collateralRiskCharacteristics")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<CollateralRiskCharacteristics> CollateralRiskCharacteristics { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public SemanticVersion Version { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Change Created { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Change Updated { get; set; }

    }

    /// <summary>
    /// LoanApplicationRelatedExposur
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationRelatedExposure
    {

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public SystemId LoanApplicationIdMp { get; set; }

        /// <summary>
        /// riskBusinessCaseId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskBusinessCaseIdMp { get; set; }

        /// <summary>
        /// verze dat
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDataVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanApplicationDataVersion { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CompanyId
    {
        /// <summary>
        /// Company (eg. MP, KB)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("company")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Company { get; set; }

        /// <summary>
        /// Id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

    }

    /// <summary>
    /// Amount
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Amount3
    {
        /// <summary>
        /// Hodnota částky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public double? Value { get; set; }

        /// <summary>
        /// Kód měny částky (ISO 4217)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CurrencyCode { get; set; }

    }

    /// <summary>
    /// ExistingKBGroupExposureItem
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExistingKBGroupExposureItem
    {

        [System.Text.Json.Serialization.JsonPropertyName("productIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CompanyId ProductIdMp { get; set; }

        /// <summary>
        /// loanType
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanType { get; set; }

        /// <summary>
        /// loanTypeCategory
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanTypeCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanTypeCategory { get; set; }

        /// <summary>
        /// customerRoleCode
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerRoleCodeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int CustomerRoleCodeMp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 LoanAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("drawingAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 DrawingAmount { get; set; }

        /// <summary>
        /// contractDate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contractDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? ContractDate { get; set; }

        /// <summary>
        /// maturityDate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturityDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? MaturityDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanBalanceAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 LoanBalanceAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanOnBalanceAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 LoanOnBalanceAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanOffBalanceAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 LoanOffBalanceAmount { get; set; }

        /// <summary>
        /// noOfDaysPastDue
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("noOfDaysPastDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? NoOfDaysPastDue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAmountPastDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 LoanAmountPastDue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("exposureAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 ExposureAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("installmentAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 InstallmentAmount { get; set; }

        /// <summary>
        /// isSecured
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isSecured")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? IsSecured { get; set; }

    }

    /// <summary>
    /// RequestedKBGroupExposureItem
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RequestedKBGroupExposureItem
    {
        /// <summary>
        /// riskBusinessCaseId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskBusinessCaseIdMp { get; set; }

        /// <summary>
        /// loanType
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanType { get; set; }

        /// <summary>
        /// loanTypeCategory
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanTypeCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanTypeCategory { get; set; }

        /// <summary>
        /// customerRoleCode
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerRoleCodeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int CustomerRoleCodeMp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 LoanAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("installmentAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 InstallmentAmount { get; set; }

        /// <summary>
        /// isSecured
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isSecured")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? IsSecured { get; set; }

        /// <summary>
        /// statusCode
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("statusCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string StatusCode { get; set; }

    }

    /// <summary>
    /// ExistingCBCBExposureItem
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExistingCBCBExposureItem
    {

        [System.Text.Json.Serialization.JsonPropertyName("cbcbContractIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CompanyId CbcbContractIdMp { get; set; }

        /// <summary>
        /// customerRoleCode
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerRoleCodeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int CustomerRoleCodeMp { get; set; }

        /// <summary>
        /// loanType
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanType { get; set; }

        /// <summary>
        /// loanTypeCategory
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanTypeCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanTypeCategory { get; set; }

        /// <summary>
        /// maturityDate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturityDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? MaturityDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 LoanAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("installmentAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 InstallmentAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("exposureAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 ExposureAmount { get; set; }

        /// <summary>
        /// contractDate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contractDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? ContractDate { get; set; }

        /// <summary>
        /// cbcbDataLastUpdate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cbcbDataLastUpdate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? CbcbDataLastUpdate { get; set; }

    }

    /// <summary>
    /// RequestedCBCBExposureItem
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RequestedCBCBExposureItem
    {

        [System.Text.Json.Serialization.JsonPropertyName("cbcbContractIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CompanyId CbcbContractIdMp { get; set; }

        /// <summary>
        /// customerRoleCode
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerRoleCodeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int CustomerRoleCodeMp { get; set; }

        /// <summary>
        /// loanType
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanType { get; set; }

        /// <summary>
        /// loanTypeCategory
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanTypeCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanTypeCategory { get; set; }

        /// <summary>
        /// maturityDate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("maturityDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? MaturityDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 LoanAmount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("installmentAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 InstallmentAmount { get; set; }

        /// <summary>
        /// cbcbDataLastUpdate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cbcbDataLastUpdate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? CbcbDataLastUpdate { get; set; }

    }

    /// <summary>
    /// LoanApplicationCounterparty
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCounterparty
    {
        /// <summary>
        /// loanApplicationCounterpartyId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCounterpartyId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? LoanApplicationCounterpartyId { get; set; }

        /// <summary>
        /// customerId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string CustomerIdMp { get; set; }

        /// <summary>
        /// roleCode
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("roleCodeMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int RoleCodeMp { get; set; }

        /// <summary>
        /// cbcbRegiterCalled
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cbcbRegisterCalled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? CbcbRegisterCalled { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cbcbReportIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CompanyId CbcbReportIdMp { get; set; }

        /// <summary>
        /// existingKBGroupNaturalPersonExposureItem
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("existingKBGroupNaturalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<ExistingKBGroupExposureItem> ExistingKBGroupNaturalPersonExposureItem { get; set; }

        /// <summary>
        /// existingKBGroupJuridicalPersonExposureItem
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("existingKBGroupJuridicalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<ExistingKBGroupExposureItem> ExistingKBGroupJuridicalPersonExposureItem { get; set; }

        /// <summary>
        /// requestedKBGroupNaturalPersonExposureItem
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestedKBGroupNaturalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<RequestedKBGroupExposureItem> RequestedKBGroupNaturalPersonExposureItem { get; set; }

        /// <summary>
        /// requestedKBGroupJuridicalPersonExposureItem
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestedKBGroupJuridicalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<RequestedKBGroupExposureItem> RequestedKBGroupJuridicalPersonExposureItem { get; set; }

        /// <summary>
        /// existingCBCBNaturalPersonExposureItem
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("existingCBCBNaturalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<ExistingCBCBExposureItem> ExistingCBCBNaturalPersonExposureItem { get; set; }

        /// <summary>
        /// existingCBCBJuridicalPersonExposureItem
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("existingCBCBJuridicalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<ExistingCBCBExposureItem> ExistingCBCBJuridicalPersonExposureItem { get; set; }

        /// <summary>
        /// requestedCBCBNaturalPersonExposureItem
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestedCBCBNaturalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<RequestedCBCBExposureItem> RequestedCBCBNaturalPersonExposureItem { get; set; }

        /// <summary>
        /// requestedCBCBJuridicalPersonExposureItem
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requestedCBCBJuridicalPersonExposureItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<RequestedCBCBExposureItem> RequestedCBCBJuridicalPersonExposureItem { get; set; }

    }

    /// <summary>
    /// ExposureSummaryForApproval
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExposureSummaryForApproval
    {

        [System.Text.Json.Serialization.JsonPropertyName("totalExistingExposureKB")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 TotalExistingExposureKB { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalExistingExposureKBNaturalPerson")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public Amount3 TotalExistingExposureKBNaturalPerson { get; set; }

    }

    /// <summary>
    /// LoanApplicationRelatedExposureResult
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationRelatedExposureResult
    {
        /// <summary>
        /// loanApplicationCounterparty
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationCounterparty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationCounterparty> LoanApplicationCounterparty { get; set; }

        /// <summary>
        /// exposureSummary
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("exposureSummary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<ExposureSummaryForApproval> ExposureSummary { get; set; }

    }

    /// <summary>
    /// LoanApplicationException
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationException
    {
        /// <summary>
        /// Arm.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("arm")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Arm { get; set; }

        /// <summary>
        /// ReasonCode.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("reasonCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ReasonCode { get; set; }

    }

    /// <summary>
    /// Assessment request
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AssessmentRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public SystemId LoanApplicationIdMp { get; set; }

        /// <summary>
        /// Identifikace verze dat žádosti, která jsou uložena v Loan Application.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationDataVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string LoanApplicationDataVersion { get; set; }

        /// <summary>
        /// IT Channel.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("itChannel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ItChannel { get; set; }

        /// <summary>
        /// IT Channel Previous.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("itChannelPrevious")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ItChannelPrevious { get; set; }

        /// <summary>
        /// Mód vyhodnocení daného případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("assessmentMode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string AssessmentMode { get; set; }

        /// <summary>
        /// Poskytovací procedura.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("grantingProcedureCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string GrantingProcedureCode { get; set; }

        /// <summary>
        /// Příznak, zdali je požadováno samoschválení.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("selfApprovalRequired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool SelfApprovalRequired { get; set; }

        /// <summary>
        /// Příznak, zdali je požadováno automatické schválení (systémem).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("systemApprovalRequired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool SystemApprovalRequired { get; set; }

        /// <summary>
        /// ExceptionHighestApprovalLevel
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("exceptionHighestApprovalLevel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ExceptionHighestApprovalLevel { get; set; }

        /// <summary>
        /// Parametry metodické vyjímky.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationException")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<LoanApplicationException> LoanApplicationException { get; set; }

    }

    /// <summary>
    /// RiskBusinessCaseCommand
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RiskBusinessCaseCommand
    {
        /// <summary>
        /// ID založeného požadavku
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("commandId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? CommandId { get; set; }

    }

    /// <summary>
    /// Risk Busines Case create
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationIdMp")]
        [System.ComponentModel.DataAnnotations.Required]
        public SystemId LoanApplicationIdMp { get; set; } = new SystemId();

        /// <summary>
        /// ID business procesu, v rámci kterého, Risk Business Case vzniká.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resourceProcessIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ResourceProcessIdMp { get; set; }

        /// <summary>
        /// Typ zdrojové aplikace (např. NOBY, STARBUILD)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("itChannel")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ItChannel { get; set; }

    }

    /// <summary>
    /// LoanApplicationCreate
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCreate
    {
        /// <summary>
        /// identifikátor obchodního případu v C4M (ResoureIdentifier.Id)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseIdMp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskBusinessCaseIdMp { get; set; }

    }

    /// <summary>
    /// LoanApplicationProduct
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationProduct3
    {
        /// <summary>
        /// kód produktového shluku (shluk jednoho produktu).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("product")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int Product { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanSoldProduct
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public CompanyId Id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanAgreement
    {
        /// <summary>
        /// Identifikátor obchodního případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("distributionChannel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string DistributionChannel { get; set; }

        /// <summary>
        /// Identifikátor obchodního případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("signatureType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string SignatureType { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CollateralAgreement
    {
        /// <summary>
        /// Identifikátor obchodního případu.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Id { get; set; }

    }

    /// <summary>
    /// CommitRequest
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CommitRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public SystemId LoanApplicationId { get; set; }

        /// <summary>
        /// IT Channel.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("itChannel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ItChannel { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanApplicationProduct")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanApplicationProduct3 LoanApplicationProduct { get; set; }

        /// <summary>
        /// riskBusinessCaseFinalResult.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseFinalResult")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string RiskBusinessCaseFinalResult { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanSoldProduct")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanSoldProduct LoanSoldProduct { get; set; }

        /// <summary>
        /// approvalLevel.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("approvalLevel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string ApprovalLevel { get; set; }

        /// <summary>
        /// Datum schválení.  Format: yyyy-MM-dd
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("approvalDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? ApprovalDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loanAgreement")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public LoanAgreement LoanAgreement { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("approver")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public HumanUser Approver { get; set; }

        /// <summary>
        /// collateralAgreements.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("collateralAgreements")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<CollateralAgreement> CollateralAgreements { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("humanUser")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public HumanUser HumanUser { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultReason2
    {
        /// <summary>
        /// kód důvodu nespočtení výsledku.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Code { get; set; }

        /// <summary>
        /// popis důvodu nespočtení výsledku.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("desc")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string Desc { get; set; }

    }

    /// <summary>
    /// Response
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanApplicationCommit
    {
        /// <summary>
        /// identifikátor obchodního případu v C4M
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("riskBusinessCaseId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? RiskBusinessCaseId { get; set; }

        /// <summary>
        /// Datum a čas odpovědi
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTime? Timestamp { get; set; }

        /// <summary>
        /// Status
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("operationResult")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string OperationResult { get; set; }

        /// <summary>
        /// Důvod(y) nespočetní výsledků bonity
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resultReasons")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.Collections.Generic.ICollection<ResultReason2> ResultReasons { get; set; }

    }



    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603