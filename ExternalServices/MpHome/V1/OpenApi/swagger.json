{
  "openapi": "3.0.1",
  "info": {
    "title": "MPDigi API",
    "description": "<a href='https://tfs.cleverlance.com/tfs/TFS2015_Collection/MPDigi/_git/MPDigi.Backend?path=%2F.ReadMe%2FAuthentication.md&version=GBmaster&_a=contents'>Autentifikácia</a>",
    "version": "1.1 FOMS"
  },
  "paths": {
    "/api/1.1/foms/Case/{caseId}/exists": {
      "get": {
        "tags": [
          "Case"
        ],
        "operationId": "FomsGetCaseExistsAsync",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Case/search": {
      "post": {
        "tags": [
          "Case"
        ],
        "operationId": "FomsSearchCaseAsync",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CaseSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CaseSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CaseSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CaseSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Loan/{loanId}": {
      "put": {
        "tags": [
          "Loan"
        ],
        "summary": "vytvoří/updatuje záznam o úvěru v KonsDB v tabulce dbo.uver na základě poskytnutých dat",
        "operationId": "FomsUpdateLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "Id uveru",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Loan Request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MortgageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MortgageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MortgageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MortgageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Loan"
        ],
        "summary": "Odstraní úvěr dle zadaného loanId.",
        "operationId": "FomsDeleteLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "Id Uveru",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Loan"
        ],
        "operationId": "FomsGetLoanDetail",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoanDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Loan/{loanId}/link/{partnerId}": {
      "put": {
        "tags": [
          "Loan"
        ],
        "summary": "vytvoří/updatuje vazbu mezi úvěrem a dlužníky/spoludlužníky dle zadaného partnerId a loanId",
        "operationId": "FomsUpdateLoanPartnerLink",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "Id Uveru",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id Partnera",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Vazba",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoanLinkRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanLinkRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanLinkRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoanLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Loan"
        ],
        "summary": "Odstraní vazbu mezi úvěrem a dlužníky/spoludlužníky dle zadaného partnerId a loanId.",
        "operationId": "FomsDeletePartnerLoanLink",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "Id Uveru",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id Partnera",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Loan/{loanId}/link": {
      "put": {
        "tags": [
          "Loan"
        ],
        "summary": "Vytvoří/updatuje vazbu mezi úvěrem a dlužníky/spoludlužníky dle zadaného partnerId a loanId",
        "operationId": "FomsUpdateLoanPartnerLinks",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoanLinksRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanLinksRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanLinksRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoanLinksRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FomsLoanRelationshipChangeResposeRelationshipChangesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FomsLoanRelationshipChangeResposeRelationshipChangesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FomsLoanRelationshipChangeResposeRelationshipChangesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Loan/{loanId}/conditions": {
      "get": {
        "tags": [
          "Loan"
        ],
        "operationId": "FomsGetLoanConditions",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoanConditionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanConditionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanConditionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Loan/{loanId}/retentionRefixation": {
      "get": {
        "tags": [
          "Loan"
        ],
        "operationId": "FomsGetLoanRetention",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoanRetentionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanRetentionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanRetentionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Loan/{loanId}/pcpInstId": {
      "post": {
        "tags": [
          "Loan"
        ],
        "operationId": "FomsUpdateLoanPcpInstId",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoanPcpInstIdRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanPcpInstIdRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanPcpInstIdRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoanPcpInstIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/{partnerId}": {
      "get": {
        "tags": [
          "Partner"
        ],
        "operationId": "FomsGetPartnerAsync",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Vytvoří/updatuje partnera v KonsDB na základě poskytnutých dat.",
        "operationId": "FomsUpdatePartner",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "PartnerId na vstupu je získáné ze StarBuild služby provolané před vytvářením partnera v KonsDB.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "The partner request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/{partnerId}/basicdata": {
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Aktualizuje základní data partnera v KonsDB na základě partnerId a poskytnutých dat",
        "operationId": "FomsUpdatePartner",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "The partner identifier.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "The partner request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerBaseRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerBaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerBaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerBaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/{partnerId}/contact": {
      "post": {
        "tags": [
          "Partner"
        ],
        "summary": "Vytvoření kontaktu partnera v KonsDB na základě poskytnutých dat.",
        "operationId": "FomsCreateContact",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id partnera.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Data pre kontakt.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/{partnerId}/contact/bulk": {
      "post": {
        "tags": [
          "Partner"
        ],
        "summary": "Změna kontaktů partnera v KonsDB na základě poskytnutých dat.",
        "operationId": "FomsBulkUpdateContact",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id partnera.",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Seznam kontaktů pro aktualizaci",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactRequest"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactChangesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactChangesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactChangesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/{partnerId}/contact/{contactId}": {
      "delete": {
        "tags": [
          "Partner"
        ],
        "summary": "Smazání kontaktu partnera v KonsDB na základě poskytnutého contactId a partnerId",
        "operationId": "FomsDeleteContact",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id partnera o jehož kontakt se jedná",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "Id kontaktu ke smazání",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/{partnerId}/address": {
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Updatuje adresu partnera v KonsDB na základě partnerId a poskytnutých dat adresy.",
        "operationId": "FomsUpdateAddress",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id partnera o jehož adresu se jedná",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Detail adresy",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/{partnerId}/identificationDocument": {
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Updatuje doklad partnera v KonsDB na základě partnerId.",
        "operationId": "FomsUpdateIdentificationDocument",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id partnera o jehož identifikační dokument se jedná",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Detail dokladu",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdentificationDocument"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentificationDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentificationDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdentificationDocument"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/{partnerId}/kbId": {
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Updatuje KB ID partnera v KonsDB na základě partnerId.",
        "operationId": "FomsUpdateKBId",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "description": "Id partnera",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "kbId",
            "in": "query",
            "description": "KB Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/link": {
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Vytvoří/updatuje vazbu mezi dvěmi partnery",
        "operationId": "FomsUpdatePartnerRelationLink",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerRelationshipList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerRelationshipList"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerRelationshipList"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerRelationshipList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FomsPartnerRelationshipChangeResposeRelationshipChangesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FomsPartnerRelationshipChangeResposeRelationshipChangesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FomsPartnerRelationshipChangeResposeRelationshipChangesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Partner"
        ],
        "summary": "Odstraní vazbu mezi dvěma partnery na základě ich ID.<br />\r\nSmazáním vazby je ukončena její platnostDo.",
        "operationId": "FomsDeletePartnerRelationLink",
        "parameters": [
          {
            "name": "partner1Id",
            "in": "query",
            "description": "Id partnera 1",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "partner2Id",
            "in": "query",
            "description": "Id partnera 2",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/search": {
      "post": {
        "tags": [
          "Partner"
        ],
        "operationId": "FomsSearchPartnersAsync",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartnerResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartnerResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartnerResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Partner/{partnerId}/exists": {
      "get": {
        "tags": [
          "Partner"
        ],
        "operationId": "FomsGetPartnerExistsAsync",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Savings/loan/{loanId}": {
      "put": {
        "tags": [
          "Savings"
        ],
        "summary": "vytvoří/updatuje záznam o úvěru v KonsDB v tabulce dbo.uver na základě poskytnutých dat",
        "operationId": "FomsUpdateLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "Id uveru",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Loan Request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoanRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoanRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/1.1/foms/Savings/{savingId}": {
      "put": {
        "tags": [
          "Savings"
        ],
        "summary": "vytvoří/updatuje záznam o spoření (v tabulce dbo.sporeni) v KonsDB na základě poskytnutých dat\r\na naváže spoření na konkrétního partnera dle zadaného partnerId( = vytvoří vazbu mezi partnerId a sporeniId)",
        "operationId": "FomsUpdateSavings",
        "parameters": [
          {
            "name": "savingId",
            "in": "path",
            "description": "Id Sporeni",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Saving Request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SavingRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SavingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SavingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelErrorWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionType": {
        "enum": [
          "Update",
          "Create",
          "Delete"
        ],
        "type": "string"
      },
      "AddressData": {
        "required": [
          "city",
          "landRegistryNumber",
          "postCode",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "street": {
            "maxLength": 30,
            "type": "string",
            "description": "Ulice",
            "nullable": true
          },
          "buildingIdentificationNumber": {
            "maxLength": 8,
            "type": "string",
            "description": "Orientační číslo budovy",
            "nullable": true
          },
          "landRegistryNumber": {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "Číslo popisné"
          },
          "postCode": {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "PSČ"
          },
          "city": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Obec"
          },
          "country": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Země - ISO code",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Adresa"
      },
      "AddressType": {
        "enum": [
          "Unknown",
          "Permanent",
          "Mailing"
        ],
        "type": "string"
      },
      "CaseSearchRequest": {
        "type": "object",
        "properties": {
          "contractNumber": {
            "type": "string",
            "nullable": true
          },
          "accountPrefix": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "pcpInstId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id zmenenej položky",
            "format": "int64"
          },
          "performedAction": {
            "$ref": "#/components/schemas/ActionType"
          }
        },
        "additionalProperties": false
      },
      "ClientRelationshipType": {
        "enum": [
          "Owner",
          "Parent",
          "Descendant",
          "Sibling",
          "HusbandOrWife",
          "LegalGuardian",
          "Ward",
          "ManagingDirector",
          "Organizations",
          "BusinessRelationship",
          "Other",
          "RegisteredPartner",
          "BusinessOwner",
          "OwnerOrganization",
          "Partners",
          "RegisteredPartnership"
        ],
        "type": "string"
      },
      "ContactChangesResponse": {
        "type": "object",
        "properties": {
          "contactList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeResponse"
            },
            "description": "List of updated contacts",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactData": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactType"
          },
          "value": {
            "minLength": 1,
            "type": "string",
            "description": "Hodnota kontaktu"
          },
          "primary": {
            "type": "boolean",
            "description": "`true` ak je kontakt primárny. Pri nezadaní je `false`."
          }
        },
        "additionalProperties": false
      },
      "ContactIdResponse": {
        "type": "object",
        "properties": {
          "contactId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ContactRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id kontaktu",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ContactType"
          },
          "value": {
            "type": "string",
            "description": "Hodnota kontaktu",
            "nullable": true
          },
          "primary": {
            "type": "boolean",
            "description": "`true` ak je kontakt primárny. Pri nezadaní je `false`."
          },
          "requestedAction": {
            "$ref": "#/components/schemas/ActionType"
          }
        },
        "additionalProperties": false,
        "description": "Informácie o kontakte / contact data"
      },
      "ContactResponse": {
        "required": [
          "id",
          "primary",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id kontaktu",
            "format": "int64",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/ContactType"
          },
          "value": {
            "minLength": 1,
            "type": "string",
            "description": "Hodnota kontaktu",
            "readOnly": true
          },
          "primary": {
            "type": "boolean",
            "description": "`true` ak je kontakt primárny. Pri nezadaní je `false`.",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactType": {
        "enum": [
          "Unknown",
          "Mobile",
          "BusinessMobile",
          "FixedHomeLine",
          "FixedBusinessLine",
          "Email",
          "MarketingEmail",
          "Fax",
          "HistoricalPhoneContact",
          "OtherPhoneContact",
          "CaasMobile",
          "CaasEmail",
          "DataBox"
        ],
        "type": "string"
      },
      "ContractRelationshipType": {
        "enum": [
          "NotSpecified",
          "Owner",
          "CoDebtor",
          "Accessor",
          "HusbandOrWife",
          "LegalRepresentative",
          "CollisionGuardian",
          "Guardian",
          "Guarantor",
          "GuarantorHusbandOrWife",
          "Intermediary",
          "ManagingDirector",
          "Child"
        ],
        "type": "string"
      },
      "Error": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code - optional",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Error message title",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Error description message",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ResultStatus"
          }
        },
        "additionalProperties": false
      },
      "EtlDataSourceType": {
        "enum": [
          "NotDefined",
          "StarBuildFullLoad",
          "StarBuildNTO",
          "FOMS",
          "EForms",
          "MPHome_eId",
          "MPHome_UnsecuredLoan",
          "StarBuildHF",
          "NDB"
        ],
        "type": "string"
      },
      "FomsActionType": {
        "enum": [
          "Update",
          "Create",
          "Delete",
          "NotFound",
          "PartnerNotFound",
          "Partner1NotFound",
          "Partner2NotFound",
          "SavingNotFound",
          "LoanNotFound"
        ],
        "type": "string"
      },
      "FomsContractRelationship": {
        "required": [
          "clientRelationshipType",
          "contractRelationshipType",
          "partnerId"
        ],
        "type": "object",
        "properties": {
          "partnerId": {
            "minimum": 1,
            "type": "integer",
            "description": "ID partnera",
            "format": "int64"
          },
          "contractRelationshipType": {
            "$ref": "#/components/schemas/ContractRelationshipType"
          },
          "clientRelationshipType": {
            "$ref": "#/components/schemas/ClientRelationshipType"
          },
          "oppositeClientRelationshipType": {
            "$ref": "#/components/schemas/ClientRelationshipType"
          }
        },
        "additionalProperties": false
      },
      "FomsLoanRelationshipChangeRespose": {
        "type": "object",
        "properties": {
          "contractRelationshipType": {
            "$ref": "#/components/schemas/ContractRelationshipType"
          },
          "partnerId": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "permormedAction": {
            "$ref": "#/components/schemas/FomsActionType"
          }
        },
        "additionalProperties": false
      },
      "FomsLoanRelationshipChangeResposeRelationshipChangesResponse": {
        "type": "object",
        "properties": {
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FomsLoanRelationshipChangeRespose"
            },
            "description": "List of updated relationships",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FomsPartnerRelationshipChangeRespose": {
        "required": [
          "partner1Id",
          "partner1To2RelationshipType",
          "partner2Id",
          "partner2To1RelationshipType",
          "performedAction"
        ],
        "type": "object",
        "properties": {
          "partner1Id": {
            "type": "integer",
            "description": "Id Partner 1",
            "format": "int64"
          },
          "partner2Id": {
            "type": "integer",
            "description": "Id Partner 2",
            "format": "int64"
          },
          "partner1To2RelationshipType": {
            "$ref": "#/components/schemas/ClientRelationshipType"
          },
          "partner2To1RelationshipType": {
            "$ref": "#/components/schemas/ClientRelationshipType"
          },
          "performedAction": {
            "$ref": "#/components/schemas/FomsActionType"
          }
        },
        "additionalProperties": false
      },
      "FomsPartnerRelationshipChangeResposeRelationshipChangesResponse": {
        "type": "object",
        "properties": {
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FomsPartnerRelationshipChangeRespose"
            },
            "description": "List of updated relationships",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenderEnum": {
        "enum": [
          "Unknown",
          "Male",
          "Female"
        ],
        "type": "string"
      },
      "IdentificationCardType": {
        "enum": [
          "Undefined",
          "IDCard",
          "Passport",
          "ResidencePermit",
          "Foreign"
        ],
        "type": "string"
      },
      "IdentificationDocument": {
        "required": [
          "issuedBy",
          "issuedOn",
          "issuingCountry",
          "number",
          "type",
          "validTo"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/IdentificationCardType"
          },
          "number": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Číslo dokladu"
          },
          "issuedBy": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Vydavatel dokladu"
          },
          "issuingCountry": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "ISO kod krajiny, která vydala doklad"
          },
          "issuedOn": {
            "type": "string",
            "description": "Datum vydání dokladu",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "description": "Datum platnosti dokladu",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Informace o dokladu"
      },
      "IdentificationDocumentSearch": {
        "required": [
          "issuingCountry",
          "number",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/IdentificationCardType"
          },
          "number": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Číslo dokladu"
          },
          "issuingCountry": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "ISO kod krajiny, která vydala doklad"
          }
        },
        "additionalProperties": false,
        "description": "Informace o dokladu"
      },
      "LoanCondition": {
        "type": "object",
        "properties": {
          "sequenceNumber": {
            "type": "integer",
            "description": "PoradoveCislo",
            "format": "int32"
          },
          "textNameForClient": {
            "type": "string",
            "description": "TextNazevProKlienta",
            "nullable": true
          },
          "textExplanatoryDocument": {
            "type": "string",
            "description": "TextVysvetlujiciDokument",
            "nullable": true
          },
          "textLoanContract": {
            "type": "string",
            "description": "TextDoUveroveSmlouvy",
            "nullable": true
          },
          "doneFlag": {
            "type": "integer",
            "description": "PriznakSplnena",
            "format": "int32",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "SplnitDo",
            "format": "date-time",
            "nullable": true
          },
          "contractTypeOrderLetter": {
            "type": "string",
            "description": "TypSmlouvaPoradiPismeno",
            "nullable": true
          },
          "contractType": {
            "type": "integer",
            "description": "TypSmlouvy",
            "format": "int32",
            "nullable": true
          },
          "phaseOrder": {
            "type": "integer",
            "description": "FazePoradi",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoanConditionPhase": {
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "description": "Poradi",
            "format": "int32"
          },
          "orderLetter": {
            "type": "string",
            "description": "PoradiPismeno",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Nazev",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoanConditionsResponse": {
        "type": "object",
        "properties": {
          "loanId": {
            "type": "integer",
            "format": "int64"
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanCondition"
            },
            "nullable": true
          },
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanConditionPhase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoanContractRelationship": {
        "required": [
          "contractRelationshipType",
          "partnerId"
        ],
        "type": "object",
        "properties": {
          "partnerId": {
            "minimum": 1,
            "type": "integer",
            "description": "ID partnera",
            "format": "int64"
          },
          "contractRelationshipType": {
            "$ref": "#/components/schemas/ContractRelationshipType"
          }
        },
        "additionalProperties": false
      },
      "LoanDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "partnerId": {
            "type": "integer",
            "format": "int64"
          },
          "productUvCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractNumber": {
            "type": "string",
            "nullable": true
          },
          "monthInstallment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "loanAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fixationPeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loanKindId": {
            "type": "integer",
            "format": "int32"
          },
          "estimated1stDrawDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "applicationSignDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "consultantId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "originalConsultantId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amountLeft": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "balanceTotal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "drawEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "interestFixationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstAnnuityInstallmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "estimatedDuePaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountPrefixNumber": {
            "type": "string",
            "nullable": true
          },
          "principal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalDebtOverdue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "receivableFeeAfter": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bankingDaysOverdue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rateFromOverdue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "installmentDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceBranchConsultantId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "directDebitAccountPrefix": {
            "type": "string",
            "nullable": true
          },
          "directDebitAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "directDebitAccountBank": {
            "type": "string",
            "nullable": true
          },
          "hfStatementFrequency": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hfStatementType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hfStatementZodb": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "statementEmail1": {
            "type": "string",
            "nullable": true
          },
          "statementEmail2": {
            "type": "string",
            "nullable": true
          },
          "inactive": {
            "type": "boolean"
          },
          "hfStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "finalDrawDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pcpInstId": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countrySubcategory": {
            "type": "string",
            "nullable": true
          },
          "realEstates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanRealEstate"
            },
            "nullable": true
          },
          "purposes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanPurpose"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoanLink": {
        "required": [
          "contractRelationshipType",
          "partnerId"
        ],
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "integer",
            "description": "Partner, kterého navazujeme",
            "format": "int64"
          },
          "contractRelationshipType": {
            "$ref": "#/components/schemas/ContractRelationshipType"
          }
        },
        "additionalProperties": false
      },
      "LoanLinkRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContractRelationshipType"
          }
        },
        "additionalProperties": false
      },
      "LoanLinksRequest": {
        "required": [
          "relationships"
        ],
        "type": "object",
        "properties": {
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanLink"
            }
          }
        },
        "additionalProperties": false
      },
      "LoanPcpInstIdRequest": {
        "type": "object",
        "properties": {
          "pcpInstId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoanPurpose": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Suma",
            "format": "double"
          },
          "loanPurposeId": {
            "type": "integer",
            "description": "ID účelu úvěru",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LoanRealEstate": {
        "type": "object",
        "properties": {
          "realEstateId": {
            "type": "integer",
            "format": "int64"
          },
          "purposeCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoanRefixation": {
        "required": [
          "effectiveDate",
          "fixationDate",
          "fixationPeriod",
          "interestRate",
          "interestRateValidTo",
          "nextType",
          "refixFutureMonthInstallment"
        ],
        "type": "object",
        "properties": {
          "interestRate": {
            "type": "number",
            "format": "double"
          },
          "fixationDate": {
            "type": "string",
            "format": "date-time"
          },
          "interestRateValidTo": {
            "type": "string",
            "format": "date-time"
          },
          "fixationPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextType": {
            "type": "string"
          },
          "refixFutureMonthInstallment": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LoanRequest": {
        "required": [
          "partnerId",
          "savingId"
        ],
        "type": "object",
        "properties": {
          "partnerId": {
            "minimum": 1,
            "type": "integer",
            "description": "ID hlavního dlužníka",
            "format": "int64"
          },
          "loanContractNumber": {
            "maxLength": 13,
            "type": "string",
            "description": "Číslo smlouvy úvěru",
            "nullable": true
          },
          "monthlyInstallment": {
            "type": "number",
            "description": "Výše mesicicni splátky",
            "format": "double",
            "nullable": true
          },
          "loanAmount": {
            "type": "number",
            "description": "VyseUveru",
            "format": "double",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "description": "Řádná sazba",
            "format": "double",
            "nullable": true
          },
          "fixationPeriod": {
            "type": "integer",
            "description": "Perioda fixace",
            "format": "int32",
            "nullable": true
          },
          "loanEventCode": {
            "type": "integer",
            "description": "AkceUveruId",
            "format": "int32",
            "nullable": true
          },
          "loanKind": {
            "type": "integer",
            "description": "DruhUveru",
            "format": "int32"
          },
          "expected1stDrawDate": {
            "type": "string",
            "description": "Předpokládané datum 1. čerpání",
            "format": "date-time",
            "nullable": true
          },
          "firstRequestSignDate": {
            "type": "string",
            "description": "Datum podpisu první žádosti",
            "format": "date-time",
            "nullable": true
          },
          "consultantId": {
            "type": "integer",
            "description": "IdPoradce (v33id)",
            "format": "int64",
            "nullable": true
          },
          "repaymentAccountNumber": {
            "type": "string",
            "description": "Účet pro splácení - číslo",
            "nullable": true
          },
          "repaymentAccountPrefix": {
            "type": "string",
            "description": "Účet pro splácení - předčíslí",
            "nullable": true
          },
          "repaymentAccountBank": {
            "type": "string",
            "description": "Účet pro splácení - banka",
            "nullable": true
          },
          "installmentDay": {
            "type": "integer",
            "description": "Den splácení",
            "format": "int32",
            "nullable": true
          },
          "loanPurposes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanPurpose"
            },
            "description": "Účely úvěru",
            "nullable": true
          },
          "productCodeUv": {
            "type": "integer",
            "description": "Typ produktu uv",
            "format": "int32",
            "nullable": true
          },
          "serviceBranchId": {
            "type": "integer",
            "description": "ID pobočky obsluhy (v33id)",
            "format": "int64",
            "nullable": true
          },
          "repaymentStartDate": {
            "type": "string",
            "description": "Počátek splácení",
            "format": "date-time",
            "nullable": true
          },
          "estimatedDuePaymentDate": {
            "type": "string",
            "description": "Datum předpokládané splatnosti",
            "format": "date-time",
            "nullable": true
          },
          "pcpInstId": {
            "type": "string",
            "description": "PcpInstId",
            "nullable": true
          },
          "firstAnnuityInstallmentDate": {
            "type": "string",
            "description": "Datum první anuitní splátky",
            "format": "date-time",
            "nullable": true
          },
          "loanType": {
            "$ref": "#/components/schemas/LoanType"
          },
          "savingId": {
            "minimum": 1,
            "type": "integer",
            "description": "ID spoření",
            "format": "int64"
          },
          "savingFromDate": {
            "type": "string",
            "description": "DatumDosporovaniOd",
            "format": "date-time",
            "nullable": true
          },
          "monthlySaving": {
            "type": "number",
            "description": "MesicniDosporovani",
            "format": "double",
            "nullable": true
          },
          "savingAccountNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "CisloSporicihoUctu",
            "nullable": true
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FomsContractRelationship"
            },
            "description": "definuje vztah úvěru k dalším osobám",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoanRetention": {
        "required": [
          "effectiveDate",
          "from",
          "interestRate",
          "monthInstallment",
          "to"
        ],
        "type": "object",
        "properties": {
          "interestRate": {
            "type": "number",
            "format": "double"
          },
          "monthInstallment": {
            "type": "number",
            "format": "double"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LoanRetentionResponse": {
        "type": "object",
        "properties": {
          "loanId": {
            "type": "integer",
            "format": "int64"
          },
          "refixation": {
            "$ref": "#/components/schemas/LoanRefixation"
          },
          "retention": {
            "$ref": "#/components/schemas/LoanRetention"
          }
        },
        "additionalProperties": false
      },
      "LoanType": {
        "enum": [
          "Unspecified",
          "PDU",
          "PKU",
          "KBMortgage"
        ],
        "type": "string"
      },
      "ModelErrorWrapper": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Obsahuje popis chýb, ktoré vznikli pri validácii vstupných údajov,\r\nkde ako `Key` do dictionary slúži názov nesprávne zadaného parametra\r\na `Value` je zoznam chybových hlášok."
      },
      "MortgageRequest": {
        "required": [
          "partnerId"
        ],
        "type": "object",
        "properties": {
          "partnerId": {
            "minimum": 1,
            "type": "integer",
            "description": "ID hlavního dlužníka",
            "format": "int64"
          },
          "loanContractNumber": {
            "maxLength": 13,
            "type": "string",
            "description": "Číslo smlouvy úvěru",
            "nullable": true
          },
          "monthlyInstallment": {
            "type": "number",
            "description": "Výše mesicicni splátky",
            "format": "double",
            "nullable": true
          },
          "loanAmount": {
            "type": "number",
            "description": "VyseUveru",
            "format": "double",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "description": "Řádná sazba",
            "format": "double",
            "nullable": true
          },
          "fixationPeriod": {
            "type": "integer",
            "description": "Perioda fixace",
            "format": "int32",
            "nullable": true
          },
          "loanEventCode": {
            "type": "integer",
            "description": "AkceUveruId",
            "format": "int32",
            "nullable": true
          },
          "loanKind": {
            "type": "integer",
            "description": "DruhUveru",
            "format": "int32"
          },
          "expected1stDrawDate": {
            "type": "string",
            "description": "Předpokládané datum 1. čerpání",
            "format": "date-time",
            "nullable": true
          },
          "firstRequestSignDate": {
            "type": "string",
            "description": "Datum podpisu první žádosti",
            "format": "date-time",
            "nullable": true
          },
          "consultantId": {
            "type": "integer",
            "description": "IdPoradce (v33id)",
            "format": "int64",
            "nullable": true
          },
          "repaymentAccountNumber": {
            "type": "string",
            "description": "Účet pro splácení - číslo",
            "nullable": true
          },
          "repaymentAccountPrefix": {
            "type": "string",
            "description": "Účet pro splácení - předčíslí",
            "nullable": true
          },
          "repaymentAccountBank": {
            "type": "string",
            "description": "Účet pro splácení - banka",
            "nullable": true
          },
          "installmentDay": {
            "type": "integer",
            "description": "Den splácení",
            "format": "int32",
            "nullable": true
          },
          "loanPurposes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanPurpose"
            },
            "description": "Účely úvěru",
            "nullable": true
          },
          "productCodeUv": {
            "type": "integer",
            "description": "Typ produktu uv",
            "format": "int32",
            "nullable": true
          },
          "serviceBranchId": {
            "type": "integer",
            "description": "ID pobočky obsluhy (v33id)",
            "format": "int64",
            "nullable": true
          },
          "repaymentStartDate": {
            "type": "string",
            "description": "Počátek splácení",
            "format": "date-time",
            "nullable": true
          },
          "estimatedDuePaymentDate": {
            "type": "string",
            "description": "Datum předpokládané splatnosti",
            "format": "date-time",
            "nullable": true
          },
          "pcpInstId": {
            "type": "string",
            "description": "PcpInstId",
            "nullable": true
          },
          "firstAnnuityInstallmentDate": {
            "type": "string",
            "description": "Datum první anuitní splátky",
            "format": "date-time",
            "nullable": true
          },
          "loanType": {
            "$ref": "#/components/schemas/LoanType"
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoanContractRelationship"
            },
            "description": "definuje vztah úvěru k dalším osobám",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner2PartnerRelationship": {
        "required": [
          "partner1Id",
          "partner1To2RelationshipType",
          "partner2Id"
        ],
        "type": "object",
        "properties": {
          "partner1Id": {
            "type": "integer",
            "description": "Id Partner 1",
            "format": "int64"
          },
          "partner2Id": {
            "type": "integer",
            "description": "Id Partner 2",
            "format": "int64"
          },
          "partner1To2RelationshipType": {
            "$ref": "#/components/schemas/ClientRelationshipType"
          },
          "partner2To1RelationshipType": {
            "$ref": "#/components/schemas/ClientRelationshipType"
          }
        },
        "additionalProperties": false
      },
      "PartnerBaseRequest": {
        "required": [
          "ecommunication",
          "gender",
          "lastname",
          "name",
          "pep",
          "resident",
          "sans",
          "usPerson"
        ],
        "type": "object",
        "properties": {
          "birthNumber": {
            "type": "string",
            "description": "Rodné číslo",
            "nullable": true
          },
          "ico": {
            "pattern": "\\d+",
            "type": "string",
            "description": "IČO",
            "nullable": true
          },
          "degreeBefore": {
            "type": "string",
            "description": "Titul před jménem.",
            "nullable": true
          },
          "degreeAfter": {
            "type": "string",
            "description": "Titul za jménem.",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Jméno"
          },
          "lastname": {
            "minLength": 1,
            "type": "string",
            "description": "Příjmení"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Datum narození",
            "format": "date-time",
            "nullable": true
          },
          "placeOfBirth": {
            "type": "string",
            "description": "Místo narození",
            "nullable": true
          },
          "nameJuridicalPerson": {
            "type": "string",
            "description": "Jméno právnické osoby",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/GenderEnum"
          },
          "nationality": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Státní příslušnost - ISO code",
            "nullable": true
          },
          "resident": {
            "type": "boolean",
            "description": "Rezident - `true` ak má partner bydlisko v CZ"
          },
          "usPerson": {
            "type": "boolean",
            "description": "`true` když se jedná o osobu ze Spojených států amerických"
          },
          "pep": {
            "type": "boolean",
            "description": "`true` když se jedná o politicky exponovanou osobu"
          },
          "sans": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this MPDigi.Web.Areas.Foms.ViewModels.PartnerBaseRequest is sans."
          },
          "ecommunication": {
            "type": "boolean",
            "description": "Povolena e-komunikace"
          },
          "kbId": {
            "type": "integer",
            "description": "KB party ID",
            "format": "int64",
            "nullable": true
          },
          "kycStatus": {
            "type": "integer",
            "description": "KYC Status",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartnerRelationshipList": {
        "required": [
          "relationships"
        ],
        "type": "object",
        "properties": {
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Partner2PartnerRelationship"
            }
          }
        },
        "additionalProperties": false
      },
      "PartnerRequest": {
        "required": [
          "ecommunication",
          "gender",
          "lastname",
          "name",
          "pep",
          "resident",
          "sans",
          "usPerson"
        ],
        "type": "object",
        "properties": {
          "birthNumber": {
            "type": "string",
            "description": "Rodné číslo",
            "nullable": true
          },
          "ico": {
            "pattern": "\\d+",
            "type": "string",
            "description": "IČO",
            "nullable": true
          },
          "degreeBefore": {
            "type": "string",
            "description": "Titul před jménem.",
            "nullable": true
          },
          "degreeAfter": {
            "type": "string",
            "description": "Titul za jménem.",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Jméno"
          },
          "lastname": {
            "minLength": 1,
            "type": "string",
            "description": "Příjmení"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Datum narození",
            "format": "date-time",
            "nullable": true
          },
          "placeOfBirth": {
            "type": "string",
            "description": "Místo narození",
            "nullable": true
          },
          "nameJuridicalPerson": {
            "type": "string",
            "description": "Jméno právnické osoby",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/GenderEnum"
          },
          "nationality": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Státní příslušnost - ISO code",
            "nullable": true
          },
          "resident": {
            "type": "boolean",
            "description": "Rezident - `true` ak má partner bydlisko v CZ"
          },
          "usPerson": {
            "type": "boolean",
            "description": "`true` když se jedná o osobu ze Spojených států amerických"
          },
          "pep": {
            "type": "boolean",
            "description": "`true` když se jedná o politicky exponovanou osobu"
          },
          "sans": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this MPDigi.Web.Areas.Foms.ViewModels.PartnerBaseRequest is sans."
          },
          "ecommunication": {
            "type": "boolean",
            "description": "Povolena e-komunikace"
          },
          "kbId": {
            "type": "integer",
            "description": "KB party ID",
            "format": "int64",
            "nullable": true
          },
          "kycStatus": {
            "type": "integer",
            "description": "KYC Status",
            "format": "int32",
            "nullable": true
          },
          "identificationDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentificationDocument"
            },
            "description": "Seznam dokladů",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressData"
            },
            "description": "Seznam adres",
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactRequest"
            },
            "description": "Sezname kontaktů",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartnerResponse": {
        "required": [
          "addresses",
          "contacts",
          "dataSource",
          "ecommunication",
          "gender",
          "identificationDocuments",
          "lastname",
          "name",
          "pep",
          "resident",
          "sans",
          "usPerson"
        ],
        "type": "object",
        "properties": {
          "birthNumber": {
            "type": "string",
            "description": "Rodné číslo",
            "nullable": true
          },
          "ico": {
            "pattern": "\\d+",
            "type": "string",
            "description": "IČO",
            "nullable": true
          },
          "degreeBefore": {
            "type": "string",
            "description": "Titul před jménem.",
            "nullable": true
          },
          "degreeAfter": {
            "type": "string",
            "description": "Titul za jménem.",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Jméno"
          },
          "lastname": {
            "minLength": 1,
            "type": "string",
            "description": "Příjmení"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Datum narození",
            "format": "date-time",
            "nullable": true
          },
          "placeOfBirth": {
            "type": "string",
            "description": "Místo narození",
            "nullable": true
          },
          "nameJuridicalPerson": {
            "type": "string",
            "description": "Jméno právnické osoby",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/GenderEnum"
          },
          "nationality": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Státní příslušnost - ISO code",
            "nullable": true
          },
          "resident": {
            "type": "boolean",
            "description": "Rezident - `true` ak má partner bydlisko v CZ"
          },
          "usPerson": {
            "type": "boolean",
            "description": "`true` když se jedná o osobu ze Spojených států amerických"
          },
          "pep": {
            "type": "boolean",
            "description": "`true` když se jedná o politicky exponovanou osobu"
          },
          "sans": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this MPDigi.Web.Areas.Foms.ViewModels.PartnerBaseRequest is sans."
          },
          "ecommunication": {
            "type": "boolean",
            "description": "Povolena e-komunikace"
          },
          "kbId": {
            "type": "integer",
            "description": "KB party ID",
            "format": "int64",
            "nullable": true
          },
          "kycStatus": {
            "type": "integer",
            "description": "KYC Status",
            "format": "int32",
            "nullable": true
          },
          "dataSource": {
            "$ref": "#/components/schemas/EtlDataSourceType"
          },
          "identificationDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentificationDocument"
            },
            "description": "Seznam dokladů"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressData"
            },
            "description": "Seznam adres"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponse"
            },
            "description": "Seznam kontaktů"
          }
        },
        "additionalProperties": false
      },
      "PartnerSearchRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Jméno",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Příjmení",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Datum narození",
            "format": "date-time",
            "nullable": true
          },
          "birthNumber": {
            "type": "string",
            "description": "Rodné číslo",
            "nullable": true
          },
          "identificationDocument": {
            "$ref": "#/components/schemas/IdentificationDocumentSearch"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ResultStatus": {
        "enum": [
          "OK",
          "Warning",
          "Error"
        ],
        "type": "string"
      },
      "SavingRequest": {
        "required": [
          "partnerId",
          "targetAmount"
        ],
        "type": "object",
        "properties": {
          "partnerId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "contractNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "CisloSmlouvy",
            "nullable": true
          },
          "targetAmount": {
            "type": "integer",
            "description": "Cílová částka",
            "format": "int64"
          },
          "accountPrefix": {
            "maxLength": 2,
            "type": "string",
            "description": "PredcisliUctu",
            "nullable": true
          },
          "accountNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "CisloUctu",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "description": "úroková sazba",
            "format": "double",
            "nullable": true
          },
          "interestBonus": {
            "type": "number",
            "description": "UrokovyBonus",
            "format": "double",
            "nullable": true
          },
          "monthDeposit": {
            "type": "number",
            "description": "měsíční vklad",
            "format": "double",
            "nullable": true
          },
          "stateBonusRequested": {
            "type": "boolean",
            "description": "měsíční vklad",
            "nullable": true
          },
          "consultantId": {
            "type": "integer",
            "description": "IdPoradce",
            "format": "int64",
            "nullable": true
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FomsContractRelationship"
            },
            "description": "definuje vztah spoření k dalším osobám",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}