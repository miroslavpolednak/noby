//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json.Serialization;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"
#pragma warning disable CS8765 // Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes).

namespace ExternalServices.MpHome.V1.Contracts
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ActionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Update")]
        Update = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Create")]
        Create = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Delete")]
        Delete = 2,

    }

    /// <summary>
    /// Adresa
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddressData
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AddressType Type { get; set; } = default!;

        /// <summary>
        /// Ulice
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("street")]
        public string? Street { get; set; } = default!;

        /// <summary>
        /// Orientační číslo budovy
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("buildingIdentificationNumber")]
        public string? BuildingIdentificationNumber { get; set; } = default!;

        /// <summary>
        /// Číslo popisné
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("landRegistryNumber")]
        public string LandRegistryNumber { get; set; } = default!;

        /// <summary>
        /// PSČ
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("postCode")]
        public string PostCode { get; set; } = default!;

        /// <summary>
        /// Obec
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]
        public string City { get; set; } = default!;

        /// <summary>
        /// Země - ISO code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("country")]
        public string? Country { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("countryId")]
        public int? CountryId { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AddressType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Unknown")]
        Unknown = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Permanent")]
        Permanent = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Mailing")]
        Mailing = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CaseSearchRequest
    {
        /// <summary>
        /// Číslo smlouvy
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contractNumber")]
        public string? ContractNumber { get; set; } = default!;

        /// <summary>
        /// Předčíslí účtu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountPrefix")]
        public string? AccountPrefix { get; set; } = default!;

        /// <summary>
        /// Číslo účtu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        public string? AccountNumber { get; set; } = default!;

        /// <summary>
        /// PcpInstId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("pcpInstId")]
        public string? PcpInstId { get; set; } = default!;

        /// <summary>
        /// Jméno
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstName")]
        public string? FirstName { get; set; } = default!;

        /// <summary>
        /// Příjmení
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lastName")]
        public string? LastName { get; set; } = default!;

        /// <summary>
        /// Rodné číslo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identificationNumber")]
        public string? IdentificationNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long? PartnerId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("kbId")]
        public long? KbId { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CaseSearchResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("caseId")]
        public long CaseId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("state")]
        public int? State { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("contractRelationshipTypeId")]
        public int? ContractRelationshipTypeId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("productTypeId")]
        public int? ProductTypeId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("targetAmount")]
        public double? TargetAmount { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("contractNumber")]
        public string? ContractNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long? PartnerId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("isLoan")]
        public bool IsLoan { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("pcpInstId")]
        public string? PcpInstId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("accountPrefix")]
        public string? AccountPrefix { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        public string? AccountNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("kbId")]
        public long? KbId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("firstName")]
        public string? FirstName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("lastName")]
        public string? LastName { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("identificationNumber")]
        public string? IdentificationNumber { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChangeResponse
    {
        /// <summary>
        /// Id zmenenej položky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public long Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("performedAction")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ActionType PerformedAction { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ClientRelationshipType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Owner")]
        Owner = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Parent")]
        Parent = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Descendant")]
        Descendant = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Sibling")]
        Sibling = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"HusbandOrWife")]
        HusbandOrWife = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"LegalGuardian")]
        LegalGuardian = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Ward")]
        Ward = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"ManagingDirector")]
        ManagingDirector = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"Organizations")]
        Organizations = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"BusinessRelationship")]
        BusinessRelationship = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"Other")]
        Other = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"RegisteredPartner")]
        RegisteredPartner = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"BusinessOwner")]
        BusinessOwner = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"OwnerOrganization")]
        OwnerOrganization = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"Partners")]
        Partners = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"RegisteredPartnership")]
        RegisteredPartnership = 15,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ContactChangesResponse
    {
        /// <summary>
        /// List of updated contacts
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contactList")]
        public List<ChangeResponse>? ContactList { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ContactData
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContactType Type { get; set; } = default!;

        /// <summary>
        /// Hodnota kontaktu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string Value { get; set; } = default!;

        /// <summary>
        /// `true` ak je kontakt primárny. Pri nezadaní je `false`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("primary")]
        public bool Primary { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ContactIdResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("contactId")]
        public long ContactId { get; set; } = default!;

    }

    /// <summary>
    /// Informácie o kontakte / contact data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ContactRequest
    {
        /// <summary>
        /// Id kontaktu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public long? Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContactType Type { get; set; } = default!;

        /// <summary>
        /// Hodnota kontaktu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string? Value { get; set; } = default!;

        /// <summary>
        /// `true` ak je kontakt primárny. Pri nezadaní je `false`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("primary")]
        public bool Primary { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("requestedAction")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ActionType RequestedAction { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ContactResponse
    {
        /// <summary>
        /// Id kontaktu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public long Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContactType Type { get; set; } = default!;

        /// <summary>
        /// Hodnota kontaktu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string Value { get; set; } = default!;

        /// <summary>
        /// `true` ak je kontakt primárny. Pri nezadaní je `false`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("primary")]
        public bool Primary { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ContactType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Unknown")]
        Unknown = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Mobile")]
        Mobile = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"BusinessMobile")]
        BusinessMobile = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"FixedHomeLine")]
        FixedHomeLine = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"FixedBusinessLine")]
        FixedBusinessLine = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Email")]
        Email = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"MarketingEmail")]
        MarketingEmail = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"Fax")]
        Fax = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"HistoricalPhoneContact")]
        HistoricalPhoneContact = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"OtherPhoneContact")]
        OtherPhoneContact = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"CaasMobile")]
        CaasMobile = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"CaasEmail")]
        CaasEmail = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"DataBox")]
        DataBox = 12,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ContractRelationshipType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NotSpecified")]
        NotSpecified = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Owner")]
        Owner = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"CoDebtor")]
        CoDebtor = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Accessor")]
        Accessor = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"HusbandOrWife")]
        HusbandOrWife = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"LegalRepresentative")]
        LegalRepresentative = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"CollisionGuardian")]
        CollisionGuardian = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"Guardian")]
        Guardian = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"Guarantor")]
        Guarantor = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"GuarantorHusbandOrWife")]
        GuarantorHusbandOrWife = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"Intermediary")]
        Intermediary = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"ManagingDirector")]
        ManagingDirector = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"Child")]
        Child = 12,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error
    {
        /// <summary>
        /// Error code - optional
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; } = default!;

        /// <summary>
        /// Error message title
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string? Title { get; set; } = default!;

        /// <summary>
        /// Error description message
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ResultStatus Status { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum EtlDataSourceType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NotDefined")]
        NotDefined = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"StarBuildFullLoad")]
        StarBuildFullLoad = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"StarBuildNTO")]
        StarBuildNTO = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"FOMS")]
        FOMS = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"EForms")]
        EForms = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"MPHome_eId")]
        MPHome_eId = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"MPHome_UnsecuredLoan")]
        MPHome_UnsecuredLoan = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"StarBuildHF")]
        StarBuildHF = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"NDB")]
        NDB = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum FomsActionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Update")]
        Update = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Create")]
        Create = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Delete")]
        Delete = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"NotFound")]
        NotFound = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PartnerNotFound")]
        PartnerNotFound = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Partner1NotFound")]
        Partner1NotFound = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Partner2NotFound")]
        Partner2NotFound = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"SavingNotFound")]
        SavingNotFound = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"LoanNotFound")]
        LoanNotFound = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FomsContractRelationship
    {
        /// <summary>
        /// ID partnera
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long PartnerId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("contractRelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContractRelationshipType ContractRelationshipType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("clientRelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ClientRelationshipType ClientRelationshipType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("oppositeClientRelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ClientRelationshipType OppositeClientRelationshipType { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FomsLoanRelationshipChangeRespose
    {

        [System.Text.Json.Serialization.JsonPropertyName("contractRelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContractRelationshipType ContractRelationshipType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long PartnerId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("permormedAction")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public FomsActionType PermormedAction { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FomsLoanRelationshipChangeResposeRelationshipChangesResponse
    {
        /// <summary>
        /// List of updated relationships
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationships")]
        public List<FomsLoanRelationshipChangeRespose>? Relationships { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FomsPartnerRelationshipChangeRespose
    {
        /// <summary>
        /// Id Partner 1
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partner1Id")]
        public long Partner1Id { get; set; } = default!;

        /// <summary>
        /// Id Partner 2
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partner2Id")]
        public long Partner2Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partner1To2RelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ClientRelationshipType Partner1To2RelationshipType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partner2To1RelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ClientRelationshipType Partner2To1RelationshipType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("performedAction")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public FomsActionType PerformedAction { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FomsPartnerRelationshipChangeResposeRelationshipChangesResponse
    {
        /// <summary>
        /// List of updated relationships
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationships")]
        public List<FomsPartnerRelationshipChangeRespose>? Relationships { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GenderEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Unknown")]
        Unknown = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Male")]
        Male = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Female")]
        Female = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum IdentificationCardType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Undefined")]
        Undefined = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"IDCard")]
        IDCard = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Passport")]
        Passport = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"ResidencePermit")]
        ResidencePermit = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Foreign")]
        Foreign = 4,

    }

    /// <summary>
    /// Informace o dokladu
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IdentificationDocument
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IdentificationCardType Type { get; set; } = default!;

        /// <summary>
        /// Číslo dokladu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("number")]
        public string Number { get; set; } = default!;

        /// <summary>
        /// Vydavatel dokladu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuedBy")]
        public string IssuedBy { get; set; } = default!;

        /// <summary>
        /// ISO kod krajiny, která vydala doklad
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuingCountry")]
        public string IssuingCountry { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("issuingCountryId")]
        public int IssuingCountryId { get; set; } = default!;

        /// <summary>
        /// Datum vydání dokladu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuedOn")]
        public System.DateTime IssuedOn { get; set; } = default!;

        /// <summary>
        /// Datum platnosti dokladu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validTo")]
        public System.DateTime ValidTo { get; set; } = default!;

    }

    /// <summary>
    /// Informace o dokladu
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IdentificationDocumentSearch
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public IdentificationCardType Type { get; set; } = default!;

        /// <summary>
        /// Číslo dokladu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("number")]
        public string? Number { get; set; } = default!;

        /// <summary>
        /// ID země, která vydala doklad
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("issuingCountryId")]
        public int? IssuingCountryId { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanCondition
    {
        /// <summary>
        /// PoradoveCislo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sequenceNumber")]
        public int SequenceNumber { get; set; } = default!;

        /// <summary>
        /// TextNazevProKlienta
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("textNameForClient")]
        public string? TextNameForClient { get; set; } = default!;

        /// <summary>
        /// TextVysvetlujiciDokument
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("textExplanatoryDocument")]
        public string? TextExplanatoryDocument { get; set; } = default!;

        /// <summary>
        /// TextDoUveroveSmlouvy
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("textLoanContract")]
        public string? TextLoanContract { get; set; } = default!;

        /// <summary>
        /// PriznakSplnena
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("doneFlag")]
        public int? DoneFlag { get; set; } = default!;

        /// <summary>
        /// SplnitDo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dueDate")]
        public System.DateTime? DueDate { get; set; } = default!;

        /// <summary>
        /// TypSmlouvaPoradiPismeno
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contractTypeOrderLetter")]
        public string? ContractTypeOrderLetter { get; set; } = default!;

        /// <summary>
        /// TypSmlouvy
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contractType")]
        public int? ContractType { get; set; } = default!;

        /// <summary>
        /// FazePoradi
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("phaseOrder")]
        public int? PhaseOrder { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanConditionPhase
    {
        /// <summary>
        /// Poradi
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("order")]
        public int Order { get; set; } = default!;

        /// <summary>
        /// PoradiPismeno
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("orderLetter")]
        public string? OrderLetter { get; set; } = default!;

        /// <summary>
        /// Nazev
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanConditionsResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("loanId")]
        public long LoanId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("conditions")]
        public List<LoanCondition>? Conditions { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("phases")]
        public List<LoanConditionPhase>? Phases { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanContractRelationship
    {
        /// <summary>
        /// ID partnera
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long PartnerId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("contractRelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContractRelationshipType ContractRelationshipType { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanDetail
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public long Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long? PartnerId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("productUvCode")]
        public int? ProductUvCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("contractNumber")]
        public string? ContractNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("monthInstallment")]
        public double? MonthInstallment { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]
        public double? LoanAmount { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]
        public double? InterestRate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("fixationPeriod")]
        public int? FixationPeriod { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loanKindId")]
        public int LoanKindId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("estimated1stDrawDate")]
        public System.DateTime? Estimated1stDrawDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("applicationSignDate")]
        public System.DateTime? ApplicationSignDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("consultantId")]
        public long? ConsultantId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("originalConsultantId")]
        public long? OriginalConsultantId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("amountLeft")]
        public double? AmountLeft { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("balanceTotal")]
        public double? BalanceTotal { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("drawEndDate")]
        public System.DateTime? DrawEndDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("contractDate")]
        public System.DateTime? ContractDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("interestFixationDate")]
        public System.DateTime? InterestFixationDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("firstAnnuityInstallmentDate")]
        public System.DateTime? FirstAnnuityInstallmentDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("estimatedDuePaymentDate")]
        public System.DateTime? EstimatedDuePaymentDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        public string? AccountNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("accountPrefixNumber")]
        public string? AccountPrefixNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("principal")]
        public double? Principal { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("totalDebtOverdue")]
        public double? TotalDebtOverdue { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("receivableFeeAfter")]
        public double? ReceivableFeeAfter { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("bankingDaysOverdue")]
        public int? BankingDaysOverdue { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("rateFromOverdue")]
        public double? RateFromOverdue { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("installmentDay")]
        public int? InstallmentDay { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("serviceBranchConsultantId")]
        public long? ServiceBranchConsultantId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("directDebitAccountPrefix")]
        public string? DirectDebitAccountPrefix { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("directDebitAccountNumber")]
        public string? DirectDebitAccountNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("directDebitAccountBank")]
        public string? DirectDebitAccountBank { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("hfStatementFrequency")]
        public int? HfStatementFrequency { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("hfStatementType")]
        public int? HfStatementType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("hfStatementZodb")]
        public int? HfStatementZodb { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("statementEmail1")]
        public string? StatementEmail1 { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("statementEmail2")]
        public string? StatementEmail2 { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("inactive")]
        public bool Inactive { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("hfStatus")]
        public int? HfStatus { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("finalDrawDate")]
        public System.DateTime? FinalDrawDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("pcpInstId")]
        public string? PcpInstId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("realEstates")]
        public List<LoanRealEstate>? RealEstates { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("purposes")]
        public List<LoanPurpose>? Purposes { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("obligations")]
        public List<LoanObligation>? Obligations { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loanRelationships")]
        public List<LoanRelationship>? LoanRelationships { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanLink
    {
        /// <summary>
        /// Partner, kterého navazujeme
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long PartnerId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("contractRelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContractRelationshipType ContractRelationshipType { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanLinkRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContractRelationshipType Type { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanLinksRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("relationships")]
        public List<LoanLink> Relationships { get; set; } = new List<LoanLink>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanObligation
    {

        [System.Text.Json.Serialization.JsonPropertyName("obligationType")]
        public int ObligationType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loanPurposeInt")]
        public int LoanPurposeInt { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("amount")]
        public double Amount { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("creditor")]
        public string? Creditor { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("accountPrefix")]
        public string? AccountPrefix { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        public string? AccountNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]
        public string? BankCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("variableSymbol")]
        public string? VariableSymbol { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanPcpInstIdRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("pcpInstId")]
        public string? PcpInstId { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanPurpose
    {
        /// <summary>
        /// Suma
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]
        public double Amount { get; set; } = default!;

        /// <summary>
        /// ID účelu úvěru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanPurposeId")]
        public int LoanPurposeId { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanRealEstate
    {

        [System.Text.Json.Serialization.JsonPropertyName("realEstateId")]
        public long RealEstateId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("purposeCode")]
        public int? PurposeCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("typeCode")]
        public int? TypeCode { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("isSecured")]
        public bool IsSecured { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanRefixation
    {

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]
        public double InterestRate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("fixationDate")]
        public System.DateTime FixationDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("interestRateValidTo")]
        public System.DateTime InterestRateValidTo { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("fixationPeriod")]
        public int FixationPeriod { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("effectiveDate")]
        public System.DateTime EffectiveDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("nextType")]
        public string NextType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("refixFutureMonthInstallment")]
        public double RefixFutureMonthInstallment { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanRelationship
    {

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long PartnerId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("agent")]
        public bool? Agent { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("kycStatus")]
        public int? KycStatus { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("kbId")]
        public long? KbId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partnerRelationshipId")]
        public int PartnerRelationshipId { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanRequest
    {
        /// <summary>
        /// ID hlavního dlužníka
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long PartnerId { get; set; } = default!;

        /// <summary>
        /// Číslo smlouvy úvěru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanContractNumber")]
        public string? LoanContractNumber { get; set; } = default!;

        /// <summary>
        /// Výše mesicicni splátky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallment")]
        public double? MonthlyInstallment { get; set; } = default!;

        /// <summary>
        /// VyseUveru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]
        public double? LoanAmount { get; set; } = default!;

        /// <summary>
        /// Řádná sazba
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]
        public double? InterestRate { get; set; } = default!;

        /// <summary>
        /// Perioda fixace
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fixationPeriod")]
        public int? FixationPeriod { get; set; } = default!;

        /// <summary>
        /// AkceUveruId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanEventCode")]
        public int? LoanEventCode { get; set; } = default!;

        /// <summary>
        /// DruhUveru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanKind")]
        public int LoanKind { get; set; } = default!;

        /// <summary>
        /// Předpokládané datum 1. čerpání
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("expected1stDrawDate")]
        public System.DateTime? Expected1stDrawDate { get; set; } = default!;

        /// <summary>
        /// Datum podpisu první žádosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstRequestSignDate")]
        public System.DateTime? FirstRequestSignDate { get; set; } = default!;

        /// <summary>
        /// IdPoradce (v33id)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("consultantId")]
        public long? ConsultantId { get; set; } = default!;

        /// <summary>
        /// Účet pro splácení - číslo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentAccountNumber")]
        public string? RepaymentAccountNumber { get; set; } = default!;

        /// <summary>
        /// Účet pro splácení - předčíslí
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentAccountPrefix")]
        public string? RepaymentAccountPrefix { get; set; } = default!;

        /// <summary>
        /// Účet pro splácení - banka
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentAccountBank")]
        public string? RepaymentAccountBank { get; set; } = default!;

        /// <summary>
        /// Den splácení
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentDay")]
        public int? InstallmentDay { get; set; } = default!;

        /// <summary>
        /// Účely úvěru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanPurposes")]
        public List<LoanPurpose>? LoanPurposes { get; set; } = default!;

        /// <summary>
        /// Typ produktu uv
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productCodeUv")]
        public int? ProductCodeUv { get; set; } = default!;

        /// <summary>
        /// ID pobočky obsluhy (v33id)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("serviceBranchId")]
        public long? ServiceBranchId { get; set; } = default!;

        /// <summary>
        /// Počátek splácení
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentStartDate")]
        public System.DateTime? RepaymentStartDate { get; set; } = default!;

        /// <summary>
        /// Datum předpokládané splatnosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("estimatedDuePaymentDate")]
        public System.DateTime? EstimatedDuePaymentDate { get; set; } = default!;

        /// <summary>
        /// PcpInstId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("pcpInstId")]
        public string? PcpInstId { get; set; } = default!;

        /// <summary>
        /// Datum první anuitní splátky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstAnnuityInstallmentDate")]
        public System.DateTime? FirstAnnuityInstallmentDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanType LoanType { get; set; } = default!;

        /// <summary>
        /// ID spoření
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("savingId")]
        public long SavingId { get; set; } = default!;

        /// <summary>
        /// DatumDosporovaniOd
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("savingFromDate")]
        public System.DateTime? SavingFromDate { get; set; } = default!;

        /// <summary>
        /// MesicniDosporovani
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlySaving")]
        public double? MonthlySaving { get; set; } = default!;

        /// <summary>
        /// CisloSporicihoUctu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("savingAccountNumber")]
        public string? SavingAccountNumber { get; set; } = default!;

        /// <summary>
        /// definuje vztah úvěru k dalším osobám
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationships")]
        public List<FomsContractRelationship>? Relationships { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanRetention
    {

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]
        public double InterestRate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("monthInstallment")]
        public double MonthInstallment { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("from")]
        public System.DateTime From { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("to")]
        public System.DateTime To { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("effectiveDate")]
        public System.DateTime EffectiveDate { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoanRetentionResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("loanId")]
        public long LoanId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("refixation")]
        public LoanRefixation Refixation { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("retention")]
        public LoanRetention Retention { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum LoanType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Unspecified")]
        Unspecified = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PDU")]
        PDU = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PKU")]
        PKU = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"KBMortgage")]
        KBMortgage = 3,

    }

    /// <summary>
    /// Obsahuje popis chýb, ktoré vznikli pri validácii vstupných údajov,
    /// <br/>kde ako `Key` do dictionary slúži názov nesprávne zadaného parametra
    /// <br/>a `Value` je zoznam chybových hlášok.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelErrorWrapper
    {

        [System.Text.Json.Serialization.JsonPropertyName("errors")]
        public System.Collections.Generic.Dictionary<string, List<string>>? Errors { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public int? Status { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string? Title { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("traceId")]
        public string? TraceId { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MortgageRequest
    {
        /// <summary>
        /// ID hlavního dlužníka
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long PartnerId { get; set; } = default!;

        /// <summary>
        /// Číslo smlouvy úvěru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanContractNumber")]
        public string? LoanContractNumber { get; set; } = default!;

        /// <summary>
        /// Výše mesicicni splátky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthlyInstallment")]
        public double? MonthlyInstallment { get; set; } = default!;

        /// <summary>
        /// VyseUveru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]
        public double? LoanAmount { get; set; } = default!;

        /// <summary>
        /// Řádná sazba
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]
        public double? InterestRate { get; set; } = default!;

        /// <summary>
        /// Perioda fixace
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fixationPeriod")]
        public int? FixationPeriod { get; set; } = default!;

        /// <summary>
        /// AkceUveruId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanEventCode")]
        public int? LoanEventCode { get; set; } = default!;

        /// <summary>
        /// DruhUveru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanKind")]
        public int LoanKind { get; set; } = default!;

        /// <summary>
        /// Předpokládané datum 1. čerpání
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("expected1stDrawDate")]
        public System.DateTime? Expected1stDrawDate { get; set; } = default!;

        /// <summary>
        /// Datum podpisu první žádosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstRequestSignDate")]
        public System.DateTime? FirstRequestSignDate { get; set; } = default!;

        /// <summary>
        /// IdPoradce (v33id)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("consultantId")]
        public long? ConsultantId { get; set; } = default!;

        /// <summary>
        /// Účet pro splácení - číslo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentAccountNumber")]
        public string? RepaymentAccountNumber { get; set; } = default!;

        /// <summary>
        /// Účet pro splácení - předčíslí
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentAccountPrefix")]
        public string? RepaymentAccountPrefix { get; set; } = default!;

        /// <summary>
        /// Účet pro splácení - banka
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentAccountBank")]
        public string? RepaymentAccountBank { get; set; } = default!;

        /// <summary>
        /// Den splácení
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("installmentDay")]
        public int? InstallmentDay { get; set; } = default!;

        /// <summary>
        /// Účely úvěru
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("loanPurposes")]
        public List<LoanPurpose>? LoanPurposes { get; set; } = default!;

        /// <summary>
        /// Typ produktu uv
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productCodeUv")]
        public int? ProductCodeUv { get; set; } = default!;

        /// <summary>
        /// ID pobočky obsluhy (v33id)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("serviceBranchId")]
        public long? ServiceBranchId { get; set; } = default!;

        /// <summary>
        /// Počátek splácení
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("repaymentStartDate")]
        public System.DateTime? RepaymentStartDate { get; set; } = default!;

        /// <summary>
        /// Datum předpokládané splatnosti
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("estimatedDuePaymentDate")]
        public System.DateTime? EstimatedDuePaymentDate { get; set; } = default!;

        /// <summary>
        /// PcpInstId
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("pcpInstId")]
        public string? PcpInstId { get; set; } = default!;

        /// <summary>
        /// Datum první anuitní splátky
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("firstAnnuityInstallmentDate")]
        public System.DateTime? FirstAnnuityInstallmentDate { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("loanType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public LoanType LoanType { get; set; } = default!;

        /// <summary>
        /// definuje vztah úvěru k dalším osobám
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationships")]
        public List<LoanContractRelationship>? Relationships { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Partner2PartnerRelationship
    {
        /// <summary>
        /// Id Partner 1
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partner1Id")]
        public long Partner1Id { get; set; } = default!;

        /// <summary>
        /// Id Partner 2
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partner2Id")]
        public long Partner2Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partner1To2RelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ClientRelationshipType Partner1To2RelationshipType { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("partner2To1RelationshipType")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ClientRelationshipType Partner2To1RelationshipType { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PartnerBaseRequest
    {
        /// <summary>
        /// Rodné číslo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthNumber")]
        public string? BirthNumber { get; set; } = default!;

        /// <summary>
        /// IČO
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ico")]
        public string? Ico { get; set; } = default!;

        /// <summary>
        /// Titul před jménem.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("degreeBefore")]
        public string? DegreeBefore { get; set; } = default!;

        /// <summary>
        /// Titul za jménem.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("degreeAfter")]
        public string? DegreeAfter { get; set; } = default!;

        /// <summary>
        /// Jméno
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Příjmení
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lastname")]
        public string Lastname { get; set; } = default!;

        /// <summary>
        /// Datum narození
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dateOfBirth")]
        public System.DateTime? DateOfBirth { get; set; } = default!;

        /// <summary>
        /// Místo narození
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("placeOfBirth")]
        public string? PlaceOfBirth { get; set; } = default!;

        /// <summary>
        /// Jméno právnické osoby
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nameJuridicalPerson")]
        public string? NameJuridicalPerson { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("gender")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GenderEnum Gender { get; set; } = default!;

        /// <summary>
        /// Státní příslušnost - ISO code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nationality")]
        public string? Nationality { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("nationalityId")]
        public int? NationalityId { get; set; } = default!;

        /// <summary>
        /// Rezident - `true` ak má partner bydlisko v CZ
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resident")]
        public bool Resident { get; set; } = default!;

        /// <summary>
        /// `true` když se jedná o osobu ze Spojených států amerických
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("usPerson")]
        public bool UsPerson { get; set; } = default!;

        /// <summary>
        /// `true` když se jedná o politicky exponovanou osobu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("pep")]
        public bool Pep { get; set; } = default!;

        /// <summary>
        /// Gets or sets a value indicating whether this MPDigi.Web.Areas.Foms.ViewModels.PartnerBaseRequest is sans.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sans")]
        public bool Sans { get; set; } = default!;

        /// <summary>
        /// Povolena e-komunikace
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ecommunication")]
        public bool Ecommunication { get; set; } = default!;

        /// <summary>
        /// KB party ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("kbId")]
        public long? KbId { get; set; } = default!;

        /// <summary>
        /// KYC Status
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("kycStatus")]
        public int? KycStatus { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PartnerRelationshipList
    {

        [System.Text.Json.Serialization.JsonPropertyName("relationships")]
        public List<Partner2PartnerRelationship> Relationships { get; set; } = new List<Partner2PartnerRelationship>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PartnerRequest
    {
        /// <summary>
        /// Rodné číslo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthNumber")]
        public string? BirthNumber { get; set; } = default!;

        /// <summary>
        /// IČO
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ico")]
        public string? Ico { get; set; } = default!;

        /// <summary>
        /// Titul před jménem.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("degreeBefore")]
        public string? DegreeBefore { get; set; } = default!;

        /// <summary>
        /// Titul za jménem.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("degreeAfter")]
        public string? DegreeAfter { get; set; } = default!;

        /// <summary>
        /// Jméno
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Příjmení
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lastname")]
        public string Lastname { get; set; } = default!;

        /// <summary>
        /// Datum narození
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dateOfBirth")]
        public System.DateTime? DateOfBirth { get; set; } = default!;

        /// <summary>
        /// Místo narození
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("placeOfBirth")]
        public string? PlaceOfBirth { get; set; } = default!;

        /// <summary>
        /// Jméno právnické osoby
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nameJuridicalPerson")]
        public string? NameJuridicalPerson { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("gender")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GenderEnum Gender { get; set; } = default!;

        /// <summary>
        /// Státní příslušnost - ISO code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nationality")]
        public string? Nationality { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("nationalityId")]
        public int? NationalityId { get; set; } = default!;

        /// <summary>
        /// Rezident - `true` ak má partner bydlisko v CZ
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resident")]
        public bool Resident { get; set; } = default!;

        /// <summary>
        /// `true` když se jedná o osobu ze Spojených států amerických
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("usPerson")]
        public bool UsPerson { get; set; } = default!;

        /// <summary>
        /// `true` když se jedná o politicky exponovanou osobu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("pep")]
        public bool Pep { get; set; } = default!;

        /// <summary>
        /// Gets or sets a value indicating whether this MPDigi.Web.Areas.Foms.ViewModels.PartnerBaseRequest is sans.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sans")]
        public bool Sans { get; set; } = default!;

        /// <summary>
        /// Povolena e-komunikace
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ecommunication")]
        public bool Ecommunication { get; set; } = default!;

        /// <summary>
        /// KB party ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("kbId")]
        public long? KbId { get; set; } = default!;

        /// <summary>
        /// KYC Status
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("kycStatus")]
        public int? KycStatus { get; set; } = default!;

        /// <summary>
        /// Seznam dokladů
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identificationDocuments")]
        public List<IdentificationDocument>? IdentificationDocuments { get; set; } = default!;

        /// <summary>
        /// Seznam adres
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("addresses")]
        public List<AddressData>? Addresses { get; set; } = default!;

        /// <summary>
        /// Sezname kontaktů
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contacts")]
        public List<ContactRequest>? Contacts { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PartnerResponse
    {
        /// <summary>
        /// Rodné číslo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthNumber")]
        public string? BirthNumber { get; set; } = default!;

        /// <summary>
        /// IČO
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ico")]
        public string? Ico { get; set; } = default!;

        /// <summary>
        /// Titul před jménem.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("degreeBefore")]
        public string? DegreeBefore { get; set; } = default!;

        /// <summary>
        /// Titul za jménem.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("degreeAfter")]
        public string? DegreeAfter { get; set; } = default!;

        /// <summary>
        /// Jméno
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; } = default!;

        /// <summary>
        /// Příjmení
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lastname")]
        public string Lastname { get; set; } = default!;

        /// <summary>
        /// Datum narození
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dateOfBirth")]
        public System.DateTime? DateOfBirth { get; set; } = default!;

        /// <summary>
        /// Místo narození
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("placeOfBirth")]
        public string? PlaceOfBirth { get; set; } = default!;

        /// <summary>
        /// Jméno právnické osoby
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nameJuridicalPerson")]
        public string? NameJuridicalPerson { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("gender")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public GenderEnum Gender { get; set; } = default!;

        /// <summary>
        /// Státní příslušnost - ISO code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nationality")]
        public string? Nationality { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("nationalityId")]
        public int? NationalityId { get; set; } = default!;

        /// <summary>
        /// Rezident - `true` ak má partner bydlisko v CZ
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("resident")]
        public bool Resident { get; set; } = default!;

        /// <summary>
        /// `true` když se jedná o osobu ze Spojených států amerických
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("usPerson")]
        public bool UsPerson { get; set; } = default!;

        /// <summary>
        /// `true` když se jedná o politicky exponovanou osobu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("pep")]
        public bool Pep { get; set; } = default!;

        /// <summary>
        /// Gets or sets a value indicating whether this MPDigi.Web.Areas.Foms.ViewModels.PartnerBaseRequest is sans.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sans")]
        public bool Sans { get; set; } = default!;

        /// <summary>
        /// Povolena e-komunikace
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ecommunication")]
        public bool Ecommunication { get; set; } = default!;

        /// <summary>
        /// KB party ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("kbId")]
        public long? KbId { get; set; } = default!;

        /// <summary>
        /// KYC Status
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("kycStatus")]
        public int? KycStatus { get; set; } = default!;

        /// <summary>
        /// ID partnera
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public long Id { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("dataSource")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public EtlDataSourceType DataSource { get; set; } = default!;

        /// <summary>
        /// Seznam dokladů
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("identificationDocuments")]
        public List<IdentificationDocument> IdentificationDocuments { get; set; } = new List<IdentificationDocument>();

        /// <summary>
        /// Seznam adres
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("addresses")]
        public List<AddressData> Addresses { get; set; } = new List<AddressData>();

        /// <summary>
        /// Seznam kontaktů
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contacts")]
        public List<ContactResponse> Contacts { get; set; } = new List<ContactResponse>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PartnerSearchRequest
    {
        /// <summary>
        /// Jméno
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; set; } = default!;

        /// <summary>
        /// Příjmení
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lastName")]
        public string? LastName { get; set; } = default!;

        /// <summary>
        /// Datum narození
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dateOfBirth")]
        public System.DateTime? DateOfBirth { get; set; } = default!;

        /// <summary>
        /// Rodné číslo
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("birthNumber")]
        public string? BirthNumber { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("identificationDocument")]
        public IdentificationDocumentSearch IdentificationDocument { get; set; } = default!;

        /// <summary>
        /// Mobil
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mobile")]
        public string? Mobile { get; set; } = default!;

        /// <summary>
        /// Email
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; set; } = default!;

        /// <summary>
        /// Seznam ID partnerů
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("partnerIds")]
        public List<long>? PartnerIds { get; set; } = default!;

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProblemDetails
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string? Title { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public int? Status { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("detail")]
        public string? Detail { get; set; } = default!;

        [System.Text.Json.Serialization.JsonPropertyName("instance")]
        public string? Instance { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ResultStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Warning")]
        Warning = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Error")]
        Error = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.8.0 (NJsonSchema v11.0.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SavingRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]
        public long PartnerId { get; set; } = default!;

        /// <summary>
        /// CisloSmlouvy
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contractNumber")]
        public string? ContractNumber { get; set; } = default!;

        /// <summary>
        /// Cílová částka
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("targetAmount")]
        public long TargetAmount { get; set; } = default!;

        /// <summary>
        /// PredcisliUctu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountPrefix")]
        public string? AccountPrefix { get; set; } = default!;

        /// <summary>
        /// CisloUctu
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        public string? AccountNumber { get; set; } = default!;

        /// <summary>
        /// úroková sazba
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interestRate")]
        public double? InterestRate { get; set; } = default!;

        /// <summary>
        /// UrokovyBonus
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interestBonus")]
        public double? InterestBonus { get; set; } = default!;

        /// <summary>
        /// měsíční vklad
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("monthDeposit")]
        public double? MonthDeposit { get; set; } = default!;

        /// <summary>
        /// měsíční vklad
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("stateBonusRequested")]
        public bool? StateBonusRequested { get; set; } = default!;

        /// <summary>
        /// IdPoradce
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("consultantId")]
        public long? ConsultantId { get; set; } = default!;

        /// <summary>
        /// definuje vztah spoření k dalším osobám
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("relationships")]
        public List<FomsContractRelationship>? Relationships { get; set; } = default!;

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625