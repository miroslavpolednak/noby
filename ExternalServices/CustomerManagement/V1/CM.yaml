openapi: 3.0.1
info:
  description: 'Customer service, contains operations for getting basic customer data and search customers'
  title: CustomerService.v1
  version: 1.14.5
servers:
  - url: https://cm-dev.kb.cz/be-cm/api
    description: DEV environment
  - url: https://cm-fat.kb.cz/be-cm/api
    description: SIT environment
  - url: https://cm-uat.kb.cz/be-cm/api
    description: UAT environment
  - url: https://cm-edu.kb.cz/be-cm/api
    description: EDU environment
  - url: https://cm.kb.cz/be-cm/api
    description: Production environment
paths:
  /public/v1/customers/{customerId}/base-info:
    get:
      operationId: getCustomerBaseInfo
      tags:
        - CustomerService.v1
      summary: getCustomerBaseInfo
      description: "Operation returns customer base information with: party, primary address, contact address, primary identification document, primary email and phone."
      parameters:
        - name: customerId
          in: path
          description: Identifier of the customer whose base information will be returned (KBID - identifier of customer in Customer Management system)
          required: true
          schema:
            format: int64
            type: integer
        - name: showPrimaryAddress
          in: query
          description: flag indicating whether main address will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showPrimaryIdDocument
          in: query
          description: flag indicating whether main document will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showCustomerIdentification
          in: query
          description: flag indicating whether customer identification will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showContactAddress
          in: query
          description: flag indicating whether contact address will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showPrimaryPhone
          in: query
          description: flag indicating whether main phone will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showPrimaryEmail
          in: query
          description: flag indicating whether main email will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showSegment
          in: query
          description: flag indicating whether segment will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showPoliticallyExposed
          in: query
          description: flag indicating whether politically exposed flag will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showEsa
          in: query
          description: flag indicating whether ESA will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showNace
          in: query
          description: flag indicating whether NACE will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showInsurability
          in: query
          description: flag indicating whether Inusrability flag will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showFirstNameVocative
          in: query
          description: flag indicating whether first name vocative should be evalueted and returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showSurnameVocative
          in: query
          description: flag indicating whether surname vocative should be evalueted and returned
          required: false
          schema:
            type: boolean
            default: false
        - name: includeArchived
          in: query
          description: flag indicating whether archived customer will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: getAllPrimaryPhones
          in: query
          description: flag indicating whether all available types of primary phone should be returned. In order 5,1,3
          required: false
          schema:
            type: boolean
            default: false
        - name: showFatca
          in: query
          description: flag indicating whether Fatca will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showFinancialProfile
          in: query
          description: flag indicating whether Financial profile will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showHousing
          in: query
          description: flag indicating whether Housing will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showTurnovers
          in: query
          description: flag indicating whether Turnovers will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showEducation
          in: query
          description: flag indicating whether Education will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showEmployeesNumber
          in: query
          description: flag indicating whether Number of employees will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showEmployment
          in: query
          description: flag indicating whether Employment will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showTemporaryStay
          in: query
          description: flag indicating whether temporary stay address will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: requiredAddressFormats
          in: query
          description: Required address format. Multiple formats can be returned at the same time. If no format is defined, the address is returned in default format.
          required: false
          schema:
            $ref: '#/components/schemas/AddressFormats'
        - $ref: '#/components/parameters/X-B3-TraceId'
        - $ref: '#/components/parameters/X-KB-Party-Identity-In-Service'
        - $ref: '#/components/parameters/X-KB-Orig-System-Identity'
        - $ref: '#/components/parameters/X-KB-Caller-System-Identity'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBaseInfo'
          description: Customer base info entity
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Validation error - mostly invalid data in request is provided provided
        "401":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Authentication information is missing or is invalid
        "403":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: You are not authorized to run this operation
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Resource not found
        "500":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Unexpected error occured
  /public/v1/customers/base-info:
    post:
      operationId: getCustomersBaseInfo
      tags:
        - CustomerService.v1
      summary: getCustomersBaseInfo - for list of IDs
      description: "Operation returns customer base information with: party, primary address, contact address, primary identification document, primary email and phone."
      requestBody:
        description: List of required IDs
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
      parameters:
        - name: showPrimaryAddress
          in: query
          description: flag indicating whether main address will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showPrimaryIdDocument
          in: query
          description: flag indicating whether main document will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showCustomerIdentification
          in: query
          description: flag indicating whether customer identification will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showContactAddress
          in: query
          description: flag indicating whether contact address will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showPrimaryPhone
          in: query
          description: flag indicating whether main phone will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showPrimaryEmail
          in: query
          description: flag indicating whether main email will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showSegment
          in: query
          description: flag indicating whether segment will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showPoliticallyExposed
          in: query
          description: flag indicating whether politically exposed flag will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showEsa
          in: query
          description: flag indicating whether ESA will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showNace
          in: query
          description: flag indicating whether NACE will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showInsurability
          in: query
          description: flag indicating whether Inusrability flag will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showFirstNameVocative
          in: query
          description: flag indicating whether first name vocative should be evalueted and returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showSurnameVocative
          in: query
          description: flag indicating whether surname vocative should be evalueted and returned
          required: false
          schema:
            type: boolean
            default: false
        - name: includeArchived
          in: query
          description: flag indicating whether archived customers will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: getAllPrimaryPhones
          in: query
          description: flag indicating whether all available types of primary phone should be returned. In order 5,1,3
          required: false
          schema:
            type: boolean
            default: false
        - name: showFatca
          in: query
          description: flag indicating whether Fatca will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showFinancialProfile
          in: query
          description: flag indicating whether Financial profile will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showHousing
          in: query
          description: flag indicating whether Housing will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showTurnovers
          in: query
          description: flag indicating whether Turnovers will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showEducation
          in: query
          description: flag indicating whether Education will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showEmployeesNumber
          in: query
          description: flag indicating whether Number of employees will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showEmployment
          in: query
          description: flag indicating whether Employment will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showTemporaryStay
          in: query
          description: flag indicating whether temporary stay address will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: requiredAddressFormats
          in: query
          description: Required address format. Multiple formats can be returned at the same time. If no format is defined, the address is returned in default format.
          required: false
          schema:
            $ref: '#/components/schemas/AddressFormats'
        - $ref: '#/components/parameters/X-B3-TraceId'
        - $ref: '#/components/parameters/X-KB-Party-Identity-In-Service'
        - $ref: '#/components/parameters/X-KB-Orig-System-Identity'
        - $ref: '#/components/parameters/X-KB-Caller-System-Identity'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerBaseInfo'
          description: Base info for required customers
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Validation error - mostly invalid data in request is provided provided
        "401":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Authentication information is missing or is invalid
        "403":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: You are not authorized to run this operation
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Resource not found
        "500":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Unexpected error occured
  /public/v1/customers:
    get:
      operationId: searchCustomer
      tags:
        - CustomerService.v1
      summary: searchCustomer
      description: Operation search customers according input parameters
      parameters:
        - name: numberOfEntries
          description: Number of entries to return. When not specified or when is greater than 100 then 100 is applied.
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: customerId
          description: Customer's ID (KBID) filter - primary filter
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          description: "Surname/company name filter - primary filter. Surname or company name can be used with mask - at least 3 marks + * (example: Komer* for Komercni Banka)"
          in: query
          required: false
          schema:
            type: string
        - name: firstName
          description: "First name filter - can be used only as additional filter to surname for Natural Person. First name can be used with mask - at least 3 marks + *"
          in: query
          required: false
          schema:
            type: string
        - name: birthEstablishedDate
          description: Birth date/Established date filter, can be used only as additional filter with other filters
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: identifierValue
          description: Identifier value filter - primary filter
          in: query
          required: false
          schema:
            type: string
        - name: identifierTypeCode
          description: Identifier type filter, additional filter to identifierValue. When not specified then all identifier types are used.
          in: query
          required: false
          schema:
            type: string
        - name: idDocumentTypeCode
          description: Type of identification document. Can be used only with idDocumentNumber and idDocumentIssuingCountryCode.
          in: query
          required: false
          schema:
            type: string
        - name: idDocumentNumber
          description: Identification document number. Can be used only with idDocumentTypeCode and idDocumentIssuingCountryCode.
          in: query
          required: false
          schema:
            type: string
        - name: idDocumentIssuingCountryCode
          description: Identification document issuing country code. Can be used only with idDocumentTypeCode and idDocumentNumber.
          in: query
          required: false
          schema:
            type: string
        - name: email
          description: Email filter
          in: query
          required: false
          schema:
            type: string
        - name: phoneNumber
          description: Phone number filter
          in: query
          required: false
          schema:
            type: string
        - name: isInKbi
          description: "Flag indicating whether subject should or should not be in KBI. Possible variants:
                        <ul>
                          <li>parameter is not used - all subject are returned</li>
                          <li>true - only subjects in KBI are returned</li>
                          <li>false - only subjects not in KBI are returned</li>
                        </ul>"
          in: query
          required: false
          schema:
            type: boolean
        - name: legalStatusCode
          description: Legal status filter
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - P
                - E
                - B
          style: form
          explode: true
        - name: includeArchived
          in: query
          description: Flag indicating whether archived customers will be returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showSegment
          in: query
          description: Flag indicating whether segment (fixed and float) should be returnd in response
          required: false
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/X-B3-TraceId'
        - $ref: '#/components/parameters/X-KB-Party-Identity-In-Service'
        - $ref: '#/components/parameters/X-KB-Orig-System-Identity'
        - $ref: '#/components/parameters/X-KB-Caller-System-Identity'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSearchResult'
          description: Search result
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Validation error - mostly invalid data in request is provided provided
        "401":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Authentication information is missing or is invalid
        "403":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: You are not authorized to run this operation
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Resource not found
        "500":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Unexpected error occured
  /public/v1/customers/{customerId}/natural-person-personal-data:
    get:
      operationId: getNaturalPersonPersonalData
      tags:
        - CustomerService.v1
      summary: getNaturalPersonPersonalData
      description: "Operation returns basic personal data for natural person with vocative for first name and surname"
      parameters:
        - name: customerId
          in: path
          description: Identifier of the customer whose base information will be returned (KBID - identifier of customer in Customer Management system)
          required: true
          schema:
            format: int64
            type: integer
        - name: showFirstNameVocative
          in: query
          description: flag indicating whether first name vocative should be evalueted and returned
          required: false
          schema:
            type: boolean
            default: false
        - name: showSurnameVocative
          in: query
          description: flag indicating whether surname vocative should be evalueted and returned
          required: false
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/X-B3-TraceId'
        - $ref: '#/components/parameters/X-KB-Party-Identity-In-Service'
        - $ref: '#/components/parameters/X-KB-Orig-System-Identity'
        - $ref: '#/components/parameters/X-KB-Caller-System-Identity'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NaturalPersonPersonalData'
          description: Natural person personal data
        "400":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Validation error - mostly invalid data in request is provided provided
        "401":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Authentication information is missing or is invalid
        "403":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: You are not authorized to run this operation
        "404":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Resource not found
        "500":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          description: Unexpected error occured
components:
  schemas:
    CustomerBaseInfo:
      description: Customer base information entity - contains party, primary address, contact address, primary phone and email, customer segments and economic classifications.
      properties:
        customerId:
          type: integer
          format: int64
          description: Identifier of the customer
        party:
          $ref: '#/components/schemas/Party'
        primaryIdentificationDocument:
          $ref: '#/components/schemas/IdentificationDocument'
        customerIdentification:
          $ref: '#/components/schemas/CustomerIdentification'
        primaryAddress:
          $ref: '#/components/schemas/PrimaryAddress'
        contactAddress:
          $ref: '#/components/schemas/ContactAddress'
        temporaryStay:
          $ref: '#/components/schemas/TemporaryStayAddress'
        primaryEmail:
          $ref: '#/components/schemas/PrimaryEmail'
        primaryEmailConfirmed:
          $ref: '#/components/schemas/PrimaryEmailConfirmed'
        primaryPhone:
          $ref: '#/components/schemas/PrimaryPhone'
        primaryPhoneConfirmed:
            $ref: '#/components/schemas/PrimaryPhoneConfirmed'
        customerSegment:
          $ref: '#/components/schemas/CustomerSegment'
        fixedCustomerSegment:
          $ref: '#/components/schemas/CustomerSegment'
        isPoliticallyExposed:
          type: boolean
          description: |
            Flag indicating that customer is politically exposed. Only for Natural Person.
            If the value of the item is 'true', politicalExposition is also returned.
            If the value is not returned, the information about political exposition is not collected.
        politicalExposition:
          $ref: '#/components/schemas/PoliticalExposition'
        isLegallyIncapable:
          type: boolean
          description: Flag indicating that customer is legally incapable. Only for Natural Person
        isInsurable:
          type: boolean
          description: Flag indicating that customer is insurable
          deprecated: true
        esaCode:
          type: string
          description: Economic sector code according to ESA2010 as amended by the CNB - RDM codebook CB_ESAInstitutionalSectorCNB
          deprecated: true
        naceCode:
          type: string
          description: Code of economic activity according to the new classification of economic activities Only for Juridical Person - RDM codebook CB_NACECode
          deprecated: true
        lifecycleStatusCode:
          $ref: '#/components/schemas/LifecycleStatusEnum'
        fatca:
          $ref: '#/components/schemas/Fatca'
        kyc:
          $ref: '#/components/schemas/Kyc'
      required:
        - party
        - lifecycleStatusCode
      type: object
    Party:
      description: Abstract type of party. Real descendants are NaturalPerson, LegalPerson and Entrepreneur
      type: object
      discriminator:
        propertyName: objectType
      required:
        - objectType
        - legalStatus
        - customerIdentifiers
        - isInKbi
      properties:
        objectType:
          type: string
          enum:
            - LegalPerson
            - Entrepreneur
            - NaturalPerson
        isInKbi:
          type: boolean
          description: Flag indicating whether subject is in KBI system
        customerIdentifiers:
          type: array
          description: List of customer identifiers
          items:
            $ref: '#/components/schemas/CustomerIdentifier'
        legalStatus:
          type: string
          description: P - for Natural Person, E - for Entrepreneur, B - for Legal Person
          enum:
            - P
            - E
            - B
    LegalPerson:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          required:
            - name
            - nameKb
          properties:
            name:
              type: string
              description: Company name. Is filled with name from business register. When name from business register does not exists, KB custom search name is used instead.
              minLength: 1
              maxLength: 200
            businessRegisterName:
              type: string
              description: Company name. Name from business register.
              minLength: 1
              maxLength: 200
            nameKb:
              type: string
              description: Custom KB search name
              minLength: 1
              maxLength: 200
            establishedOn:
              type: string
              format: date
              description: Company established date
            legalForm:
              $ref: '#/components/schemas/JuridicalPersonLegalForm'
            czechIdentificationNumber:
              type: string
              description: Czech identification number
              minLength: 1
              maxLength: 30
      example:
        isInKbi: false
        legalStatus: B
        customerIdentifiers:
          - identifierValue: 45317054
            typeCode: CZ_ICO
          - identifierValue: KOMBCZPPXXX
            typeCode: BIC
        name: KOMERČNÍ BANKA A.S.
        establishedOn: 1992-03-05
        legalForm:
          code: 100
        czechIdentificationNumber: 45317054
      description: Party of typ Legal Person
    Entrepreneur:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          required:
            - name
            - nameKb
          properties:
            name:
              type: string
              description: Entrepreneur name. Is filled with name from business register. When name from business register does not exists, KB custom search name is used instead.
              minLength: 1
              maxLength: 200
            businessRegisterName:
              type: string
              description: Entrepreneur name. Name from business register.
              minLength: 1
              maxLength: 200
            nameKb:
              type: string
              description: Custom KB search name
              minLength: 1
              maxLength: 200
            establishedOn:
              type: string
              format: date
              description: Entrepreneur established date
            legalForm:
              $ref: '#/components/schemas/JuridicalPersonLegalForm'
            czechIdentificationNumber:
              type: string
              description: Czech identification number
              minLength: 1
              maxLength: 30
      example:
        isInKbi: false
        legalStatus: E
        customerIdentifiers:
          - identifierValue: 09254447
            typeCode: CZ_ICO
        namme: Prof. MUDr. Roman Prymula, CSc. Ph.D.
        establishedOn: 2020-06-17
        legalForm:
          code: 101
        czechIdentificationNumber: 09254447
      description: Party of typ Entrepreneur
    NaturalPerson:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          required:
            - firstName
            - surname
          properties:
            title:
              type: string
              description: Title before name, i.e. prof. Ing., gen. Ing.
              minLength: 1
              maxLength: 15
            firstName:
              type: string
              description: First name
              minLength: 1
              maxLength: 50
            surname:
              type: string
              description: Surname
              minLength: 1
              maxLength: 200
            birthDate:
              type: string
              format: date
              description: Date of birth
            birthName:
              type: string
              description: Birth surname
              minLength: 1
              maxLength: 100
            birthPlace:
              type: string
              description: Place of birth, i.e. Praque
              minLength: 1
              maxLength: 100
            birthCountryCode:
              type: string
              description: Land of birth - ISO 2 character code - RDM codebook CB_Country
              minLength: 2
              maxLength: 2
            citizenshipCodes:
              type: array
              description: List of customer citizenships
              items:
                type: string
                description: citizenship code - CB_Country
                minLength: 2
                maxLength: 2
            genderCode:
              type: string
              description: Gender. KB supports only two genders - MALE and FEMALE
              enum:
                - M
                - F
            legalCapacityRestriction:
              $ref: '#/components/schemas/LegalCapacityRestriction'
            czechBirthNumber:
              type: string
              description: Czech birth number
              example:
                7908205184
            firstNameVocative:
              type: string
              description: First name vocative
              minLength: 1
              maxLength: 50
            surnameVocative:
              type: string
              description: Surname vocative
              minLength: 1
              maxLength: 200
            deathDate:
              type: string
              format: date
              description: Date of death
            maritalStatusCode:
              type: string
              description: Marital status code, RDM codebook CB_MaritalStatus
              minLength: 1
              maxLength: 1
      example:
        isInKbi: false
        legalStatus: P
        customerIdentifiers:
          - identifierValue: 0005221898
            typeCode: CZ_RC
        title: Ing.
        firstName: Michal
        surname: Prouza
        birthDate: 2000-05-22
        birthPlace: Ostrava
        birthCountryCode: CZ
        citizenshipCode: CZ
        genderCode: M
        czechBirthNumber: 0005221898
        dateOfDeath: 2020-05-22
      description: Party type of Natural Person
    JuridicalPersonLegalForm:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Legal form code
          minLength: 1
          maxLength: 4
        unstructured:
          type: string
          description: Description of legal form in the case of unknown legal form
          minLength: 1
          maxLength: 256
      description: Legal form
    LegalCapacityRestriction:
      type: object
      required:
        - restrictionType
      properties:
        restrictionType:
          type: string
          description: Legal capacity restriction type
          minLength: 1
          maxLength: 1
        restrictionUntil:
          type: string
          format: date
          description: End date of the restriction
      description: Legal capacity restriction - type and end date
    CustomerIdentifier:
      type: object
      required:
        - typeCode
        - identifierValue
      properties:
        typeCode:
          type: string
          description: Identifier type code. RDM codebook CB_JuridicalPersonIdentificationType
        identifierValue:
          type: string
          description: Value of identifier
      description: Customers identifiers
    IdentificationDocument:
      type: object
      required:
        - documentNumber
        - typeCode
        - issuedBy
        - issuingCountryCode
      properties:
        typeCode:
          type: string
          description: Type of identification document - CDM type
          maxLength: 2
        documentNumber:
          type: string
          description: Official number of identification document - CDM number
          maxLength: 24
        issuingCountryCode:
          type: string
          description: Document issuing country - CB_Country - CDM issuingCountry
          maxLength: 2
        issuedBy:
          type: string
          description: Identification document issuing authority
          maxLength: 255
        issuedOn:
          type: string
          format: date
          description: When document was issued - CDM validFrom
        validTo:
          type: string
          format: date
          description: Document is valid until this date
        registerPlace:
          type: string
          description: Registration in OR or other register
        expired:
          type: boolean
          description: The document expiration flag
        lostDocument:
          type: boolean
          description: Losted document flag
      example:
        typeCode: A
        documentNumber: AB 123123
        issuingCountryCode: CZ
        issuedBy: Praha
        issuedOn: 2020-05-22
        validTo: 2030-05-22
        expired: false
        lostDocument: false
      description: Identification document
    PrimaryPhone:
      description: Customer primary phone.
      properties:
        phoneNumber:
          type: string
          description: Local part of phone number, including national destination code i.e. +420 777112233.
          maxLength: 19
          example: +420 777569933
        isMobile:
          type: boolean
          description: Flag whether it is a mobile phone. Flag is determined only for czech and slovak phone numbers.
          example: true
        confirmed:
          type: boolean
          description: Flag indicating that phone is confirmed by client
          example: true
      required:
        - phoneNumber
        - isMobile
      type: object
    PrimaryPhoneConfirmed:
      description: Customer primary phone confirmed by customer.
      properties:
        phoneNumber:
          type: string
          description: Local part of phone number, including national destination code i.e. +420 777112233.
          maxLength: 19
          example: +420 777569933
        isMobile:
          type: boolean
          description: Flag whether it is a mobile phone. Flag is determined only for czech and slovak phone numbers.
          example: true
      required:
        - phoneNumber
        - isMobile
      type: object
      deprecated: true
    PrimaryEmail:
      description: Customer primary email.
      properties:
        emailAddress:
          type: string
          description: Email
          maxLength: 254
          example: jefim_xaver_vyskocil@seznam.cz
        confirmed:
          type: boolean
          description: Flag indicating that phone is confirmed by client
          example: true
      required:
        - emailAddress
      type: object
    PrimaryEmailConfirmed:
      description: Customer primary email.
      properties:
        emailAddress:
          type: string
          description: Email
          maxLength: 254
          example: jefim_xaver_vyskocil@seznam.cz
      required:
        - emailAddress
      type: object
      deprecated: true
    PrimaryAddress:
      description: Primary address. if query parameter showLineAddress is set to true (default value is true) the address is returned. if query parameter showComponentAddress is set to true the componentAddress is returned.
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        componentAddress:
          $ref: '#/components/schemas/ComponentAddress'
        primaryAddressFrom:
          type: string
          format: date
          description: For natural person place of residence - date when customer starts live there
          example: 1992-09-10
    ContactAddress:
      description: "Contact address. Bank correspondence delivery address. If it is not filled out, correspondence is delivered to a permanent residence address. A contact address can also be entered as a P.O. BOX.
      if query parameter showLineAddress is set to true (default value is true) the address is returned. if query parameter showComponentAddress is set to true the componentAddress is returned."
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        componentAddress:
          $ref: '#/components/schemas/ComponentAddress'
        confirmed:
          type: boolean
          description: Flag indicating that address is confirmed by client
          example: true
    TemporaryStayAddress:
      description: "Temporary residence address. The address is obligatory for foreigners who do not have the Czech Republic filled in at their permanent address.
      if query parameter showLineAddress is set to true (default value is true) the address is returned. if query parameter showComponentAddress is set to true the componentAddress is returned."
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        componentAddress:
          $ref: '#/components/schemas/ComponentAddress'
    Address:
      description: Address
      type: object
      required:
        - street
        - city
        - countryCode
      properties:
        street:
          type: string
          description: First line of address (street, street number etc.)
          maxLength: 100
        deliveryDetails:
          type: string
          description: Address delivery details
          maxLength: 100
        city:
          type: string
          description: Third line of address (typically city)
          maxLength: 100
        postCode:
          type: string
          description: Post code, Postal code, ZIP code
          maxLength: 12
        countryCode:
          type: string
          description: Country code - two characters ISO code - CB_Country
          maxLength: 2
        addressPointId:
          type: string
          description: Identification of address point
          maxLength: 100
      example:
        street: Holubova 22
        city: Chlumec
        postCode: 40339
        countryCode: CZ
        addressPointId: 12313212
    ComponentAddress:
      description: "Component address.
Examples:
<ul>
    <li> Czech address with street, house number and street number: {
        \"street\": \"Wilsonova\",
        \"houseNumber\": \"101\",
        \"streetNumber\": \"1\",
        \"cityDistrict\": \"Vinohrady\",
        \"pragueDistrict\": \"Praha 1\",
        \"deliveryDetails\": \"Marketing department\",
        \"city\": \"Praha\",
        \"postCode\": \"11000\",
        \"countryCode\": \"CZ\",
        \"addressPointId\": \"21727554\"
      }

    <li> Czech address without street and with house number: {
        \"houseNumber\": \"6\",
        \"cityDistrict\": \"Dehtáry\",
        \"city\": \"Jenštejn \",
        \"postCode\": \"25091\",
        \"countryCode\": \"CZ\",
        \"addressPointId\": \"12644340\"
      }

    <li> Foreign address with street, house number: {
        \"street\": \"S Torrence Ave\",
        \"houseNumber\": \"12600\",
        \"deliveryDetails\": \"Marketing department\",
        \"city\": \"Chicago\",
        \"postCode\": \"60633\",
        \"countryCode\": \"US\",
        \"countrySubdivision\": \"IL\"
      }

    <li> Foreign address without street, with house number: {
        \"houseNumber\": \"16\",
        \"city\": \"Drzymałowice\",
        \"postCode\": \"59-407\",
        \"countryCode\": \"PL\",
      }

    <li> Post box address: {
        \"postBox\": \"1234 \",
        \"city\": \"Jenštejn \",
        \"postCode\": \"25091\",
        \"countryCode\": \"CZ\",
      }
</ul>
"
      type: object
      required:
        - city
        - postCode
        - countryCode
      properties:
        street:
          type: string
          description: Street name without a house number. The field is not filled out for cities without an street network or for post box address.
          maxLength: 100
          example: Holubova
        houseNumber:
          type: string
          description: The house number. It is not filled out for post box address. Foreign addresses should have it filled out. Czech addresses may have the building number in this attribute or the evidenceNumber.
          maxLength: 16
          example: 22
        evidenceNumber:
          type: string
          description: Evidence number. It is not filled out for post box address. Used only for Czech addresses. The evidence number has objects that are not assigned a house number. These are, for example, chalets.
          maxLength: 4
          example: 20
        streetNumber:
          type: string
          description: Street number. It is not filled out for post box address. Used only for Czech and Slovak addresses. A number that helps locate a house on a given street.
          maxLength: 4
          example: 9A
        cityDistrict:
          type: string
          description: City district. It is not filled out for post box address. Should be filled for all Czech addresses, at least for that with address point id.
          maxLength: 100
          example: Vinoř
        pragueDistrict:
          type: string
          description: Territory of the city district in the capital Prague (Praha 1 - 10 not Praha 1 - 22). It is not filled out for post box address.
          maxLength: 40
          example: Praha 9
        deliveryDetails:
          type: string
          description: A note of delivery specifying to whom delivery is intended.
          maxLength: 100
          example: Marketing department
        city:
          type: string
          description: The city name. Only the name of the city without its parts is given, i.e. for Prague we only mention Prague and not Prague 6 or Prague Dejvice.
          maxLength: 100
          example: Praha
        postBox:
          type: string
          description: P.O. Box number. For Czech addresses the value is number. It is filled out for post box address.
          maxLength: 16
          example: 756
        postCode:
          type: string
          description: Post code, Postal code, ZIP code.  For czech address it should be five-digit number between 10000 - 79999
          maxLength: 16
          example: 19017
        countrySubdivision:
          type: string
          description: It is used only for foreign addresses and mainly for states which are divided into large self-governing entities. E.g. USA, then state like Texas, Florida is filled out.
          maxLength: 35
          example: Texas
        countryCode:
          type: string
          description: Country code - two characters ISO code - CB_Country
          maxLength: 2
          example: CZ
        addressPointId:
          type: string
          description: Address point id from Register of Territorial Identification of Addresses and Properties in the Czech Republic or its equivalent in the Slovak Republic.
          maxLength: 100
          example: 12313212
    AddressFormats:
      description: Types of the address format.
      type: array
      items:
        $ref: '#/components/schemas/AddressFormat'
      example: [LINE, COMPONENT]
      default: [LINE]
    AddressFormat:
      description: |
        Type of the address format.
        * 'LINE'      - Address format in the form of address lines. An easy-to-read form for users. It is used, for example, for an address on a letter or a contractual document, or to display address to user in application. This notation returns in the Address schema definition
        * 'COMPONENT' - Address format in the form of address components. Harder for users to read form. Component writing is used primarily to enter an address or to exchange an address for machine processing. This notation returns in the ComponentAddress schema definition.
      type: string
      enum:
        - LINE
        - COMPONENT
      example: "LINE"
    CustomerSegment:
      type: object
      required:
        - segmentCode
        - subsegmentCode
      properties:
        segmentKeyCode:
          type: string
          description: Synthetic segment key code (connection of segmentCode + subsegmentCode) for referencing RDM codebook CB_CustomerSegment
        segmentCode:
          type: string
          description: Customer segment
        subsegmentCode:
          type: string
          description: Customer subsegment
      description: Customer segment and subsegment
    NaturalPersonPersonalData:
      type: object
      required:
        - firstName
        - surname
        - initials
      properties:
        firstName:
          type: string
          description: First name
          minLength: 1
          maxLength: 50
        surname:
          type: string
          description: Surname
          minLength: 1
          maxLength: 200
        genderCode:
          type: string
          description: Gender. KB supports only two genders - MALE and FEMALE
          enum:
            - M
            - F
        firstNameVocative:
          type: string
          description: First name vocative
          minLength: 1
          maxLength: 50
        surnameVocative:
          type: string
          description: Surname vocative
          minLength: 1
          maxLength: 200
        initials:
          type: string
          description: Subject initials from first name and surname
          minLength: 1
          maxLength: 2
      example:
        firstName: Josef
        surname: Novák
        gender: M
        firstNameVocative: Josefe
        surnameVocative: Nováku
        initials: JN
    CustomerSearchResult:
      type: object
      required:
        - isThereMore
        - resultRows
      properties:
        isThereMore:
          type: boolean
          description: Flag indicating whether search result can return more rows
        resultRows:
          type: array
          items:
            $ref : '#/components/schemas/CustomerSearchResultRow'
    CustomerSearchResultRow:
      type: object
      description: search result
      required:
        - customerId
        - restrictedCustomer
        - lifecycleStatusCode
      properties:
        customerId:
          type: integer
          format: int64
        party:
          $ref: '#/components/schemas/PartySearchResult'
        primaryIdentificationDocument:
          $ref: '#/components/schemas/IdentificationDocument'
        primaryAddress:
          $ref: '#/components/schemas/PrimaryAddress'
        customerSegment:
          $ref: '#/components/schemas/CustomerSegment'
        fixedCustomerSegment:
          $ref: '#/components/schemas/CustomerSegment'
        restrictedCustomer:
          type: boolean
          description: Customer of bank to which access is restricted. For example, an employee is considered to be restricted.
        lifecycleStatusCode:
          $ref: '#/components/schemas/LifecycleStatusEnum'
    PartySearchResult:
      type: object
      description: Abstract Party search result. Common ancestor for Natural Person, Legal Person and Entrepreneur
      discriminator:
        propertyName: objectType
      required:
        - objectType
        - legalStatus
      properties:
        objectType:
          type: string
          enum:
            - NaturalPersonSearchResult
            - EntrepreneurSearchResult
            - LegalPersonSearchResult
        legalStatus:
          type: string
          description: P - for Natural Person, E - for Entrepreneur, B - for Legal Person
          enum:
            - P
            - E
            - B
    LegalPersonSearchResult:
      description: Legal Person search result
      allOf:
        - $ref: '#/components/schemas/PartySearchResult'
        - type: object
          required:
            - name
            - nameKb
          properties:
            name:
              type: string
              description: Company name. Is filled with name from business register. When name from business register does not exists, KB custom search name is used instead.
              minLength: 1
              maxLength: 200
            businessRegisterName:
              type: string
              description: Company name. Name from business register.
              minLength: 1
              maxLength: 200
            nameKb:
              type: string
              description: Custom KB search name. This field is used for searching.
              minLength: 1
              maxLength: 200
            establishedOn:
              type: string
              format: date
              description: Company established date
            czechIdentificationNumber:
              type: string
              description: Czech identification number
              minLength: 1
              maxLength: 30
    EntrepreneurSearchResult:
      description: Entrepreneur search result
      allOf:
        - $ref: '#/components/schemas/PartySearchResult'
        - type: object
          required:
            - name
            - nameKb
          properties:
            name:
              type: string
              description: Entrepreneur name. Is filled with name from business register. When name from business register does not exists, KB custom search name is used instead.
              minLength: 1
              maxLength: 200
            businessRegisterName:
              type: string
              description: Entrepreneur name. Name from business register.
              minLength: 1
              maxLength: 200
            nameKb:
              type: string
              description: Custom KB search name. This field is used for searching.
              minLength: 1
              maxLength: 200
            establishedOn:
              type: string
              format: date
              description: Company established date
            czechIdentificationNumber:
              type: string
              description: Czech identification number
              minLength: 1
              maxLength: 30
    NaturalPersonSearchResult:
      description: Natural Person search result
      allOf:
        - $ref: '#/components/schemas/PartySearchResult'
        - type: object
          required:
            - surname
          properties:
            title:
              type: string
              description: Title before name, i.e. prof. Ing., gen. Ing.
              minLength: 1
              maxLength: 15
            firstName:
              type: string
              description: First name
              minLength: 1
              maxLength: 50
            surname:
              type: string
              description: Surname
              minLength: 1
              maxLength: 200
            birthDate:
              type: string
              format: date
              description: Date of birth
            genderCode:
              type: string
              description: Gender
              enum:
                - M
                - F
            czechBirthNumber:
              type: string
              description: Czech birth number
              example:
                7908205184
    LifecycleStatusEnum:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - ARCHIVED
      description: Customer lifecycle status
    CustomerIdentification:
      type: object
      description: The customer's identification entity. Entity contains method, identificaiton date and identifying company.
      required:
        - identificationMethodCode
      properties:
        identificationMethodCode:
          type: string
          description: Code of the method of identifying the subject. Value is defined in the code list CB_IdentificationMethodType
          maxLength: 2
          example: "1"
        identificationDate:
          type: string
          format: 'date-time'
          description: The date and time the subject was first identified.
          example: "2020-10-10T17:32:28Z"
        czechIdentificationNumber:
          type: string
          description: Czech identification number of the company that made the subject identification. Value is mandatory only for specific identification method codes. See CB_IdentificationMethodType.
          minLength: 1
          maxLength: 30
          example: "45317054"
    Fatca:
      type: object
      required:
        - statusCode
      properties:
        statusCode:
          type: integer
          format: int32
          description: FATCA status code - RDM codebook CB_FATCAStatus
          example: 1
        statusDate:
          type: string
          format: date
          description: Date of FATCA status determination
          example: 2021-08-20
      description: FATCA (Foreign Account Tax Compliance Act)
    CustomerTurnover:
      type: object
      required:
        - year
        - turnover
      properties:
        year:
          type: integer
          format: int32
          description: Year of turnover
          example: 2020
        turnover:
          type: integer
          format: int64
          description: Customer turnover per year
          example: 150000
      description: Customer turnover in one year
    FinancialProfile:
      type: object
      properties:
        mainSourceOfEarnings:
          $ref: '#/components/schemas/MainSourceOfEarnings'
        netMonthEarning:
          type: number
          description: Net monthly earning
          example: 150000
        netMonthEarningCode:
          type: string
          maxLength: 1
          description: Code of interval net monthly earning - CM Codebook of net month earnings - EP_C_NET_MONTH_EARNING
          example: A
        savingInvestmentPotencial:
          type: number
          description: Saving investment potencial
          example: 150000
      description: Customer financial profile
    Employment:
      type: object
      properties:
        categoryCode:
          type: integer
          format: int32
          description: Profession category code - codebook CSC PROF_CAT1, RDM CB_Prof_Cat1
          example: 2
        professionCode:
          type: integer
          format: int32
          description: Profession code - codebook CSC PROF_CAT2
          example: 14
      description: Customer employment profession and category
    MainSourceOfEarnings:
      type: object
      required:
        - code
      properties:
        code:
          type: integer
          format: int32
          description: Code of the source of earnings - CSC codebook ZDROJ_PRIJ
          example: 1
        description:
          type: string
          description: Description of the source of earnings- only for code 6 / 'other source'
      description: Main source of earnings
    Housing:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Code of housing - codebook CB_Housing_Type
          example: OW
        description:
          type: string
          description: Description of housing - only for code 'OT' / 'other'
          example: popis bydleni
      description: Customer turnover in one year
    Kyc:
      type: object
      properties:
        esaCode:
          type: string
          description: Economic sector code according to ESA2010 as amended by the CNB - RDM codebook CB_ESAInstitutionalSectorCNB
          example: 1100100
        isInsurable:
          type: boolean
          description: Flag indicating that customer is insurable
          example: true
        naturalPersonKyc:
          $ref: '#/components/schemas/NaturalPersonKyc'
        juridicalPersonKyc:
          $ref: '#/components/schemas/JuridicalPersonKyc'
      description: Customer KYC data
    NaturalPersonKyc:
      type: object
      properties:
        educationCode:
          type: string
          description: Code of education - codebook CB_EducationDegree
          example: Z
        financialProfile:
          $ref: '#/components/schemas/FinancialProfile'
        housing:
          $ref: '#/components/schemas/Housing'
        employment:
          $ref: '#/components/schemas/Employment'
      description: Natural person KYC data. Object is only present when customer is type of NaturalPerson.
    JuridicalPersonKyc:
      type: object
      properties:
        numberOfEmployees:
          type: integer
          format: int32
          description: Number of employees
          example: 150
        naceCode:
          type: string
          description: Code of economic activity according to the new classification of economic activities Only for Juridical Person - RDM codebook CB_NACECode
          example: 261100
        customerTurnovers:
          type: array
          items:
            $ref: '#/components/schemas/CustomerTurnover'
      description: Juridical person KYC data. Object is only present when customer is type of JuridicalPerson.
    PoliticalExposition:
      type: object
      description: Information about political exposure
      required:
        - functionCode
        - coutryCode
        - levelCode
        - statusCode
      properties:
        functionCode:
          type: string
          description: Code of political office. Value must match CB_PoliticallyExposedPersonFunction code list
          maxLength: 2
          example: "16"
        functionDescription:
          type: string
          description: Text description of the function. Description is mandatory when the function code is set to a value that has the mandatory_note flag set to true in the CB_PoliticallyExposedPersonFunction code list.
          maxLength: 100
          example: Senator assistent
        levelCode:
          type: string
          description: Risk level of a politically exposed person. Value from code list CB_PoliticallyExposedPersonLevel
          maxLength: 2
          example: LO
        statusCode:
          type: string
          maxLength: 1
          description: Status of politically exposed person. The value should match the code list CB_PoliticallyExposedPersonStatus. Two values are defined ACTIVE - if in office and PASSIVE - should be set three years after the end of public office.
          example: A
        countryCode:
          type: string
          description: Country of political office, two-letter ISO code, defined in CB_Country codebook.
          maxLength: 50
          example: CZ
        endDateOfPoliticalActivity:
          type: string
          format: date
          description: Date of termination of public office, may even be foreseen for the future. When the date expires, the status should be set to passive.
          example: "2020-01-09"
    Error:
      type: object
      properties:
        httpStatusCode:
          type: integer
          description: Http status code
        category:
          type: integer
          description: Error category
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        uuid:
          type: string
          description: Error uuid
        detail:
          description: Error detail
      required:
        - httpStatusCode
        - category
        - code
        - message
        - uuid
  parameters:
    X-KB-Caller-System-Identity:
      name: X-KB-Caller-System-Identity
      description: "[Caller system](https://wiki.kb.cz/confluence/pages/viewpage.action?pageId=217274116#Komunika%C4%8Dn%C3%ADhlavi%C4%8Dkyverze2REST-CallerSystemIdentity)"
      in: header
      required: true
      schema:
        type: string
        example: "{\"app\":\"CM\",\"appComp\":\"cm-dch-prs-consumer\"}"
    X-KB-Orig-System-Identity:
      name: X-KB-Orig-System-Identity
      description: "[System that as a first triggered the request](https://wiki.kb.cz/confluence/pages/viewpage.action?pageId=217274116#Komunika%C4%8Dn%C3%ADhlavi%C4%8Dkyverze2REST-OrigSystemIdentity)"
      in: header
      required: true
      schema:
        type: string
        example: "{\"app\":\"CM\",\"appComp\":\"CM_FE.INT\"}"
    X-KB-Party-Identity-In-Service:
      name: X-KB-Party-Identity-In-Service
      description: "[Human user identity that triggered the request](https://wiki.kb.cz/confluence/pages/viewpage.action?pageId=217274116#Komunika%C4%8Dn%C3%ADhlavi%C4%8Dkyverze2REST-PartyIdentityInService)"
      in: header
      required: true
      schema:
        type: string
        example: "{\"partyIdIS\":[{\"partyId\":{\"id\":\"A09FK3\",\"idScheme\":{\"code\":\"KBUID\"}},\"usg\":\"BA\"},{\"partyId\":{\"id\":\"JMARKOVA\",\"idScheme\":{\"code\":\"KBAD\"}},\"usg\":\"BA\"}]}"
    X-B3-TraceId:
      name: X-B3-TraceId
      description: "[Trace Id](https://wiki.kb.cz/confluence/pages/viewpage.action?pageId=217274116#Komunika%C4%8Dn%C3%ADhlavi%C4%8Dkyverze2REST-TraceId)"
      in: header
      required: true
      schema:
        type: string
        example: 614b21fe65a3e6cbf8507e2a3d304691