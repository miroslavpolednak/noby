// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace cz.mpss.api.noby.notification.sendapi.v1
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	///  This element is choice - only one of the child fields can be filled.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class Party : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""Party"",""doc"":"" This element is choice - only one of the child fields can be filled."",""namespace"":""cz.mpss.api.noby.notification.sendapi.v1"",""fields"":[{""name"":""legalPerson"",""default"":null,""type"":[""null"",{""type"":""record"",""name"":""LegalPerson"",""doc"":""Juridical person that is NOT <b>fixed</b> to <b>exactly one </b>natural person. CDM entity name(s): LegalPerson."",""namespace"":""cz.mpss.api.noby.notification.sendapi.v1"",""fields"":[{""name"":""name"",""doc"":""Official name of juridical person. CDM attribute class name: JuridicalPersonName."",""type"":{""type"":""string"",""avro.java.string"":""String"",""pattern"":""^.{0,255}$""}}]}]},{""name"":""naturalPerson"",""default"":null,""type"":[""null"",{""type"":""record"",""name"":""NaturalPerson"",""doc"":""Flesh and blood party - human being.Fyzicka osobaE.g. Jozko Mrkvicka. CDM entity name(s): NaturalPerson."",""namespace"":""cz.mpss.api.noby.notification.sendapi.v1"",""fields"":[{""name"":""firstName"",""doc"":""First name of the NaturalPerson. CDM attribute class name: NaturalPersonFirstName."",""type"":{""type"":""string"",""avro.java.string"":""String"",""pattern"":""^.{0,40}$""}},{""name"":""middleName"",""doc"":""Middle name of the natural person. CDM attribute class name: NaturalPersonMiddleName."",""default"":null,""type"":[""null"",{""type"":""string"",""avro.java.string"":""String"",""pattern"":""^.{0,40}$""}]},{""name"":""surname"",""doc"":""Surname of the NaturalPerson. CDM attribute class name: NaturalPersonSurname."",""type"":{""type"":""string"",""avro.java.string"":""String"",""pattern"":""^.{0,80}$""}}]}]}]}");
		private cz.mpss.api.noby.notification.sendapi.v1.LegalPerson _legalPerson;
		private cz.mpss.api.noby.notification.sendapi.v1.NaturalPerson _naturalPerson;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return Party._SCHEMA;
			}
		}
		public cz.mpss.api.noby.notification.sendapi.v1.LegalPerson legalPerson
		{
			get
			{
				return this._legalPerson;
			}
			set
			{
				this._legalPerson = value;
			}
		}
		public cz.mpss.api.noby.notification.sendapi.v1.NaturalPerson naturalPerson
		{
			get
			{
				return this._naturalPerson;
			}
			set
			{
				this._naturalPerson = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.legalPerson;
			case 1: return this.naturalPerson;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.legalPerson = (cz.mpss.api.noby.notification.sendapi.v1.LegalPerson)fieldValue; break;
			case 1: this.naturalPerson = (cz.mpss.api.noby.notification.sendapi.v1.NaturalPerson)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
