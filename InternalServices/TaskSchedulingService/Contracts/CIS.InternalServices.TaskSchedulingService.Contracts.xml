<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CIS.InternalServices.TaskSchedulingService.Contracts</name>
    </assembly>
    <members>
        <member name="T:CIS.InternalServices.TaskSchedulingService.Contracts.GetAvailableTasksReflection">
            <summary>Holder for reflection information generated from Messages/GetAvailableTasks.proto</summary>
        </member>
        <member name="P:CIS.InternalServices.TaskSchedulingService.Contracts.GetAvailableTasksReflection.Descriptor">
            <summary>File descriptor for Messages/GetAvailableTasks.proto</summary>
        </member>
        <member name="T:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingServiceV1Reflection">
            <summary>Holder for reflection information generated from TaskSchedulingService.v1.proto</summary>
        </member>
        <member name="P:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingServiceV1Reflection.Descriptor">
            <summary>File descriptor for TaskSchedulingService.v1.proto</summary>
        </member>
        <member name="P:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceBase">
            <summary>Base class for server-side implementations of TaskSchedulingService</summary>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceBase.GetAvailableTasks(CIS.InternalServices.TaskSchedulingService.Contracts.GetAvailableTasksRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Vrací instanci konkrétní služby pro dané prostředí a typ
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient">
            <summary>Client for TaskSchedulingService</summary>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for TaskSchedulingService</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for TaskSchedulingService that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient.GetAvailableTasks(CIS.InternalServices.TaskSchedulingService.Contracts.GetAvailableTasksRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Vrací instanci konkrétní služby pro dané prostředí a typ
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient.GetAvailableTasks(CIS.InternalServices.TaskSchedulingService.Contracts.GetAvailableTasksRequest,Grpc.Core.CallOptions)">
            <summary>
            Vrací instanci konkrétní služby pro dané prostředí a typ
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient.GetAvailableTasksAsync(CIS.InternalServices.TaskSchedulingService.Contracts.GetAvailableTasksRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Vrací instanci konkrétní služby pro dané prostředí a typ
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient.GetAvailableTasksAsync(CIS.InternalServices.TaskSchedulingService.Contracts.GetAvailableTasksRequest,Grpc.Core.CallOptions)">
            <summary>
            Vrací instanci konkrétní služby pro dané prostředí a typ
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.BindService(CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.BindService(Grpc.Core.ServiceBinderBase,CIS.InternalServices.TaskSchedulingService.Contracts.v1.TaskSchedulingService.TaskSchedulingServiceBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
    </members>
</doc>
